//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Encryptics.WebPortal.PortalService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.encryptics.net/webservices/", ConfigurationName="PortalService.PortalServiceSoap")]
    public interface PortalServiceSoap {
        
        // CODEGEN: Generating message contract since message UpdateUsageRightsGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUsageRightsGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResponse UpdateUsageRightsGroup(Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUsageRightsGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResponse> UpdateUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUsageRightsGroupStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUsageRightsGroupStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusResponse UpdateUsageRightsGroupStatus(Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUsageRightsGroupStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusResponse> UpdateUsageRightsGroupStatusAsync(Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserResponse UpdateUser(Encryptics.WebPortal.PortalService.UpdateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserResponse> UpdateUserAsync(Encryptics.WebPortal.PortalService.UpdateUserRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserAdminStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserAdminStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserAdminStatusResponse UpdateUserAdminStatus(Encryptics.WebPortal.PortalService.UpdateUserAdminStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserAdminStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserAdminStatusResponse> UpdateUserAdminStatusAsync(Encryptics.WebPortal.PortalService.UpdateUserAdminStatusRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserCompanyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserCompanyResponse UpdateUserCompany(Encryptics.WebPortal.PortalService.UpdateUserCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserCompanyResponse> UpdateUserCompanyAsync(Encryptics.WebPortal.PortalService.UpdateUserCompanyRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserContactInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserContactInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserContactInfoResponse UpdateUserContactInfo(Encryptics.WebPortal.PortalService.UpdateUserContactInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserContactInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserContactInfoResponse> UpdateUserContactInfoAsync(Encryptics.WebPortal.PortalService.UpdateUserContactInfoRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserPasswordRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserPasswordResponse UpdateUserPassword(Encryptics.WebPortal.PortalService.UpdateUserPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserPasswordResponse> UpdateUserPasswordAsync(Encryptics.WebPortal.PortalService.UpdateUserPasswordRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserResetPasswordRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserResetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserResetPasswordResponse UpdateUserResetPassword(Encryptics.WebPortal.PortalService.UpdateUserResetPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserResetPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserResetPasswordResponse> UpdateUserResetPasswordAsync(Encryptics.WebPortal.PortalService.UpdateUserResetPasswordRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserSecurityQuestionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserSecurityQuestion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionResponse UpdateUserSecurityQuestion(Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserSecurityQuestion", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionResponse> UpdateUserSecurityQuestionAsync(Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserStatusResponse UpdateUserStatus(Encryptics.WebPortal.PortalService.UpdateUserStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserStatusResponse> UpdateUserStatusAsync(Encryptics.WebPortal.PortalService.UpdateUserStatusRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserUnlockRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserUnlock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserUnlockResponse UpdateUserUnlock(Encryptics.WebPortal.PortalService.UpdateUserUnlockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserUnlock", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserUnlockResponse> UpdateUserUnlockAsync(Encryptics.WebPortal.PortalService.UpdateUserUnlockRequest request);
        
        // CODEGEN: Generating message contract since message UpdateUserUsageRightsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserUsageRights", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateUserUsageRightsResponse UpdateUserUsageRights(Encryptics.WebPortal.PortalService.UpdateUserUsageRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateUserUsageRights", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserUsageRightsResponse> UpdateUserUsageRightsAsync(Encryptics.WebPortal.PortalService.UpdateUserUsageRightsRequest request);
        
        // CODEGEN: Generating message contract since message UserLoginRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UserLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UserLoginResponse UserLogin(Encryptics.WebPortal.PortalService.UserLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UserLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UserLoginResponse> UserLoginAsync(Encryptics.WebPortal.PortalService.UserLoginRequest request);
        
        // CODEGEN: Generating message contract since message UserLogoutRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UserLogout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UserLogoutResponse UserLogout(Encryptics.WebPortal.PortalService.UserLogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UserLogout", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UserLogoutResponse> UserLogoutAsync(Encryptics.WebPortal.PortalService.UserLogoutRequest request);
        
        // CODEGEN: Generating message contract since message TokenLoginRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/TokenLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.TokenLoginResponse TokenLogin(Encryptics.WebPortal.PortalService.TokenLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/TokenLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.TokenLoginResponse> TokenLoginAsync(Encryptics.WebPortal.PortalService.TokenLoginRequest request);
        
        // CODEGEN: Generating message contract since message ValidateTokenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ValidateToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.ValidateTokenResponse ValidateToken(Encryptics.WebPortal.PortalService.ValidateTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ValidateToken", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ValidateTokenResponse> ValidateTokenAsync(Encryptics.WebPortal.PortalService.ValidateTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/VerifyUserSecurityQuestion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool VerifyUserSecurityQuestion(string email, int question_number, string answer_hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/VerifyUserSecurityQuestion", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> VerifyUserSecurityQuestionAsync(string email, int question_number, string answer_hash);
        
        // CODEGEN: Generating message contract since message AccountActivationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/AccountActivation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.AccountActivationResponse AccountActivation(Encryptics.WebPortal.PortalService.AccountActivationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/AccountActivation", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationResponse> AccountActivationAsync(Encryptics.WebPortal.PortalService.AccountActivationRequest request);
        
        // CODEGEN: Generating message contract since message AccountActivationByIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/AccountActivationByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.AccountActivationByIDResponse AccountActivationByID(Encryptics.WebPortal.PortalService.AccountActivationByIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/AccountActivationByID", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationByIDResponse> AccountActivationByIDAsync(Encryptics.WebPortal.PortalService.AccountActivationByIDRequest request);
        
        // CODEGEN: Generating message contract since message AccountActivationWithPasswordRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/AccountActivationWithPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.AccountActivationWithPasswordResponse AccountActivationWithPassword(Encryptics.WebPortal.PortalService.AccountActivationWithPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/AccountActivationWithPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationWithPasswordResponse> AccountActivationWithPasswordAsync(Encryptics.WebPortal.PortalService.AccountActivationWithPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/AccountRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.AccountRegistrationStatus AccountRegistration(string account_name, string first_name, string last_name, string password, Encryptics.WebPortal.PortalService.SecurityQuestion[] security_questions, Encryptics.WebPortal.PortalService.OriginSite registration_site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/AccountRegistration", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountRegistrationStatus> AccountRegistrationAsync(string account_name, string first_name, string last_name, string password, Encryptics.WebPortal.PortalService.SecurityQuestion[] security_questions, Encryptics.WebPortal.PortalService.OriginSite registration_site);
        
        // CODEGEN: Generating message contract since message ExpireTokenSessionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ExpireTokenSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.ExpireTokenSessionResponse ExpireTokenSession(Encryptics.WebPortal.PortalService.ExpireTokenSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ExpireTokenSession", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ExpireTokenSessionResponse> ExpireTokenSessionAsync(Encryptics.WebPortal.PortalService.ExpireTokenSessionRequest request);
        
        // CODEGEN: Generating message contract since message GetAccountActivationLinkStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccountActivationLinkStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusResponse GetAccountActivationLinkStatus(Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccountActivationLinkStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusResponse> GetAccountActivationLinkStatusAsync(Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusRequest request);
        
        // CODEGEN: Generating message contract since message GetAccountsListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccountsList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetAccountsListResponse GetAccountsList(Encryptics.WebPortal.PortalService.GetAccountsListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccountsList", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountsListResponse> GetAccountsListAsync(Encryptics.WebPortal.PortalService.GetAccountsListRequest request);
        
        // CODEGEN: Generating message contract since message GetAccessGroupDetailsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccessGroupDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetAccessGroupDetailsResponse GetAccessGroupDetails(Encryptics.WebPortal.PortalService.GetAccessGroupDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccessGroupDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupDetailsResponse> GetAccessGroupDetailsAsync(Encryptics.WebPortal.PortalService.GetAccessGroupDetailsRequest request);
        
        // CODEGEN: Generating message contract since message GetAccessGroupsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccessGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetAccessGroupsResponse GetAccessGroups(Encryptics.WebPortal.PortalService.GetAccessGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccessGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupsResponse> GetAccessGroupsAsync(Encryptics.WebPortal.PortalService.GetAccessGroupsRequest request);
        
        // CODEGEN: Generating message contract since message GetAccessGroupUsersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccessGroupUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetAccessGroupUsersResponse GetAccessGroupUsers(Encryptics.WebPortal.PortalService.GetAccessGroupUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccessGroupUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupUsersResponse> GetAccessGroupUsersAsync(Encryptics.WebPortal.PortalService.GetAccessGroupUsersRequest request);
        
        // CODEGEN: Generating message contract since message GetAccessGroupUsersArchivedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccessGroupUsersArchived", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedResponse GetAccessGroupUsersArchived(Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccessGroupUsersArchived", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedResponse> GetAccessGroupUsersArchivedAsync(Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedRequest request);
        
        // CODEGEN: Generating message contract since message GetCompanyDetailsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetCompanyDetailsResponse GetCompanyDetails(Encryptics.WebPortal.PortalService.GetCompanyDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDetailsResponse> GetCompanyDetailsAsync(Encryptics.WebPortal.PortalService.GetCompanyDetailsRequest request);
        
        // CODEGEN: Generating message contract since message GetCompanyDevicesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDevices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetCompanyDevicesResponse GetCompanyDevices(Encryptics.WebPortal.PortalService.GetCompanyDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDevices", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDevicesResponse> GetCompanyDevicesAsync(Encryptics.WebPortal.PortalService.GetCompanyDevicesRequest request);
        
        // CODEGEN: Generating message contract since message GetCompanyDLPConfigRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDLPConfig", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetCompanyDLPConfigResponse GetCompanyDLPConfig(Encryptics.WebPortal.PortalService.GetCompanyDLPConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDLPConfig", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDLPConfigResponse> GetCompanyDLPConfigAsync(Encryptics.WebPortal.PortalService.GetCompanyDLPConfigRequest request);
        
        // CODEGEN: Generating message contract since message GetCompanyDomainsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDomains", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetCompanyDomainsResponse GetCompanyDomains(Encryptics.WebPortal.PortalService.GetCompanyDomainsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDomains", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDomainsResponse> GetCompanyDomainsAsync(Encryptics.WebPortal.PortalService.GetCompanyDomainsRequest request);
        
        // CODEGEN: Generating message contract since message GetCompanyEmailTemplateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyEmailTemplate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateResponse GetCompanyEmailTemplate(Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyEmailTemplate", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateResponse> GetCompanyEmailTemplateAsync(Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateRequest request);
        
        // CODEGEN: Generating message contract since message GetCompanyGeneologyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyGeneology", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetCompanyGeneologyResponse GetCompanyGeneology(Encryptics.WebPortal.PortalService.GetCompanyGeneologyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyGeneology", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyGeneologyResponse> GetCompanyGeneologyAsync(Encryptics.WebPortal.PortalService.GetCompanyGeneologyRequest request);
        
        // CODEGEN: Generating message contract since message GetCompanyGWConfigRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyGWConfig", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetCompanyGWConfigResponse GetCompanyGWConfig(Encryptics.WebPortal.PortalService.GetCompanyGWConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyGWConfig", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyGWConfigResponse> GetCompanyGWConfigAsync(Encryptics.WebPortal.PortalService.GetCompanyGWConfigRequest request);
        
        // CODEGEN: Generating message contract since message GetDeviceDetailsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDeviceDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDeviceDetailsResponse GetDeviceDetails(Encryptics.WebPortal.PortalService.GetDeviceDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDeviceDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDeviceDetailsResponse> GetDeviceDetailsAsync(Encryptics.WebPortal.PortalService.GetDeviceDetailsRequest request);
        
        // CODEGEN: Generating message contract since message GetDeviceListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDeviceList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDeviceListResponse GetDeviceList(Encryptics.WebPortal.PortalService.GetDeviceListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDeviceList", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDeviceListResponse> GetDeviceListAsync(Encryptics.WebPortal.PortalService.GetDeviceListRequest request);
        
        // CODEGEN: Generating message contract since message GetEncryptionDetailsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetEncryptionDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetEncryptionDetailsResponse GetEncryptionDetails(Encryptics.WebPortal.PortalService.GetEncryptionDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetEncryptionDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEncryptionDetailsResponse> GetEncryptionDetailsAsync(Encryptics.WebPortal.PortalService.GetEncryptionDetailsRequest request);
        
        // CODEGEN: Generating message contract since message GetCompanyDLPSummaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDLPSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryResponse GetCompanyDLPSummary(Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetCompanyDLPSummary", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryResponse> GetCompanyDLPSummaryAsync(Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPJustificationsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPJustifications", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPJustificationsResponse GetDLPJustifications(Encryptics.WebPortal.PortalService.GetDLPJustificationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPJustifications", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPJustificationsResponse> GetDLPJustificationsAsync(Encryptics.WebPortal.PortalService.GetDLPJustificationsRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPPoliciesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPPolicies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPPoliciesResponse GetDLPPolicies(Encryptics.WebPortal.PortalService.GetDLPPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPPolicies", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPPoliciesResponse> GetDLPPoliciesAsync(Encryptics.WebPortal.PortalService.GetDLPPoliciesRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPRuleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPRule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPRuleResponse GetDLPRule(Encryptics.WebPortal.PortalService.GetDLPRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPRule", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRuleResponse> GetDLPRuleAsync(Encryptics.WebPortal.PortalService.GetDLPRuleRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPRulesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPRules", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPRulesResponse GetDLPRules(Encryptics.WebPortal.PortalService.GetDLPRulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPRules", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRulesResponse> GetDLPRulesAsync(Encryptics.WebPortal.PortalService.GetDLPRulesRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPRulesVisibilityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPRulesVisibility", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityResponse GetDLPRulesVisibility(Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPRulesVisibility", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityResponse> GetDLPRulesVisibilityAsync(Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPRuleTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPRuleTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPRuleTypesResponse GetDLPRuleTypes(Encryptics.WebPortal.PortalService.GetDLPRuleTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPRuleTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRuleTypesResponse> GetDLPRuleTypesAsync(Encryptics.WebPortal.PortalService.GetDLPRuleTypesRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPViolationsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPViolations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPViolationsResponse GetDLPViolations(Encryptics.WebPortal.PortalService.GetDLPViolationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPViolations", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsResponse> GetDLPViolationsAsync(Encryptics.WebPortal.PortalService.GetDLPViolationsRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPViolationsRuleOverviewByRuleTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPViolationsRuleOverviewByRuleType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeResponse GetDLPViolationsRuleOverviewByRuleType(Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPViolationsRuleOverviewByRuleType", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeResponse> GetDLPViolationsRuleOverviewByRuleTypeAsync(Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeRequest request);
        
        // CODEGEN: Generating message contract since message GetDLPViolationsRuleTypeOverviewRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPViolationsRuleTypeOverview", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewResponse GetDLPViolationsRuleTypeOverview(Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetDLPViolationsRuleTypeOverview", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewResponse> GetDLPViolationsRuleTypeOverviewAsync(Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewRequest request);
        
        // CODEGEN: Generating message contract since message GetEntityRoleUsersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetEntityRoleUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetEntityRoleUsersResponse GetEntityRoleUsers(Encryptics.WebPortal.PortalService.GetEntityRoleUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetEntityRoleUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEntityRoleUsersResponse> GetEntityRoleUsersAsync(Encryptics.WebPortal.PortalService.GetEntityRoleUsersRequest request);
        
        // CODEGEN: Generating message contract since message GetEntityUsageSummariesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetEntityUsageSummaries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetEntityUsageSummariesResponse GetEntityUsageSummaries(Encryptics.WebPortal.PortalService.GetEntityUsageSummariesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetEntityUsageSummaries", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEntityUsageSummariesResponse> GetEntityUsageSummariesAsync(Encryptics.WebPortal.PortalService.GetEntityUsageSummariesRequest request);
        
        // CODEGEN: Generating message contract since message GetGrantableCompaniesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetGrantableCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetGrantableCompaniesResponse GetGrantableCompanies(Encryptics.WebPortal.PortalService.GetGrantableCompaniesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetGrantableCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetGrantableCompaniesResponse> GetGrantableCompaniesAsync(Encryptics.WebPortal.PortalService.GetGrantableCompaniesRequest request);
        
        // CODEGEN: Generating message contract since message GetGrantableRolesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetGrantableRoles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetGrantableRolesResponse GetGrantableRoles(Encryptics.WebPortal.PortalService.GetGrantableRolesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetGrantableRoles", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetGrantableRolesResponse> GetGrantableRolesAsync(Encryptics.WebPortal.PortalService.GetGrantableRolesRequest request);
        
        // CODEGEN: Generating message contract since message GetImportUsersAccountsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetImportUsersAccounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetImportUsersAccountsResponse GetImportUsersAccounts(Encryptics.WebPortal.PortalService.GetImportUsersAccountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetImportUsersAccounts", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetImportUsersAccountsResponse> GetImportUsersAccountsAsync(Encryptics.WebPortal.PortalService.GetImportUsersAccountsRequest request);
        
        // CODEGEN: Generating message contract since message GetImportUsersRequestsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetImportUsersRequests", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetImportUsersRequestsResponse GetImportUsersRequests(Encryptics.WebPortal.PortalService.GetImportUsersRequestsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetImportUsersRequests", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetImportUsersRequestsResponse> GetImportUsersRequestsAsync(Encryptics.WebPortal.PortalService.GetImportUsersRequestsRequest request);
        
        // CODEGEN: Generating message contract since message GetLexiconDLPTermsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetLexiconDLPTerms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetLexiconDLPTermsResponse GetLexiconDLPTerms(Encryptics.WebPortal.PortalService.GetLexiconDLPTermsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetLexiconDLPTerms", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetLexiconDLPTermsResponse> GetLexiconDLPTermsAsync(Encryptics.WebPortal.PortalService.GetLexiconDLPTermsRequest request);
        
        // CODEGEN: Generating message contract since message GetMalwareFilesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetMalwareFilesResponse GetMalwareFiles(Encryptics.WebPortal.PortalService.GetMalwareFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareFiles", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFilesResponse> GetMalwareFilesAsync(Encryptics.WebPortal.PortalService.GetMalwareFilesRequest request);
        
        // CODEGEN: Generating message contract since message GetMalwareFileTypeRiskProfileRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareFileTypeRiskProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileResponse GetMalwareFileTypeRiskProfile(Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareFileTypeRiskProfile", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileResponse> GetMalwareFileTypeRiskProfileAsync(Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileRequest request);
        
        // CODEGEN: Generating message contract since message GetMalwareFileTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareFileTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetMalwareFileTypesResponse GetMalwareFileTypes(Encryptics.WebPortal.PortalService.GetMalwareFileTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareFileTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypesResponse> GetMalwareFileTypesAsync(Encryptics.WebPortal.PortalService.GetMalwareFileTypesRequest request);
        
        // CODEGEN: Generating message contract since message GetMalwareFileTypesOverviewRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareFileTypesOverview", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewResponse GetMalwareFileTypesOverview(Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareFileTypesOverview", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewResponse> GetMalwareFileTypesOverviewAsync(Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewRequest request);
        
        // CODEGEN: Generating message contract since message GetMalwareRiskOverviewRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareRiskOverview", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewResponse GetMalwareRiskOverview(Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetMalwareRiskOverview", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewResponse> GetMalwareRiskOverviewAsync(Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewRequest request);
        
        // CODEGEN: Generating message contract since message GetPendingAccountsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetPendingAccounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetPendingAccountsResponse GetPendingAccounts(Encryptics.WebPortal.PortalService.GetPendingAccountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetPendingAccounts", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetPendingAccountsResponse> GetPendingAccountsAsync(Encryptics.WebPortal.PortalService.GetPendingAccountsRequest request);
        
        // CODEGEN: Generating message contract since message GetResetPasswordLinkStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetResetPasswordLinkStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusResponse GetResetPasswordLinkStatus(Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetResetPasswordLinkStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusResponse> GetResetPasswordLinkStatusAsync(Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusRequest request);
        
        // CODEGEN: Generating message contract since message GetSoftwarePlatformsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetSoftwarePlatforms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetSoftwarePlatformsResponse GetSoftwarePlatforms(Encryptics.WebPortal.PortalService.GetSoftwarePlatformsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetSoftwarePlatforms", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetSoftwarePlatformsResponse> GetSoftwarePlatformsAsync(Encryptics.WebPortal.PortalService.GetSoftwarePlatformsRequest request);
        
        // CODEGEN: Generating message contract since message GetSoftwareReleasesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetSoftwareReleases", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetSoftwareReleasesResponse GetSoftwareReleases(Encryptics.WebPortal.PortalService.GetSoftwareReleasesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetSoftwareReleases", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetSoftwareReleasesResponse> GetSoftwareReleasesAsync(Encryptics.WebPortal.PortalService.GetSoftwareReleasesRequest request);
        
        // CODEGEN: Generating message contract since message GetTopCompaniesByDecryptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesByDecryptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsResponse GetTopCompaniesByDecryptions(Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesByDecryptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsResponse> GetTopCompaniesByDecryptionsAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsRequest request);
        
        // CODEGEN: Generating message contract since message GetTopCompaniesByEncryptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesByEncryptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsResponse GetTopCompaniesByEncryptions(Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesByEncryptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsResponse> GetTopCompaniesByEncryptionsAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsRequest request);
        
        // CODEGEN: Generating message contract since message GetTopCompaniesByExpirationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesByExpiration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationResponse GetTopCompaniesByExpiration(Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesByExpiration", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationResponse> GetTopCompaniesByExpirationAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationRequest request);
        
        // CODEGEN: Generating message contract since message GetTopCompaniesUsageSummariesByDecryptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesUsageSummariesByDecryptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsResponse GetTopCompaniesUsageSummariesByDecryptions(Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesUsageSummariesByDecryptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsResponse> GetTopCompaniesUsageSummariesByDecryptionsAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsRequest request);
        
        // CODEGEN: Generating message contract since message GetTopCompaniesUsageSummariesByEncryptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesUsageSummariesByEncryptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsResponse GetTopCompaniesUsageSummariesByEncryptions(Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopCompaniesUsageSummariesByEncryptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsResponse> GetTopCompaniesUsageSummariesByEncryptionsAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsRequest request);
        
        // CODEGEN: Generating message contract since message GetTopUsersByEncryptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopUsersByEncryptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsResponse GetTopUsersByEncryptions(Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopUsersByEncryptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsResponse> GetTopUsersByEncryptionsAsync(Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsRequest request);
        
        // CODEGEN: Generating message contract since message GetTopUsersByViolationsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopUsersByViolations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetTopUsersByViolationsResponse GetTopUsersByViolations(Encryptics.WebPortal.PortalService.GetTopUsersByViolationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopUsersByViolations", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopUsersByViolationsResponse> GetTopUsersByViolationsAsync(Encryptics.WebPortal.PortalService.GetTopUsersByViolationsRequest request);
        
        // CODEGEN: Generating message contract since message GetTopViolatedDLPRulesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopViolatedDLPRules", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesResponse GetTopViolatedDLPRules(Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetTopViolatedDLPRules", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesResponse> GetTopViolatedDLPRulesAsync(Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesRequest request);
        
        // CODEGEN: Generating message contract since message GetUsageRightsGroupDetailsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUsageRightsGroupDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsResponse GetUsageRightsGroupDetails(Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUsageRightsGroupDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsResponse> GetUsageRightsGroupDetailsAsync(Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsRequest request);
        
        // CODEGEN: Generating message contract since message GetUsageRightsGroupsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUsageRightsGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUsageRightsGroupsResponse GetUsageRightsGroups(Encryptics.WebPortal.PortalService.GetUsageRightsGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUsageRightsGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupsResponse> GetUsageRightsGroupsAsync(Encryptics.WebPortal.PortalService.GetUsageRightsGroupsRequest request);
        
        // CODEGEN: Generating message contract since message GetUsageRightsGroupUsersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUsageRightsGroupUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersResponse GetUsageRightsGroupUsers(Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUsageRightsGroupUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersResponse> GetUsageRightsGroupUsersAsync(Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersRequest request);
        
        // CODEGEN: Generating message contract since message GetUsageRightsGroupUsersArchivedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUsageRightsGroupUsersArchived", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedResponse GetUsageRightsGroupUsersArchived(Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUsageRightsGroupUsersArchived", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedResponse> GetUsageRightsGroupUsersArchivedAsync(Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedRequest request);
        
        // CODEGEN: Generating message contract since message GetUserAuthorizedActionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserAuthorizedAction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserAuthorizedActionResponse GetUserAuthorizedAction(Encryptics.WebPortal.PortalService.GetUserAuthorizedActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserAuthorizedAction", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserAuthorizedActionResponse> GetUserAuthorizedActionAsync(Encryptics.WebPortal.PortalService.GetUserAuthorizedActionRequest request);
        
        // CODEGEN: Generating message contract since message GetUserAuthorizedActionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserAuthorizedActions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsResponse GetUserAuthorizedActions(Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserAuthorizedActions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsResponse> GetUserAuthorizedActionsAsync(Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsRequest request);
        
        // CODEGEN: Generating message contract since message GetUserCompaniesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserCompaniesResponse GetUserCompanies(Encryptics.WebPortal.PortalService.GetUserCompaniesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserCompaniesResponse> GetUserCompaniesAsync(Encryptics.WebPortal.PortalService.GetUserCompaniesRequest request);
        
        // CODEGEN: Generating message contract since message GetUserDecryptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserDecryptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserDecryptionsResponse GetUserDecryptions(Encryptics.WebPortal.PortalService.GetUserDecryptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserDecryptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserDecryptionsResponse> GetUserDecryptionsAsync(Encryptics.WebPortal.PortalService.GetUserDecryptionsRequest request);
        
        // CODEGEN: Generating message contract since message GetAccountDetailsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccountDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetAccountDetailsResponse GetAccountDetails(Encryptics.WebPortal.PortalService.GetAccountDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetAccountDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountDetailsResponse> GetAccountDetailsAsync(Encryptics.WebPortal.PortalService.GetAccountDetailsRequest request);
        
        // CODEGEN: Generating message contract since message GetUserEncryptionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserEncryptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserEncryptionsResponse GetUserEncryptions(Encryptics.WebPortal.PortalService.GetUserEncryptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserEncryptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserEncryptionsResponse> GetUserEncryptionsAsync(Encryptics.WebPortal.PortalService.GetUserEncryptionsRequest request);
        
        // CODEGEN: Generating message contract since message GetUserEntityRolesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserEntityRoles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserEntityRolesResponse GetUserEntityRoles(Encryptics.WebPortal.PortalService.GetUserEntityRolesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserEntityRoles", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserEntityRolesResponse> GetUserEntityRolesAsync(Encryptics.WebPortal.PortalService.GetUserEntityRolesRequest request);
        
        // CODEGEN: Parameter 'question_number' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserSecurityQuestion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserSecurityQuestionResponse GetUserSecurityQuestion(Encryptics.WebPortal.PortalService.GetUserSecurityQuestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserSecurityQuestion", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserSecurityQuestionResponse> GetUserSecurityQuestionAsync(Encryptics.WebPortal.PortalService.GetUserSecurityQuestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserSecurityQuestions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.SecurityQuestion[] GetUserSecurityQuestions(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserSecurityQuestions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.SecurityQuestion[]> GetUserSecurityQuestionsAsync(string email);
        
        // CODEGEN: Generating message contract since message GetUserUsageRightsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserUsageRights", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserUsageRightsResponse GetUserUsageRights(Encryptics.WebPortal.PortalService.GetUserUsageRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserUsageRights", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserUsageRightsResponse> GetUserUsageRightsAsync(Encryptics.WebPortal.PortalService.GetUserUsageRightsRequest request);
        
        // CODEGEN: Generating message contract since message GetUserUsageSummaryByMonthRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserUsageSummaryByMonth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthResponse GetUserUsageSummaryByMonth(Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/GetUserUsageSummaryByMonth", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthResponse> GetUserUsageSummaryByMonthAsync(Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthRequest request);
        
        // CODEGEN: Generating message contract since message InsertAccessGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertAccessGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertAccessGroupResponse InsertAccessGroup(Encryptics.WebPortal.PortalService.InsertAccessGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertAccessGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertAccessGroupResponse> InsertAccessGroupAsync(Encryptics.WebPortal.PortalService.InsertAccessGroupRequest request);
        
        // CODEGEN: Generating message contract since message InsertAccessGroupUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertAccessGroupUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertAccessGroupUserResponse InsertAccessGroupUser(Encryptics.WebPortal.PortalService.InsertAccessGroupUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertAccessGroupUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertAccessGroupUserResponse> InsertAccessGroupUserAsync(Encryptics.WebPortal.PortalService.InsertAccessGroupUserRequest request);
        
        // CODEGEN: Generating message contract since message InsertCompanyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertCompanyResponse InsertCompany(Encryptics.WebPortal.PortalService.InsertCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyResponse> InsertCompanyAsync(Encryptics.WebPortal.PortalService.InsertCompanyRequest request);
        
        // CODEGEN: Generating message contract since message InsertCompanyDLPTermRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertCompanyDLPTerm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResponse InsertCompanyDLPTerm(Encryptics.WebPortal.PortalService.InsertCompanyDLPTermRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertCompanyDLPTerm", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResponse> InsertCompanyDLPTermAsync(Encryptics.WebPortal.PortalService.InsertCompanyDLPTermRequest request);
        
        // CODEGEN: Generating message contract since message InsertCompanyDomainRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertCompanyDomain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertCompanyDomainResponse InsertCompanyDomain(Encryptics.WebPortal.PortalService.InsertCompanyDomainRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertCompanyDomain", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyDomainResponse> InsertCompanyDomainAsync(Encryptics.WebPortal.PortalService.InsertCompanyDomainRequest request);
        
        // CODEGEN: Generating message contract since message InsertDLPPublicationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertDLPPublication", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertDLPPublicationResponse InsertDLPPublication(Encryptics.WebPortal.PortalService.InsertDLPPublicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertDLPPublication", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertDLPPublicationResponse> InsertDLPPublicationAsync(Encryptics.WebPortal.PortalService.InsertDLPPublicationRequest request);
        
        // CODEGEN: Generating message contract since message InsertDLPRuleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertDLPRule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertDLPRuleResponse InsertDLPRule(Encryptics.WebPortal.PortalService.InsertDLPRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertDLPRule", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertDLPRuleResponse> InsertDLPRuleAsync(Encryptics.WebPortal.PortalService.InsertDLPRuleRequest request);
        
        // CODEGEN: Generating message contract since message InsertEntityRoleUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertEntityRoleUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertEntityRoleUserResponse InsertEntityRoleUser(Encryptics.WebPortal.PortalService.InsertEntityRoleUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertEntityRoleUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertEntityRoleUserResponse> InsertEntityRoleUserAsync(Encryptics.WebPortal.PortalService.InsertEntityRoleUserRequest request);
        
        // CODEGEN: Generating message contract since message InsertEntityRoleUsersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertEntityRoleUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResponse InsertEntityRoleUsers(Encryptics.WebPortal.PortalService.InsertEntityRoleUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertEntityRoleUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResponse> InsertEntityRoleUsersAsync(Encryptics.WebPortal.PortalService.InsertEntityRoleUsersRequest request);
        
        // CODEGEN: Generating message contract since message InsertGWPublicationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertGWPublication", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertGWPublicationResponse InsertGWPublication(Encryptics.WebPortal.PortalService.InsertGWPublicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertGWPublication", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertGWPublicationResponse> InsertGWPublicationAsync(Encryptics.WebPortal.PortalService.InsertGWPublicationRequest request);
        
        // CODEGEN: Generating message contract since message InsertImportUsersRequestRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertImportUsersRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertImportUsersRequestResponse InsertImportUsersRequest(Encryptics.WebPortal.PortalService.InsertImportUsersRequestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertImportUsersRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertImportUsersRequestResponse> InsertImportUsersRequestAsync(Encryptics.WebPortal.PortalService.InsertImportUsersRequestRequest request);
        
        // CODEGEN: Generating message contract since message InsertLicenseTransferRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertLicenseTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertLicenseTransferResponse InsertLicenseTransfer(Encryptics.WebPortal.PortalService.InsertLicenseTransferRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertLicenseTransfer", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertLicenseTransferResponse> InsertLicenseTransferAsync(Encryptics.WebPortal.PortalService.InsertLicenseTransferRequest request);
        
        // CODEGEN: Generating message contract since message InsertRequestUserTransferRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertRequestUserTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertRequestUserTransferResponse InsertRequestUserTransfer(Encryptics.WebPortal.PortalService.InsertRequestUserTransferRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertRequestUserTransfer", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertRequestUserTransferResponse> InsertRequestUserTransferAsync(Encryptics.WebPortal.PortalService.InsertRequestUserTransferRequest request);
        
        // CODEGEN: Generating message contract since message InsertResetPasswordRequestRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertResetPasswordRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertResetPasswordRequestResponse InsertResetPasswordRequest(Encryptics.WebPortal.PortalService.InsertResetPasswordRequestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertResetPasswordRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertResetPasswordRequestResponse> InsertResetPasswordRequestAsync(Encryptics.WebPortal.PortalService.InsertResetPasswordRequestRequest request);
        
        // CODEGEN: Generating message contract since message InsertServerKeyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertServerKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertServerKeyResponse InsertServerKey(Encryptics.WebPortal.PortalService.InsertServerKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertServerKey", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertServerKeyResponse> InsertServerKeyAsync(Encryptics.WebPortal.PortalService.InsertServerKeyRequest request);
        
        // CODEGEN: Generating message contract since message InsertSoftwareReleaseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertSoftwareRelease", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResponse InsertSoftwareRelease(Encryptics.WebPortal.PortalService.InsertSoftwareReleaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertSoftwareRelease", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResponse> InsertSoftwareReleaseAsync(Encryptics.WebPortal.PortalService.InsertSoftwareReleaseRequest request);
        
        // CODEGEN: Generating message contract since message InsertUsageRightsGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUsageRightsGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResponse InsertUsageRightsGroup(Encryptics.WebPortal.PortalService.InsertUsageRightsGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUsageRightsGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResponse> InsertUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.InsertUsageRightsGroupRequest request);
        
        // CODEGEN: Generating message contract since message InsertUsageRightsGroupUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUsageRightsGroupUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResponse InsertUsageRightsGroupUser(Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUsageRightsGroupUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResponse> InsertUsageRightsGroupUserAsync(Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserRequest request);
        
        // CODEGEN: Generating message contract since message InsertUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertUserResponse InsertUser(Encryptics.WebPortal.PortalService.InsertUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserResponse> InsertUserAsync(Encryptics.WebPortal.PortalService.InsertUserRequest request);
        
        // CODEGEN: Generating message contract since message InsertUserAdminCompaniesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUserAdminCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesResponse InsertUserAdminCompanies(Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUserAdminCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesResponse> InsertUserAdminCompaniesAsync(Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesRequest request);
        
        // CODEGEN: Generating message contract since message InsertUsersByBulkRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUsersByBulk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertUsersByBulkResponse InsertUsersByBulk(Encryptics.WebPortal.PortalService.InsertUsersByBulkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUsersByBulk", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsersByBulkResponse> InsertUsersByBulkAsync(Encryptics.WebPortal.PortalService.InsertUsersByBulkRequest request);
        
        // CODEGEN: Generating message contract since message InsertUserLicenseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUserLicense", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertUserLicenseResponse InsertUserLicense(Encryptics.WebPortal.PortalService.InsertUserLicenseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUserLicense", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserLicenseResponse> InsertUserLicenseAsync(Encryptics.WebPortal.PortalService.InsertUserLicenseRequest request);
        
        // CODEGEN: Generating message contract since message InsertUserSecurityQuestionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUserSecurityQuestions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsResponse InsertUserSecurityQuestions(Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/InsertUserSecurityQuestions", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsResponse> InsertUserSecurityQuestionsAsync(Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsRequest request);
        
        // CODEGEN: Generating message contract since message LogDebugRecordRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/LogDebugRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.LogDebugRecordResponse LogDebugRecord(Encryptics.WebPortal.PortalService.LogDebugRecordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/LogDebugRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.LogDebugRecordResponse> LogDebugRecordAsync(Encryptics.WebPortal.PortalService.LogDebugRecordRequest request);
        
        // CODEGEN: Generating message contract since message RemoveAccessGroupUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveAccessGroupUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResponse RemoveAccessGroupUser(Encryptics.WebPortal.PortalService.RemoveAccessGroupUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveAccessGroupUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResponse> RemoveAccessGroupUserAsync(Encryptics.WebPortal.PortalService.RemoveAccessGroupUserRequest request);
        
        // CODEGEN: Generating message contract since message RemoveCompanyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveCompanyResponse RemoveCompany(Encryptics.WebPortal.PortalService.RemoveCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyResponse> RemoveCompanyAsync(Encryptics.WebPortal.PortalService.RemoveCompanyRequest request);
        
        // CODEGEN: Generating message contract since message RemoveCompanyDLPTermRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveCompanyDLPTerm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResponse RemoveCompanyDLPTerm(Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveCompanyDLPTerm", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResponse> RemoveCompanyDLPTermAsync(Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermRequest request);
        
        // CODEGEN: Generating message contract since message RemoveCompanyDomainRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveCompanyDomain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveCompanyDomainResponse RemoveCompanyDomain(Encryptics.WebPortal.PortalService.RemoveCompanyDomainRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveCompanyDomain", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyDomainResponse> RemoveCompanyDomainAsync(Encryptics.WebPortal.PortalService.RemoveCompanyDomainRequest request);
        
        // CODEGEN: Generating message contract since message RemoveDLPRuleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveDLPRule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveDLPRuleResponse RemoveDLPRule(Encryptics.WebPortal.PortalService.RemoveDLPRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveDLPRule", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveDLPRuleResponse> RemoveDLPRuleAsync(Encryptics.WebPortal.PortalService.RemoveDLPRuleRequest request);
        
        // CODEGEN: Generating message contract since message RemovePendingAccountRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemovePendingAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemovePendingAccountResponse RemovePendingAccount(Encryptics.WebPortal.PortalService.RemovePendingAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemovePendingAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemovePendingAccountResponse> RemovePendingAccountAsync(Encryptics.WebPortal.PortalService.RemovePendingAccountRequest request);
        
        // CODEGEN: Generating message contract since message RemoveUsageRightsGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUsageRightsGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResponse RemoveUsageRightsGroup(Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUsageRightsGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResponse> RemoveUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupRequest request);
        
        // CODEGEN: Generating message contract since message RemoveUsageRightsGroupUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUsageRightsGroupUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResponse RemoveUsageRightsGroupUser(Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUsageRightsGroupUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResponse> RemoveUsageRightsGroupUserAsync(Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserRequest request);
        
        // CODEGEN: Generating message contract since message RemoveUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveUserResponse RemoveUser(Encryptics.WebPortal.PortalService.RemoveUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserResponse> RemoveUserAsync(Encryptics.WebPortal.PortalService.RemoveUserRequest request);
        
        // CODEGEN: Generating message contract since message RemoveUserAdminCompaniesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUserAdminCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesResponse RemoveUserAdminCompanies(Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUserAdminCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesResponse> RemoveUserAdminCompaniesAsync(Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesRequest request);
        
        // CODEGEN: Generating message contract since message RemoveUserDeviceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUserDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveUserDeviceResponse RemoveUserDevice(Encryptics.WebPortal.PortalService.RemoveUserDeviceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUserDevice", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserDeviceResponse> RemoveUserDeviceAsync(Encryptics.WebPortal.PortalService.RemoveUserDeviceRequest request);
        
        // CODEGEN: Generating message contract since message RemoveUserLicensesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUserLicenses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.RemoveUserLicensesResponse RemoveUserLicenses(Encryptics.WebPortal.PortalService.RemoveUserLicensesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/RemoveUserLicenses", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserLicensesResponse> RemoveUserLicensesAsync(Encryptics.WebPortal.PortalService.RemoveUserLicensesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ResendActivation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ResendActivation(string account_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ResendActivation", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ResendActivationAsync(string account_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ResendDeviceActivation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ResendDeviceActivation(string account_name, string hwid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ResendDeviceActivation", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ResendDeviceActivationAsync(string account_name, string hwid);
        
        // CODEGEN: Generating message contract since message ResendRequestUserTransferRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ResendRequestUserTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.ResendRequestUserTransferResponse ResendRequestUserTransfer(Encryptics.WebPortal.PortalService.ResendRequestUserTransferRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/ResendRequestUserTransfer", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ResendRequestUserTransferResponse> ResendRequestUserTransferAsync(Encryptics.WebPortal.PortalService.ResendRequestUserTransferRequest request);
        
        // CODEGEN: Generating message contract since message UpdateAccessGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateAccessGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateAccessGroupResponse UpdateAccessGroup(Encryptics.WebPortal.PortalService.UpdateAccessGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateAccessGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateAccessGroupResponse> UpdateAccessGroupAsync(Encryptics.WebPortal.PortalService.UpdateAccessGroupRequest request);
        
        // CODEGEN: Generating message contract since message UpdateCompanyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateCompanyResponse UpdateCompany(Encryptics.WebPortal.PortalService.UpdateCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyResponse> UpdateCompanyAsync(Encryptics.WebPortal.PortalService.UpdateCompanyRequest request);
        
        // CODEGEN: Generating message contract since message UpdateCompanyLexiconsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyLexicons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsResponse UpdateCompanyLexicons(Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyLexicons", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsResponse> UpdateCompanyLexiconsAsync(Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsRequest request);
        
        // CODEGEN: Generating message contract since message UpdateCompanyDLPConfigRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyDLPConfig", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigResponse UpdateCompanyDLPConfig(Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyDLPConfig", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigResponse> UpdateCompanyDLPConfigAsync(Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigRequest request);
        
        // CODEGEN: Generating message contract since message UpdateCompanyDLPSettingsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyDLPSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsResponse UpdateCompanyDLPSettings(Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyDLPSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsResponse> UpdateCompanyDLPSettingsAsync(Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsRequest request);
        
        // CODEGEN: Generating message contract since message UpdateCompanyEmailTemplateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyEmailTemplate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateResponse UpdateCompanyEmailTemplate(Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyEmailTemplate", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateResponse> UpdateCompanyEmailTemplateAsync(Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateRequest request);
        
        // CODEGEN: Generating message contract since message UpdateCompanyGWConfigRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyGWConfig", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigResponse UpdateCompanyGWConfig(Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateCompanyGWConfig", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigResponse> UpdateCompanyGWConfigAsync(Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigRequest request);
        
        // CODEGEN: Generating message contract since message UpdateDeviceActivationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDeviceActivation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateDeviceActivationResponse UpdateDeviceActivation(Encryptics.WebPortal.PortalService.UpdateDeviceActivationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDeviceActivation", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDeviceActivationResponse> UpdateDeviceActivationAsync(Encryptics.WebPortal.PortalService.UpdateDeviceActivationRequest request);
        
        // CODEGEN: Generating message contract since message UpdateDeviceStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDeviceStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateDeviceStatusResponse UpdateDeviceStatus(Encryptics.WebPortal.PortalService.UpdateDeviceStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDeviceStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDeviceStatusResponse> UpdateDeviceStatusAsync(Encryptics.WebPortal.PortalService.UpdateDeviceStatusRequest request);
        
        // CODEGEN: Generating message contract since message UpdateDLPRuleDetailsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDLPRuleDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsResponse UpdateDLPRuleDetails(Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDLPRuleDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsResponse> UpdateDLPRuleDetailsAsync(Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsRequest request);
        
        // CODEGEN: Generating message contract since message UpdateDLPRuleStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDLPRuleStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusResponse UpdateDLPRuleStatus(Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDLPRuleStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusResponse> UpdateDLPRuleStatusAsync(Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusRequest request);
        
        // CODEGEN: Generating message contract since message UpdateDLPRulesVisibilityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDLPRulesVisibility", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityResponse UpdateDLPRulesVisibility(Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateDLPRulesVisibility", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityResponse> UpdateDLPRulesVisibilityAsync(Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityRequest request);
        
        // CODEGEN: Generating message contract since message UpdateEntitySoftwareReleaseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateEntitySoftwareRelease", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseResponse UpdateEntitySoftwareRelease(Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateEntitySoftwareRelease", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseResponse> UpdateEntitySoftwareReleaseAsync(Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseRequest request);
        
        // CODEGEN: Generating message contract since message UpdateGWSettingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateGWSetting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateGWSettingResponse UpdateGWSetting(Encryptics.WebPortal.PortalService.UpdateGWSettingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateGWSetting", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateGWSettingResponse> UpdateGWSettingAsync(Encryptics.WebPortal.PortalService.UpdateGWSettingRequest request);
        
        // CODEGEN: Generating message contract since message UpdatePasswordRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdatePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdatePasswordResponse UpdatePassword(Encryptics.WebPortal.PortalService.UpdatePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdatePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdatePasswordResponse> UpdatePasswordAsync(Encryptics.WebPortal.PortalService.UpdatePasswordRequest request);
        
        // CODEGEN: Generating message contract since message UpdateRequestUserTransferRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateRequestUserTransfer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateRequestUserTransferResponse UpdateRequestUserTransfer(Encryptics.WebPortal.PortalService.UpdateRequestUserTransferRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateRequestUserTransfer", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateRequestUserTransferResponse> UpdateRequestUserTransferAsync(Encryptics.WebPortal.PortalService.UpdateRequestUserTransferRequest request);
        
        // CODEGEN: Generating message contract since message UpdateSoftwareReleaseRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateSoftwareRelease", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResponse UpdateSoftwareRelease(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateSoftwareRelease", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResponse> UpdateSoftwareReleaseAsync(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseRequest request);
        
        // CODEGEN: Generating message contract since message UpdateSoftwareReleaseGlobalMinimumRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateSoftwareReleaseGlobalMinimum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumResponse UpdateSoftwareReleaseGlobalMinimum(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateSoftwareReleaseGlobalMinimum", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumResponse> UpdateSoftwareReleaseGlobalMinimumAsync(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumRequest request);
        
        // CODEGEN: Generating message contract since message UpdateSoftwareReleaseActiveStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateSoftwareReleaseActiveStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusResponse UpdateSoftwareReleaseActiveStatus(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.encryptics.net/webservices/UpdateSoftwareReleaseActiveStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusResponse> UpdateSoftwareReleaseActiveStatusAsync(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class TokenAuth : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tokenField;
        
        private int statusField;
        
        private string nonceField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("Token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Nonce {
            get {
                return this.nonceField;
            }
            set {
                this.nonceField = value;
                this.RaisePropertyChanged("Nonce");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UpdateSoftwareReleaseResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> idField;
        
        private UpdateSoftwareReleaseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<int> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public UpdateSoftwareReleaseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateSoftwareReleaseStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPLexicon : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string titleField;
        
        private bool isRegexField;
        
        private bool isUsedByCompanyField;
        
        private System.DateTime createDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsRegex {
            get {
                return this.isRegexField;
            }
            set {
                this.isRegexField = value;
                this.RaisePropertyChanged("IsRegex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsUsedByCompany {
            get {
                return this.isUsedByCompanyField;
            }
            set {
                this.isUsedByCompanyField = value;
                this.RaisePropertyChanged("IsUsedByCompany");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
                this.RaisePropertyChanged("CreateDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyDLPSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private bool enableAlwaysEncryptField;
        
        private bool enableDLPField;
        
        private DLPLexicon[] lexiconsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool EnableAlwaysEncrypt {
            get {
                return this.enableAlwaysEncryptField;
            }
            set {
                this.enableAlwaysEncryptField = value;
                this.RaisePropertyChanged("EnableAlwaysEncrypt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool EnableDLP {
            get {
                return this.enableDLPField;
            }
            set {
                this.enableDLPField = value;
                this.RaisePropertyChanged("EnableDLP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public DLPLexicon[] Lexicons {
            get {
                return this.lexiconsField;
            }
            set {
                this.lexiconsField = value;
                this.RaisePropertyChanged("Lexicons");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertUserLicenseResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertUserLicenseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertUserLicenseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertUserLicenseStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        License_Already_Exists,
        
        /// <remarks/>
        Insufficient_Amount,
        
        /// <remarks/>
        Domain_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertUsersByBulkFailure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private InsertUsersByBulkFailureType typeField;
        
        private System.Nullable<long> userIDField;
        
        private System.Nullable<long> entityIDField;
        
        private bool adminCanTransferField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertUsersByBulkFailureType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<long> UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<long> EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
                this.RaisePropertyChanged("EntityID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool AdminCanTransfer {
            get {
                return this.adminCanTransferField;
            }
            set {
                this.adminCanTransferField = value;
                this.RaisePropertyChanged("AdminCanTransfer");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertUsersByBulkFailureType {
        
        /// <remarks/>
        Bad_Domain,
        
        /// <remarks/>
        Bad_First_Name,
        
        /// <remarks/>
        Bad_Last_Name,
        
        /// <remarks/>
        Username_Exists,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertUsersByBulkSuccess : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private long requestIDField;
        
        private string codeField;
        
        private bool licenseReservedField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
                this.RaisePropertyChanged("RequestID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool LicenseReserved {
            get {
                return this.licenseReservedField;
            }
            set {
                this.licenseReservedField = value;
                this.RaisePropertyChanged("LicenseReserved");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertUsersByBulkResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private InsertUsersByBulkStatus statusField;
        
        private InsertUsersByBulkSuccess[] successesField;
        
        private InsertUsersByBulkFailure[] failuresField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public InsertUsersByBulkStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public InsertUsersByBulkSuccess[] Successes {
            get {
                return this.successesField;
            }
            set {
                this.successesField = value;
                this.RaisePropertyChanged("Successes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public InsertUsersByBulkFailure[] Failures {
            get {
                return this.failuresField;
            }
            set {
                this.failuresField = value;
                this.RaisePropertyChanged("Failures");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertUsersByBulkStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Bad_Data,
        
        /// <remarks/>
        Insufficient_Licenses,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertUserResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private string usernameField;
        
        private string codeField;
        
        private InsertUserStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public InsertUserStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertUserStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        User_Already_Exists,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertUsageRightsGroupUserResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertUsageRightsGroupUserStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertUsageRightsGroupUserStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertUsageRightsGroupUserStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Group_Not_Exists,
        
        /// <remarks/>
        User_Exists,
        
        /// <remarks/>
        User_In_Another_Group,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertUsageRightsGroupResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertUsageRightsGroupStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertUsageRightsGroupStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertUsageRightsGroupStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Name_Not_Available,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertSoftwareReleaseResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> idField;
        
        private InsertSoftwareReleaseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<int> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertSoftwareReleaseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertSoftwareReleaseStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertServerKeyResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertServerKeyStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertServerKeyStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertServerKeyStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertServerKeysResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private InsertServerKeyResult communicationResultField;
        
        private InsertServerKeyResult containerResultField;
        
        private InsertServerKeyResult signingResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public InsertServerKeyResult CommunicationResult {
            get {
                return this.communicationResultField;
            }
            set {
                this.communicationResultField = value;
                this.RaisePropertyChanged("CommunicationResult");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertServerKeyResult ContainerResult {
            get {
                return this.containerResultField;
            }
            set {
                this.containerResultField = value;
                this.RaisePropertyChanged("ContainerResult");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public InsertServerKeyResult SigningResult {
            get {
                return this.signingResultField;
            }
            set {
                this.signingResultField = value;
                this.RaisePropertyChanged("SigningResult");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertRequestUserTransferResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> requestIDField;
        
        private string codeField;
        
        private string fromCompanyNameField;
        
        private string toCompanyNameField;
        
        private InsertRequestUserTransferStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
                this.RaisePropertyChanged("RequestID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FromCompanyName {
            get {
                return this.fromCompanyNameField;
            }
            set {
                this.fromCompanyNameField = value;
                this.RaisePropertyChanged("FromCompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ToCompanyName {
            get {
                return this.toCompanyNameField;
            }
            set {
                this.toCompanyNameField = value;
                this.RaisePropertyChanged("ToCompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public InsertRequestUserTransferStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertRequestUserTransferStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Exists,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertLicenseTransferResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertLicenseTransferStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertLicenseTransferStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertLicenseTransferStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Insufficient_Amount,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertImportUsersRequestResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertImportUsersRequestStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertImportUsersRequestStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertImportUsersRequestStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertGWPublicationResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertGWPublicationStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertGWPublicationStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertGWPublicationStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertEntityRoleUsersResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private InsertEntityRoleUsersStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public InsertEntityRoleUsersStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertEntityRoleUsersStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        No_Change,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertEntityRoleUserResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertEntityRoleUserStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertEntityRoleUserStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertEntityRoleUserStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        No_Change,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertDLPRuleResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertDLPRuleStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertDLPRuleStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertDLPRuleStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertDLPPublicationResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertDLPPublicationStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertDLPPublicationStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertDLPPublicationStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertCompanyDomainResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertCompanyDomainStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertCompanyDomainStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertCompanyDomainStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Not_Available,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertCompanyDLPTermResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertCompanyDLPTermStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertCompanyDLPTermStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertCompanyDLPTermStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertCompanyResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertCompanyStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertCompanyStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertCompanyStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Name_Not_Available,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertAccessGroupUserResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertAccessGroupUserStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertAccessGroupUserStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertAccessGroupUserStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Group_Not_Exists,
        
        /// <remarks/>
        User_Exists,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class InsertAccessGroupResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private InsertAccessGroupStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public InsertAccessGroupStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertAccessGroupStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Parameters_Missing,
        
        /// <remarks/>
        Name_Not_Available,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class AuthorizedAction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string actionField;
        
        private bool isAuthorizedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
                this.RaisePropertyChanged("Action");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool IsAuthorized {
            get {
                return this.isAuthorizedField;
            }
            set {
                this.isAuthorizedField = value;
                this.RaisePropertyChanged("IsAuthorized");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UsageRightsGroupUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private long userIdField;
        
        private string userNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private long createdByField;
        
        private System.DateTime createdDateField;
        
        private System.Nullable<long> removedByField;
        
        private string removedByFirstNameField;
        
        private string removedByLastNameField;
        
        private System.Nullable<System.DateTime> removedDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<long> RemovedBy {
            get {
                return this.removedByField;
            }
            set {
                this.removedByField = value;
                this.RaisePropertyChanged("RemovedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string RemovedByFirstName {
            get {
                return this.removedByFirstNameField;
            }
            set {
                this.removedByFirstNameField = value;
                this.RaisePropertyChanged("RemovedByFirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string RemovedByLastName {
            get {
                return this.removedByLastNameField;
            }
            set {
                this.removedByLastNameField = value;
                this.RaisePropertyChanged("RemovedByLastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public System.Nullable<System.DateTime> RemovedDate {
            get {
                return this.removedDateField;
            }
            set {
                this.removedDateField = value;
                this.RaisePropertyChanged("RemovedDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPRuleViolationCount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long ruleIdField;
        
        private string descriptionField;
        
        private long violationCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long RuleId {
            get {
                return this.ruleIdField;
            }
            set {
                this.ruleIdField = value;
                this.RaisePropertyChanged("RuleId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long ViolationCount {
            get {
                return this.violationCountField;
            }
            set {
                this.violationCountField = value;
                this.RaisePropertyChanged("ViolationCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class TopViolatedDLPRulesReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DLPRuleViolationCount[] ruleViolationsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DLPRuleViolationCount[] RuleViolations {
            get {
                return this.ruleViolationsField;
            }
            set {
                this.ruleViolationsField = value;
                this.RaisePropertyChanged("RuleViolations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPUserViolationCount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long userIdField;
        
        private string fNameField;
        
        private string lNameField;
        
        private string userNameField;
        
        private long violationCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
                this.RaisePropertyChanged("FName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LName {
            get {
                return this.lNameField;
            }
            set {
                this.lNameField = value;
                this.RaisePropertyChanged("LName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long ViolationCount {
            get {
                return this.violationCountField;
            }
            set {
                this.violationCountField = value;
                this.RaisePropertyChanged("ViolationCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class TopUsersByDLPViolationsReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DLPUserViolationCount[] userViolationsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DLPUserViolationCount[] UserViolations {
            get {
                return this.userViolationsField;
            }
            set {
                this.userViolationsField = value;
                this.RaisePropertyChanged("UserViolations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UserEncryptionCount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long userIdField;
        
        private string fNameField;
        
        private string lNameField;
        
        private string userNameField;
        
        private long encryptionCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
                this.RaisePropertyChanged("FName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LName {
            get {
                return this.lNameField;
            }
            set {
                this.lNameField = value;
                this.RaisePropertyChanged("LName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long EncryptionCount {
            get {
                return this.encryptionCountField;
            }
            set {
                this.encryptionCountField = value;
                this.RaisePropertyChanged("EncryptionCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class TopUsersByEncryptionsReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private UserEncryptionCount[] userEncryptionsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public UserEncryptionCount[] UserEncryptions {
            get {
                return this.userEncryptionsField;
            }
            set {
                this.userEncryptionsField = value;
                this.RaisePropertyChanged("UserEncryptions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyUsageCount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long entityIdField;
        
        private string nameField;
        
        private long countField;
        
        private System.DateTime dateOfCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("Count");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime DateOfCount {
            get {
                return this.dateOfCountField;
            }
            set {
                this.dateOfCountField = value;
                this.RaisePropertyChanged("DateOfCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyExpirationListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string nameField;
        
        private bool useGlobalExpirationDateField;
        
        private System.DateTime expirationDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool UseGlobalExpirationDate {
            get {
                return this.useGlobalExpirationDateField;
            }
            set {
                this.useGlobalExpirationDateField = value;
                this.RaisePropertyChanged("UseGlobalExpirationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
                this.RaisePropertyChanged("ExpirationDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class TopCompaniesByExpirationReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CompanyExpirationListItem[] companyExpirationsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public CompanyExpirationListItem[] CompanyExpirations {
            get {
                return this.companyExpirationsField;
            }
            set {
                this.companyExpirationsField = value;
                this.RaisePropertyChanged("CompanyExpirations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyEncryptionCount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long entityIdField;
        
        private string nameField;
        
        private long encryptionCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long EncryptionCount {
            get {
                return this.encryptionCountField;
            }
            set {
                this.encryptionCountField = value;
                this.RaisePropertyChanged("EncryptionCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class TopCompaniesByEncryptionsReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CompanyEncryptionCount[] companyEncryptionsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public CompanyEncryptionCount[] CompanyEncryptions {
            get {
                return this.companyEncryptionsField;
            }
            set {
                this.companyEncryptionsField = value;
                this.RaisePropertyChanged("CompanyEncryptions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyDecryptionCount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long entityIdField;
        
        private string nameField;
        
        private long decryptionCountField;
        
        private System.DateTime dateOfCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long DecryptionCount {
            get {
                return this.decryptionCountField;
            }
            set {
                this.decryptionCountField = value;
                this.RaisePropertyChanged("DecryptionCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime DateOfCount {
            get {
                return this.dateOfCountField;
            }
            set {
                this.dateOfCountField = value;
                this.RaisePropertyChanged("DateOfCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class TopCompaniesByDecryptionsReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CompanyDecryptionCount[] companyDecryptionsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public CompanyDecryptionCount[] CompanyDecryptions {
            get {
                return this.companyDecryptionsField;
            }
            set {
                this.companyDecryptionsField = value;
                this.RaisePropertyChanged("CompanyDecryptions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class SoftwareRelease : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> idField;
        
        private string versionField;
        
        private bool isMajorReleaseField;
        
        private bool isActiveField;
        
        private string downloadURIField;
        
        private System.Nullable<bool> isCurrentEntityVersionField;
        
        private bool isRollbackVersionField;
        
        private string notesField;
        
        private SoftwarePlatform platformField;
        
        private bool isGlobalMinimumField;
        
        private System.Nullable<System.DateTime> globalMinimumDateField;
        
        private long createdByIDField;
        
        private string createdByNameField;
        
        private System.DateTime createdDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<int> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsMajorRelease {
            get {
                return this.isMajorReleaseField;
            }
            set {
                this.isMajorReleaseField = value;
                this.RaisePropertyChanged("IsMajorRelease");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
                this.RaisePropertyChanged("IsActive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DownloadURI {
            get {
                return this.downloadURIField;
            }
            set {
                this.downloadURIField = value;
                this.RaisePropertyChanged("DownloadURI");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<bool> IsCurrentEntityVersion {
            get {
                return this.isCurrentEntityVersionField;
            }
            set {
                this.isCurrentEntityVersionField = value;
                this.RaisePropertyChanged("IsCurrentEntityVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool IsRollbackVersion {
            get {
                return this.isRollbackVersionField;
            }
            set {
                this.isRollbackVersionField = value;
                this.RaisePropertyChanged("IsRollbackVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public SoftwarePlatform Platform {
            get {
                return this.platformField;
            }
            set {
                this.platformField = value;
                this.RaisePropertyChanged("Platform");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsGlobalMinimum {
            get {
                return this.isGlobalMinimumField;
            }
            set {
                this.isGlobalMinimumField = value;
                this.RaisePropertyChanged("IsGlobalMinimum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public System.Nullable<System.DateTime> GlobalMinimumDate {
            get {
                return this.globalMinimumDateField;
            }
            set {
                this.globalMinimumDateField = value;
                this.RaisePropertyChanged("GlobalMinimumDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public long CreatedByID {
            get {
                return this.createdByIDField;
            }
            set {
                this.createdByIDField = value;
                this.RaisePropertyChanged("CreatedByID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string CreatedByName {
            get {
                return this.createdByNameField;
            }
            set {
                this.createdByNameField = value;
                this.RaisePropertyChanged("CreatedByName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class SoftwarePlatform : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class PendingUserAccountListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string fNameField;
        
        private string lNameField;
        
        private string userNameField;
        
        private long entityIDField;
        
        private string companyNameField;
        
        private bool isLicenseReservedField;
        
        private PendingUserAccountStatus statusField;
        
        private System.DateTime registerDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
                this.RaisePropertyChanged("FName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LName {
            get {
                return this.lNameField;
            }
            set {
                this.lNameField = value;
                this.RaisePropertyChanged("LName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
                this.RaisePropertyChanged("EntityID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
                this.RaisePropertyChanged("CompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool IsLicenseReserved {
            get {
                return this.isLicenseReservedField;
            }
            set {
                this.isLicenseReservedField = value;
                this.RaisePropertyChanged("IsLicenseReserved");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public PendingUserAccountStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime RegisterDate {
            get {
                return this.registerDateField;
            }
            set {
                this.registerDateField = value;
                this.RaisePropertyChanged("RegisterDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum PendingUserAccountStatus {
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Used,
        
        /// <remarks/>
        Removed,
        
        /// <remarks/>
        Expired,
        
        /// <remarks/>
        Replaced,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class PendingUserAccountListReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PendingUserAccountListItem[] accountsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public PendingUserAccountListItem[] Accounts {
            get {
                return this.accountsField;
            }
            set {
                this.accountsField = value;
                this.RaisePropertyChanged("Accounts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class MalwareRiskOverviewItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string riskNameField;
        
        private long totalViolationsField;
        
        private double violationPercentageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string RiskName {
            get {
                return this.riskNameField;
            }
            set {
                this.riskNameField = value;
                this.RaisePropertyChanged("RiskName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalViolations {
            get {
                return this.totalViolationsField;
            }
            set {
                this.totalViolationsField = value;
                this.RaisePropertyChanged("TotalViolations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double ViolationPercentage {
            get {
                return this.violationPercentageField;
            }
            set {
                this.violationPercentageField = value;
                this.RaisePropertyChanged("ViolationPercentage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class MalwareRiskOverviewReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MalwareRiskOverviewItem[] risksField;
        
        private long totalViolationsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public MalwareRiskOverviewItem[] Risks {
            get {
                return this.risksField;
            }
            set {
                this.risksField = value;
                this.RaisePropertyChanged("Risks");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalViolations {
            get {
                return this.totalViolationsField;
            }
            set {
                this.totalViolationsField = value;
                this.RaisePropertyChanged("TotalViolations");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class MalwareFileTypeOverviewItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string fileTypeField;
        
        private long totalFilesField;
        
        private double fileTypePercentageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
                this.RaisePropertyChanged("FileType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalFiles {
            get {
                return this.totalFilesField;
            }
            set {
                this.totalFilesField = value;
                this.RaisePropertyChanged("TotalFiles");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double FileTypePercentage {
            get {
                return this.fileTypePercentageField;
            }
            set {
                this.fileTypePercentageField = value;
                this.RaisePropertyChanged("FileTypePercentage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class MalwareFileTypesOverviewReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MalwareFileTypeOverviewItem[] fileTypesField;
        
        private long totalFilesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public MalwareFileTypeOverviewItem[] FileTypes {
            get {
                return this.fileTypesField;
            }
            set {
                this.fileTypesField = value;
                this.RaisePropertyChanged("FileTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalFiles {
            get {
                return this.totalFilesField;
            }
            set {
                this.totalFilesField = value;
                this.RaisePropertyChanged("TotalFiles");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class MalwareFileTypeRiskProfileItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string riskField;
        
        private long totalViolationsField;
        
        private double riskViolationPercentageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Risk {
            get {
                return this.riskField;
            }
            set {
                this.riskField = value;
                this.RaisePropertyChanged("Risk");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalViolations {
            get {
                return this.totalViolationsField;
            }
            set {
                this.totalViolationsField = value;
                this.RaisePropertyChanged("TotalViolations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double RiskViolationPercentage {
            get {
                return this.riskViolationPercentageField;
            }
            set {
                this.riskViolationPercentageField = value;
                this.RaisePropertyChanged("RiskViolationPercentage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class MalwareFileTypeRiskProfileReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MalwareFileTypeRiskProfileItem[] risksField;
        
        private long totalViolationsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public MalwareFileTypeRiskProfileItem[] Risks {
            get {
                return this.risksField;
            }
            set {
                this.risksField = value;
                this.RaisePropertyChanged("Risks");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalViolations {
            get {
                return this.totalViolationsField;
            }
            set {
                this.totalViolationsField = value;
                this.RaisePropertyChanged("TotalViolations");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class MalwareFileItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long fileIDField;
        
        private string fileNameField;
        
        private string fileTypeField;
        
        private bool isCleanField;
        
        private bool isOutboundField;
        
        private string userNameField;
        
        private string authorEmailField;
        
        private System.DateTime createdDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long FileID {
            get {
                return this.fileIDField;
            }
            set {
                this.fileIDField = value;
                this.RaisePropertyChanged("FileID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
                this.RaisePropertyChanged("FileType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsClean {
            get {
                return this.isCleanField;
            }
            set {
                this.isCleanField = value;
                this.RaisePropertyChanged("IsClean");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsOutbound {
            get {
                return this.isOutboundField;
            }
            set {
                this.isOutboundField = value;
                this.RaisePropertyChanged("IsOutbound");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AuthorEmail {
            get {
                return this.authorEmailField;
            }
            set {
                this.authorEmailField = value;
                this.RaisePropertyChanged("AuthorEmail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class MalwareFilesReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MalwareFileItem[] filesField;
        
        private long totalFilesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public MalwareFileItem[] Files {
            get {
                return this.filesField;
            }
            set {
                this.filesField = value;
                this.RaisePropertyChanged("Files");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalFiles {
            get {
                return this.totalFilesField;
            }
            set {
                this.totalFilesField = value;
                this.RaisePropertyChanged("TotalFiles");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPTerm : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string termField;
        
        private bool isRegexField;
        
        private string descriptionField;
        
        private System.Nullable<long> entityIdField;
        
        private System.Nullable<long> userIdField;
        
        private bool isUsedByCompanyField;
        
        private System.DateTime createDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
                this.RaisePropertyChanged("Term");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsRegex {
            get {
                return this.isRegexField;
            }
            set {
                this.isRegexField = value;
                this.RaisePropertyChanged("IsRegex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<long> EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<long> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool IsUsedByCompany {
            get {
                return this.isUsedByCompanyField;
            }
            set {
                this.isUsedByCompanyField = value;
                this.RaisePropertyChanged("IsUsedByCompany");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
                this.RaisePropertyChanged("CreateDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class ImportUsersRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> importFileIdField;
        
        private string filePathField;
        
        private byte[] fileContentsField;
        
        private bool reserveLicenseField;
        
        private bool softwarePreinstalledField;
        
        private string idField;
        
        private System.Nullable<long> adminIdField;
        
        private System.Nullable<long> adminEntityIdField;
        
        private System.Nullable<long> entityIdField;
        
        private System.Nullable<int> resultField;
        
        private string reasonForFailureField;
        
        private System.Nullable<bool> inProcessField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private System.Nullable<System.DateTime> processedDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> ImportFileId {
            get {
                return this.importFileIdField;
            }
            set {
                this.importFileIdField = value;
                this.RaisePropertyChanged("ImportFileId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
                this.RaisePropertyChanged("FilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=2)]
        public byte[] FileContents {
            get {
                return this.fileContentsField;
            }
            set {
                this.fileContentsField = value;
                this.RaisePropertyChanged("FileContents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool ReserveLicense {
            get {
                return this.reserveLicenseField;
            }
            set {
                this.reserveLicenseField = value;
                this.RaisePropertyChanged("ReserveLicense");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool SoftwarePreinstalled {
            get {
                return this.softwarePreinstalledField;
            }
            set {
                this.softwarePreinstalledField = value;
                this.RaisePropertyChanged("SoftwarePreinstalled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<long> AdminId {
            get {
                return this.adminIdField;
            }
            set {
                this.adminIdField = value;
                this.RaisePropertyChanged("AdminId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<long> AdminEntityId {
            get {
                return this.adminEntityIdField;
            }
            set {
                this.adminEntityIdField = value;
                this.RaisePropertyChanged("AdminEntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<long> EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<int> Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ReasonForFailure {
            get {
                return this.reasonForFailureField;
            }
            set {
                this.reasonForFailureField = value;
                this.RaisePropertyChanged("ReasonForFailure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
        public System.Nullable<bool> InProcess {
            get {
                return this.inProcessField;
            }
            set {
                this.inProcessField = value;
                this.RaisePropertyChanged("InProcess");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=12)]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
        public System.Nullable<System.DateTime> ProcessedDate {
            get {
                return this.processedDateField;
            }
            set {
                this.processedDateField = value;
                this.RaisePropertyChanged("ProcessedDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class ImportUsersAccount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long importAccountIdField;
        
        private string userNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private int resultField;
        
        private string reasonForFailureField;
        
        private System.Nullable<long> requestIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ImportAccountId {
            get {
                return this.importAccountIdField;
            }
            set {
                this.importAccountIdField = value;
                this.RaisePropertyChanged("ImportAccountId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ReasonForFailure {
            get {
                return this.reasonForFailureField;
            }
            set {
                this.reasonForFailureField = value;
                this.RaisePropertyChanged("ReasonForFailure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<long> RequestId {
            get {
                return this.requestIdField;
            }
            set {
                this.requestIdField = value;
                this.RaisePropertyChanged("RequestId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string nameField;
        
        private RoleType roleField;
        
        private LicensingInfo licensingInfoField;
        
        private bool isActiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public RoleType Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
                this.RaisePropertyChanged("Role");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public LicensingInfo LicensingInfo {
            get {
                return this.licensingInfoField;
            }
            set {
                this.licensingInfoField = value;
                this.RaisePropertyChanged("LicensingInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
                this.RaisePropertyChanged("IsActive");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RoleType {
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Admin,
        
        /// <remarks/>
        SuperAdmin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class LicensingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long activeLicensesField;
        
        private long availableLicensesField;
        
        private long usedLicensesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ActiveLicenses {
            get {
                return this.activeLicensesField;
            }
            set {
                this.activeLicensesField = value;
                this.RaisePropertyChanged("ActiveLicenses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long AvailableLicenses {
            get {
                return this.availableLicensesField;
            }
            set {
                this.availableLicensesField = value;
                this.RaisePropertyChanged("AvailableLicenses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long UsedLicenses {
            get {
                return this.usedLicensesField;
            }
            set {
                this.usedLicensesField = value;
                this.RaisePropertyChanged("UsedLicenses");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UsageSummary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int yearField;
        
        private System.Nullable<int> monthField;
        
        private System.Nullable<int> dayField;
        
        private long encryptCountField;
        
        private long decryptCountField;
        
        private bool isPartialField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
                this.RaisePropertyChanged("Year");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<int> Month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
                this.RaisePropertyChanged("Month");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<int> Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
                this.RaisePropertyChanged("Day");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long EncryptCount {
            get {
                return this.encryptCountField;
            }
            set {
                this.encryptCountField = value;
                this.RaisePropertyChanged("EncryptCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long DecryptCount {
            get {
                return this.decryptCountField;
            }
            set {
                this.decryptCountField = value;
                this.RaisePropertyChanged("DecryptCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool IsPartial {
            get {
                return this.isPartialField;
            }
            set {
                this.isPartialField = value;
                this.RaisePropertyChanged("IsPartial");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class EntityRoleUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long entityIdField;
        
        private string entityNameField;
        
        private long roleIdField;
        
        private string roleTitleField;
        
        private long userIdField;
        
        private long userEntityIdField;
        
        private string userEmailField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string EntityName {
            get {
                return this.entityNameField;
            }
            set {
                this.entityNameField = value;
                this.RaisePropertyChanged("EntityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
                this.RaisePropertyChanged("RoleId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string RoleTitle {
            get {
                return this.roleTitleField;
            }
            set {
                this.roleTitleField = value;
                this.RaisePropertyChanged("RoleTitle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long UserEntityId {
            get {
                return this.userEntityIdField;
            }
            set {
                this.userEntityIdField = value;
                this.RaisePropertyChanged("UserEntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string UserEmail {
            get {
                return this.userEmailField;
            }
            set {
                this.userEmailField = value;
                this.RaisePropertyChanged("UserEmail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPViolationsRuleTypeOverviewItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long ruleTypeIDField;
        
        private string ruleTypeTitleField;
        
        private string ruleTypeDescriptionField;
        
        private long totalViolationsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long RuleTypeID {
            get {
                return this.ruleTypeIDField;
            }
            set {
                this.ruleTypeIDField = value;
                this.RaisePropertyChanged("RuleTypeID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string RuleTypeTitle {
            get {
                return this.ruleTypeTitleField;
            }
            set {
                this.ruleTypeTitleField = value;
                this.RaisePropertyChanged("RuleTypeTitle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string RuleTypeDescription {
            get {
                return this.ruleTypeDescriptionField;
            }
            set {
                this.ruleTypeDescriptionField = value;
                this.RaisePropertyChanged("RuleTypeDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long TotalViolations {
            get {
                return this.totalViolationsField;
            }
            set {
                this.totalViolationsField = value;
                this.RaisePropertyChanged("TotalViolations");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPViolationsRuleTypeOverviewReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DLPViolationsRuleTypeOverviewItem[] ruleTypesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DLPViolationsRuleTypeOverviewItem[] RuleTypes {
            get {
                return this.ruleTypesField;
            }
            set {
                this.ruleTypesField = value;
                this.RaisePropertyChanged("RuleTypes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPViolationsRuleOverviewByRuleTypeItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long ruleIDField;
        
        private string ruleDescriptionField;
        
        private long totalViolationsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long RuleID {
            get {
                return this.ruleIDField;
            }
            set {
                this.ruleIDField = value;
                this.RaisePropertyChanged("RuleID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string RuleDescription {
            get {
                return this.ruleDescriptionField;
            }
            set {
                this.ruleDescriptionField = value;
                this.RaisePropertyChanged("RuleDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long TotalViolations {
            get {
                return this.totalViolationsField;
            }
            set {
                this.totalViolationsField = value;
                this.RaisePropertyChanged("TotalViolations");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPViolationsRuleOverviewByRuleTypeReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DLPViolationsRuleOverviewByRuleTypeItem[] rulesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DLPViolationsRuleOverviewByRuleTypeItem[] Rules {
            get {
                return this.rulesField;
            }
            set {
                this.rulesField = value;
                this.RaisePropertyChanged("Rules");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPRuleListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private int ruleTypeIdField;
        
        private int policyIdField;
        
        private string descriptionField;
        
        private bool isVisibleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int RuleTypeId {
            get {
                return this.ruleTypeIdField;
            }
            set {
                this.ruleTypeIdField = value;
                this.RaisePropertyChanged("RuleTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int PolicyId {
            get {
                return this.policyIdField;
            }
            set {
                this.policyIdField = value;
                this.RaisePropertyChanged("PolicyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsVisible {
            get {
                return this.isVisibleField;
            }
            set {
                this.isVisibleField = value;
                this.RaisePropertyChanged("IsVisible");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPRulesVisibility : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DLPPolicy[] policiesField;
        
        private DLPRuleType[] ruleTypesField;
        
        private DLPRuleListItem[] rulesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DLPPolicy[] Policies {
            get {
                return this.policiesField;
            }
            set {
                this.policiesField = value;
                this.RaisePropertyChanged("Policies");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public DLPRuleType[] RuleTypes {
            get {
                return this.ruleTypesField;
            }
            set {
                this.ruleTypesField = value;
                this.RaisePropertyChanged("RuleTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public DLPRuleListItem[] Rules {
            get {
                return this.rulesField;
            }
            set {
                this.rulesField = value;
                this.RaisePropertyChanged("Rules");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPPolicy : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DLPRuleType[] ruleTypeListField;
        
        private long idField;
        
        private string titleField;
        
        private string descriptionField;
        
        private bool isUsedByCompanyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DLPRuleType[] RuleTypeList {
            get {
                return this.ruleTypeListField;
            }
            set {
                this.ruleTypeListField = value;
                this.RaisePropertyChanged("RuleTypeList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsUsedByCompany {
            get {
                return this.isUsedByCompanyField;
            }
            set {
                this.isUsedByCompanyField = value;
                this.RaisePropertyChanged("IsUsedByCompany");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPRuleType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DLPRule[] ruleListField;
        
        private long idField;
        
        private string descriptionField;
        
        private System.Nullable<long> policyIdField;
        
        private bool isUsedByCompanyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DLPRule[] RuleList {
            get {
                return this.ruleListField;
            }
            set {
                this.ruleListField = value;
                this.RaisePropertyChanged("RuleList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<long> PolicyId {
            get {
                return this.policyIdField;
            }
            set {
                this.policyIdField = value;
                this.RaisePropertyChanged("PolicyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsUsedByCompany {
            get {
                return this.isUsedByCompanyField;
            }
            set {
                this.isUsedByCompanyField = value;
                this.RaisePropertyChanged("IsUsedByCompany");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPRule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] bWListField;
        
        private long idField;
        
        private int ruleTypeIdField;
        
        private int policyIdField;
        
        private int policyTypeIdField;
        
        private int severityIdField;
        
        private int defDRMIdField;
        
        private int regexIdField;
        
        private string regexTermField;
        
        private string descriptionField;
        
        private int ruleActionIdField;
        
        private int maxOccurancesField;
        
        private string termsField;
        
        private string formatsField;
        
        private int weightField;
        
        private int probabilityField;
        
        private bool isUsedByCompanyField;
        
        private System.Nullable<long> entityRuleIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] BWList {
            get {
                return this.bWListField;
            }
            set {
                this.bWListField = value;
                this.RaisePropertyChanged("BWList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int RuleTypeId {
            get {
                return this.ruleTypeIdField;
            }
            set {
                this.ruleTypeIdField = value;
                this.RaisePropertyChanged("RuleTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int PolicyId {
            get {
                return this.policyIdField;
            }
            set {
                this.policyIdField = value;
                this.RaisePropertyChanged("PolicyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int PolicyTypeId {
            get {
                return this.policyTypeIdField;
            }
            set {
                this.policyTypeIdField = value;
                this.RaisePropertyChanged("PolicyTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int SeverityId {
            get {
                return this.severityIdField;
            }
            set {
                this.severityIdField = value;
                this.RaisePropertyChanged("SeverityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int DefDRMId {
            get {
                return this.defDRMIdField;
            }
            set {
                this.defDRMIdField = value;
                this.RaisePropertyChanged("DefDRMId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int RegexId {
            get {
                return this.regexIdField;
            }
            set {
                this.regexIdField = value;
                this.RaisePropertyChanged("RegexId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string RegexTerm {
            get {
                return this.regexTermField;
            }
            set {
                this.regexTermField = value;
                this.RaisePropertyChanged("RegexTerm");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int RuleActionId {
            get {
                return this.ruleActionIdField;
            }
            set {
                this.ruleActionIdField = value;
                this.RaisePropertyChanged("RuleActionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public int MaxOccurances {
            get {
                return this.maxOccurancesField;
            }
            set {
                this.maxOccurancesField = value;
                this.RaisePropertyChanged("MaxOccurances");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Terms {
            get {
                return this.termsField;
            }
            set {
                this.termsField = value;
                this.RaisePropertyChanged("Terms");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Formats {
            get {
                return this.formatsField;
            }
            set {
                this.formatsField = value;
                this.RaisePropertyChanged("Formats");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public int Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
                this.RaisePropertyChanged("Weight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public int Probability {
            get {
                return this.probabilityField;
            }
            set {
                this.probabilityField = value;
                this.RaisePropertyChanged("Probability");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public bool IsUsedByCompany {
            get {
                return this.isUsedByCompanyField;
            }
            set {
                this.isUsedByCompanyField = value;
                this.RaisePropertyChanged("IsUsedByCompany");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=17)]
        public System.Nullable<long> EntityRuleId {
            get {
                return this.entityRuleIdField;
            }
            set {
                this.entityRuleIdField = value;
                this.RaisePropertyChanged("EntityRuleId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPViolation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string fNameField;
        
        private string lNameField;
        
        private string emailField;
        
        private string descriptionField;
        
        private string justificationField;
        
        private System.DateTime createDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
                this.RaisePropertyChanged("FName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LName {
            get {
                return this.lNameField;
            }
            set {
                this.lNameField = value;
                this.RaisePropertyChanged("LName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Justification {
            get {
                return this.justificationField;
            }
            set {
                this.justificationField = value;
                this.RaisePropertyChanged("Justification");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
                this.RaisePropertyChanged("CreateDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DLPViolationsReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DLPViolation[] violationsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public DLPViolation[] Violations {
            get {
                return this.violationsField;
            }
            set {
                this.violationsField = value;
                this.RaisePropertyChanged("Violations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyDLPSummaryReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class ReportParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> pageField;
        
        private System.Nullable<long> recordsPerPageField;
        
        private System.Nullable<long> topCountField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private string sortColumnField;
        
        private OrderByDirection orderDirectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
                this.RaisePropertyChanged("Page");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<long> RecordsPerPage {
            get {
                return this.recordsPerPageField;
            }
            set {
                this.recordsPerPageField = value;
                this.RaisePropertyChanged("RecordsPerPage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<long> TopCount {
            get {
                return this.topCountField;
            }
            set {
                this.topCountField = value;
                this.RaisePropertyChanged("TopCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string SortColumn {
            get {
                return this.sortColumnField;
            }
            set {
                this.sortColumnField = value;
                this.RaisePropertyChanged("SortColumn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public OrderByDirection OrderDirection {
            get {
                return this.orderDirectionField;
            }
            set {
                this.orderDirectionField = value;
                this.RaisePropertyChanged("OrderDirection");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum OrderByDirection {
        
        /// <remarks/>
        ASC,
        
        /// <remarks/>
        DESC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class Decryption : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string authorEmailAddressField;
        
        private string userEmailAddressField;
        
        private long idField;
        
        private long safeIDField;
        
        private long userIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AuthorEmailAddress {
            get {
                return this.authorEmailAddressField;
            }
            set {
                this.authorEmailAddressField = value;
                this.RaisePropertyChanged("AuthorEmailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserEmailAddress {
            get {
                return this.userEmailAddressField;
            }
            set {
                this.userEmailAddressField = value;
                this.RaisePropertyChanged("UserEmailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long SafeID {
            get {
                return this.safeIDField;
            }
            set {
                this.safeIDField = value;
                this.RaisePropertyChanged("SafeID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class Encryption : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Decryption[] decryptionsField;
        
        private long idField;
        
        private long containerIDField;
        
        private string authorEmailAddressField;
        
        private string containerTimeStampField;
        
        private System.Nullable<long> userIDField;
        
        private System.Nullable<int> decryptLimitField;
        
        private System.Nullable<System.DateTime> sunriseDateField;
        
        private System.Nullable<System.DateTime> sunsetDateField;
        
        private System.Nullable<System.DateTime> recallDateField;
        
        private System.DateTime createDateField;
        
        private System.Nullable<bool> isTotalRecallField;
        
        private System.Nullable<bool> isAuthorAccessRevokedField;
        
        private System.Nullable<long> totalRecallParentIDField;
        
        private System.Nullable<long> recalledByUserIDField;
        
        private string recalledByUserNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Decryption[] Decryptions {
            get {
                return this.decryptionsField;
            }
            set {
                this.decryptionsField = value;
                this.RaisePropertyChanged("Decryptions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long ContainerID {
            get {
                return this.containerIDField;
            }
            set {
                this.containerIDField = value;
                this.RaisePropertyChanged("ContainerID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string AuthorEmailAddress {
            get {
                return this.authorEmailAddressField;
            }
            set {
                this.authorEmailAddressField = value;
                this.RaisePropertyChanged("AuthorEmailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ContainerTimeStamp {
            get {
                return this.containerTimeStampField;
            }
            set {
                this.containerTimeStampField = value;
                this.RaisePropertyChanged("ContainerTimeStamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<long> UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<int> DecryptLimit {
            get {
                return this.decryptLimitField;
            }
            set {
                this.decryptLimitField = value;
                this.RaisePropertyChanged("DecryptLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<System.DateTime> SunriseDate {
            get {
                return this.sunriseDateField;
            }
            set {
                this.sunriseDateField = value;
                this.RaisePropertyChanged("SunriseDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<System.DateTime> SunsetDate {
            get {
                return this.sunsetDateField;
            }
            set {
                this.sunsetDateField = value;
                this.RaisePropertyChanged("SunsetDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<System.DateTime> RecallDate {
            get {
                return this.recallDateField;
            }
            set {
                this.recallDateField = value;
                this.RaisePropertyChanged("RecallDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
                this.RaisePropertyChanged("CreateDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
        public System.Nullable<bool> IsTotalRecall {
            get {
                return this.isTotalRecallField;
            }
            set {
                this.isTotalRecallField = value;
                this.RaisePropertyChanged("IsTotalRecall");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=12)]
        public System.Nullable<bool> IsAuthorAccessRevoked {
            get {
                return this.isAuthorAccessRevokedField;
            }
            set {
                this.isAuthorAccessRevokedField = value;
                this.RaisePropertyChanged("IsAuthorAccessRevoked");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
        public System.Nullable<long> TotalRecallParentID {
            get {
                return this.totalRecallParentIDField;
            }
            set {
                this.totalRecallParentIDField = value;
                this.RaisePropertyChanged("TotalRecallParentID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=14)]
        public System.Nullable<long> RecalledByUserID {
            get {
                return this.recalledByUserIDField;
            }
            set {
                this.recalledByUserIDField = value;
                this.RaisePropertyChanged("RecalledByUserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string RecalledByUserName {
            get {
                return this.recalledByUserNameField;
            }
            set {
                this.recalledByUserNameField = value;
                this.RaisePropertyChanged("RecalledByUserName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class Device : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string hWIdField;
        
        private long userAccountIdField;
        
        private int typeField;
        
        private DeviceType deviceTypeField;
        
        private System.DateTime expiresDateField;
        
        private string nameField;
        
        private System.DateTime dateDeployedField;
        
        private int encryptedCountField;
        
        private int decryptedCountField;
        
        private string nonceField;
        
        private bool activeSessionField;
        
        private System.Nullable<long> tokenIDField;
        
        private DeviceStatus statusField;
        
        private System.Nullable<System.DateTime> lastLoginField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string HWId {
            get {
                return this.hWIdField;
            }
            set {
                this.hWIdField = value;
                this.RaisePropertyChanged("HWId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long UserAccountId {
            get {
                return this.userAccountIdField;
            }
            set {
                this.userAccountIdField = value;
                this.RaisePropertyChanged("UserAccountId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public DeviceType DeviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
                this.RaisePropertyChanged("DeviceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime ExpiresDate {
            get {
                return this.expiresDateField;
            }
            set {
                this.expiresDateField = value;
                this.RaisePropertyChanged("ExpiresDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime DateDeployed {
            get {
                return this.dateDeployedField;
            }
            set {
                this.dateDeployedField = value;
                this.RaisePropertyChanged("DateDeployed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int EncryptedCount {
            get {
                return this.encryptedCountField;
            }
            set {
                this.encryptedCountField = value;
                this.RaisePropertyChanged("EncryptedCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int DecryptedCount {
            get {
                return this.decryptedCountField;
            }
            set {
                this.decryptedCountField = value;
                this.RaisePropertyChanged("DecryptedCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Nonce {
            get {
                return this.nonceField;
            }
            set {
                this.nonceField = value;
                this.RaisePropertyChanged("Nonce");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool ActiveSession {
            get {
                return this.activeSessionField;
            }
            set {
                this.activeSessionField = value;
                this.RaisePropertyChanged("ActiveSession");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=12)]
        public System.Nullable<long> TokenID {
            get {
                return this.tokenIDField;
            }
            set {
                this.tokenIDField = value;
                this.RaisePropertyChanged("TokenID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public DeviceStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=14)]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.lastLoginField;
            }
            set {
                this.lastLoginField = value;
                this.RaisePropertyChanged("LastLogin");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum DeviceType {
        
        /// <remarks/>
        UNDEFINED,
        
        /// <remarks/>
        WIN_R_AND_R,
        
        /// <remarks/>
        WIN_PRO,
        
        /// <remarks/>
        IOS_R_AND_R,
        
        /// <remarks/>
        IOS_PRO,
        
        /// <remarks/>
        DROID_R_AND_R,
        
        /// <remarks/>
        DROID_PRO,
        
        /// <remarks/>
        JAVA_R_AND_R,
        
        /// <remarks/>
        JAVA_PRO,
        
        /// <remarks/>
        WIN_PHONE_R_AND_R,
        
        /// <remarks/>
        WIN_PHONE_PRO,
        
        /// <remarks/>
        MAC_R_AND_R,
        
        /// <remarks/>
        MAC_PRO,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum DeviceStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Suspended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class GlassWallConfig : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int fTCIdField;
        
        private string titleField;
        
        private string settingField;
        
        private bool isWatermarkField;
        
        private string xML_TagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int FTCId {
            get {
                return this.fTCIdField;
            }
            set {
                this.fTCIdField = value;
                this.RaisePropertyChanged("FTCId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Setting {
            get {
                return this.settingField;
            }
            set {
                this.settingField = value;
                this.RaisePropertyChanged("Setting");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsWatermark {
            get {
                return this.isWatermarkField;
            }
            set {
                this.isWatermarkField = value;
                this.RaisePropertyChanged("IsWatermark");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string XML_Tag {
            get {
                return this.xML_TagField;
            }
            set {
                this.xML_TagField = value;
                this.RaisePropertyChanged("XML_Tag");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class GlassWallFileType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GlassWallConfig[] configsField;
        
        private int idField;
        
        private string titleField;
        
        private string xML_TagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public GlassWallConfig[] Configs {
            get {
                return this.configsField;
            }
            set {
                this.configsField = value;
                this.RaisePropertyChanged("Configs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string XML_Tag {
            get {
                return this.xML_TagField;
            }
            set {
                this.xML_TagField = value;
                this.RaisePropertyChanged("XML_Tag");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyGWConfig : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GlassWallFileType[] fileTypesField;
        
        private long idField;
        
        private bool enableAntiMalwareField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public GlassWallFileType[] FileTypes {
            get {
                return this.fileTypesField;
            }
            set {
                this.fileTypesField = value;
                this.RaisePropertyChanged("FileTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool EnableAntiMalware {
            get {
                return this.enableAntiMalwareField;
            }
            set {
                this.enableAntiMalwareField = value;
                this.RaisePropertyChanged("EnableAntiMalware");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyGeneology : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private long parentIdField;
        
        private string parentNameField;
        
        private long childIdField;
        
        private string childNameField;
        
        private int levelField;
        
        private bool isAdminField;
        
        private bool isOwnerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
                this.RaisePropertyChanged("ParentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ParentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
                this.RaisePropertyChanged("ParentName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ChildId {
            get {
                return this.childIdField;
            }
            set {
                this.childIdField = value;
                this.RaisePropertyChanged("ChildId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ChildName {
            get {
                return this.childNameField;
            }
            set {
                this.childNameField = value;
                this.RaisePropertyChanged("ChildName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
                this.RaisePropertyChanged("IsAdmin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool IsOwner {
            get {
                return this.isOwnerField;
            }
            set {
                this.isOwnerField = value;
                this.RaisePropertyChanged("IsOwner");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyEmailTemplate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int templateTypeField;
        
        private string baseBodyField;
        
        private string accessRightsField;
        
        private string sunriseField;
        
        private string sunsetField;
        
        private string countdownField;
        
        private string headerField;
        
        private bool removeTemplateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int TemplateType {
            get {
                return this.templateTypeField;
            }
            set {
                this.templateTypeField = value;
                this.RaisePropertyChanged("TemplateType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BaseBody {
            get {
                return this.baseBodyField;
            }
            set {
                this.baseBodyField = value;
                this.RaisePropertyChanged("BaseBody");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string AccessRights {
            get {
                return this.accessRightsField;
            }
            set {
                this.accessRightsField = value;
                this.RaisePropertyChanged("AccessRights");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Sunrise {
            get {
                return this.sunriseField;
            }
            set {
                this.sunriseField = value;
                this.RaisePropertyChanged("Sunrise");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Sunset {
            get {
                return this.sunsetField;
            }
            set {
                this.sunsetField = value;
                this.RaisePropertyChanged("Sunset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Countdown {
            get {
                return this.countdownField;
            }
            set {
                this.countdownField = value;
                this.RaisePropertyChanged("Countdown");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
                this.RaisePropertyChanged("Header");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool RemoveTemplate {
            get {
                return this.removeTemplateField;
            }
            set {
                this.removeTemplateField = value;
                this.RaisePropertyChanged("RemoveTemplate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyDomain : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string domainField;
        
        private System.DateTime createdDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
                this.RaisePropertyChanged("Domain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyDLPConfig : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private bool enableAlwaysEncryptField;
        
        private bool enableAntiMalwareField;
        
        private bool enableDLPField;
        
        private bool enablePassiveModeField;
        
        private bool encryptUponViolationField;
        
        private bool oneAndDoneField;
        
        private int defaultDRMForAlwaysEncryptField;
        
        private DLPPolicy[] policiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool EnableAlwaysEncrypt {
            get {
                return this.enableAlwaysEncryptField;
            }
            set {
                this.enableAlwaysEncryptField = value;
                this.RaisePropertyChanged("EnableAlwaysEncrypt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool EnableAntiMalware {
            get {
                return this.enableAntiMalwareField;
            }
            set {
                this.enableAntiMalwareField = value;
                this.RaisePropertyChanged("EnableAntiMalware");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool EnableDLP {
            get {
                return this.enableDLPField;
            }
            set {
                this.enableDLPField = value;
                this.RaisePropertyChanged("EnableDLP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool EnablePassiveMode {
            get {
                return this.enablePassiveModeField;
            }
            set {
                this.enablePassiveModeField = value;
                this.RaisePropertyChanged("EnablePassiveMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool EncryptUponViolation {
            get {
                return this.encryptUponViolationField;
            }
            set {
                this.encryptUponViolationField = value;
                this.RaisePropertyChanged("EncryptUponViolation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool OneAndDone {
            get {
                return this.oneAndDoneField;
            }
            set {
                this.oneAndDoneField = value;
                this.RaisePropertyChanged("OneAndDone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int DefaultDRMForAlwaysEncrypt {
            get {
                return this.defaultDRMForAlwaysEncryptField;
            }
            set {
                this.defaultDRMForAlwaysEncryptField = value;
                this.RaisePropertyChanged("DefaultDRMForAlwaysEncrypt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public DLPPolicy[] Policies {
            get {
                return this.policiesField;
            }
            set {
                this.policiesField = value;
                this.RaisePropertyChanged("Policies");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class DeviceListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private System.DateTime dateDeployedField;
        
        private DeviceType deviceTypeField;
        
        private int typeField;
        
        private long userAccountIdField;
        
        private string userAccountUserNameField;
        
        private string userAccountFirstNameField;
        
        private string userAccountLastNameField;
        
        private DeviceStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime DateDeployed {
            get {
                return this.dateDeployedField;
            }
            set {
                this.dateDeployedField = value;
                this.RaisePropertyChanged("DateDeployed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public DeviceType DeviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
                this.RaisePropertyChanged("DeviceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long UserAccountId {
            get {
                return this.userAccountIdField;
            }
            set {
                this.userAccountIdField = value;
                this.RaisePropertyChanged("UserAccountId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string UserAccountUserName {
            get {
                return this.userAccountUserNameField;
            }
            set {
                this.userAccountUserNameField = value;
                this.RaisePropertyChanged("UserAccountUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string UserAccountFirstName {
            get {
                return this.userAccountFirstNameField;
            }
            set {
                this.userAccountFirstNameField = value;
                this.RaisePropertyChanged("UserAccountFirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string UserAccountLastName {
            get {
                return this.userAccountLastNameField;
            }
            set {
                this.userAccountLastNameField = value;
                this.RaisePropertyChanged("UserAccountLastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public DeviceStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class CompanyCountList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long userCountField;
        
        private long deviceCountField;
        
        private long policyCountField;
        
        private long lexiconCountField;
        
        private long encryptionCountField;
        
        private long unactivatedCountField;
        
        private long suspendedCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long UserCount {
            get {
                return this.userCountField;
            }
            set {
                this.userCountField = value;
                this.RaisePropertyChanged("UserCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long DeviceCount {
            get {
                return this.deviceCountField;
            }
            set {
                this.deviceCountField = value;
                this.RaisePropertyChanged("DeviceCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long PolicyCount {
            get {
                return this.policyCountField;
            }
            set {
                this.policyCountField = value;
                this.RaisePropertyChanged("PolicyCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long LexiconCount {
            get {
                return this.lexiconCountField;
            }
            set {
                this.lexiconCountField = value;
                this.RaisePropertyChanged("LexiconCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long EncryptionCount {
            get {
                return this.encryptionCountField;
            }
            set {
                this.encryptionCountField = value;
                this.RaisePropertyChanged("EncryptionCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long UnactivatedCount {
            get {
                return this.unactivatedCountField;
            }
            set {
                this.unactivatedCountField = value;
                this.RaisePropertyChanged("UnactivatedCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public long SuspendedCount {
            get {
                return this.suspendedCountField;
            }
            set {
                this.suspendedCountField = value;
                this.RaisePropertyChanged("SuspendedCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class Company : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string nameField;
        
        private string abbreviationField;
        
        private CompanyType typeField;
        
        private string contact1NameField;
        
        private string contact1PhoneField;
        
        private string contact2NameField;
        
        private string contact2PhoneField;
        
        private ContactInfo contactInfoField;
        
        private LicensingInfo licensingInfoField;
        
        private bool useGlobalExpirationDateField;
        
        private System.Nullable<System.DateTime> globalExpirationDateField;
        
        private System.DateTime createdDateField;
        
        private int requirePasswordChangeDaysField;
        
        private long parentIdField;
        
        private string parentNameField;
        
        private CompanyCountList countListField;
        
        private bool isDLPVisibleField;
        
        private bool isTrialModeActiveField;
        
        private bool requireAccountApprovalField;
        
        private bool isAntiMalwareVisibleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Abbreviation {
            get {
                return this.abbreviationField;
            }
            set {
                this.abbreviationField = value;
                this.RaisePropertyChanged("Abbreviation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public CompanyType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Contact1Name {
            get {
                return this.contact1NameField;
            }
            set {
                this.contact1NameField = value;
                this.RaisePropertyChanged("Contact1Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Contact1Phone {
            get {
                return this.contact1PhoneField;
            }
            set {
                this.contact1PhoneField = value;
                this.RaisePropertyChanged("Contact1Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Contact2Name {
            get {
                return this.contact2NameField;
            }
            set {
                this.contact2NameField = value;
                this.RaisePropertyChanged("Contact2Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Contact2Phone {
            get {
                return this.contact2PhoneField;
            }
            set {
                this.contact2PhoneField = value;
                this.RaisePropertyChanged("Contact2Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public ContactInfo ContactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
                this.RaisePropertyChanged("ContactInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public LicensingInfo LicensingInfo {
            get {
                return this.licensingInfoField;
            }
            set {
                this.licensingInfoField = value;
                this.RaisePropertyChanged("LicensingInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool UseGlobalExpirationDate {
            get {
                return this.useGlobalExpirationDateField;
            }
            set {
                this.useGlobalExpirationDateField = value;
                this.RaisePropertyChanged("UseGlobalExpirationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
        public System.Nullable<System.DateTime> GlobalExpirationDate {
            get {
                return this.globalExpirationDateField;
            }
            set {
                this.globalExpirationDateField = value;
                this.RaisePropertyChanged("GlobalExpirationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public int RequirePasswordChangeDays {
            get {
                return this.requirePasswordChangeDaysField;
            }
            set {
                this.requirePasswordChangeDaysField = value;
                this.RaisePropertyChanged("RequirePasswordChangeDays");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public long ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
                this.RaisePropertyChanged("ParentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string ParentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
                this.RaisePropertyChanged("ParentName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public CompanyCountList CountList {
            get {
                return this.countListField;
            }
            set {
                this.countListField = value;
                this.RaisePropertyChanged("CountList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public bool IsDLPVisible {
            get {
                return this.isDLPVisibleField;
            }
            set {
                this.isDLPVisibleField = value;
                this.RaisePropertyChanged("IsDLPVisible");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public bool IsTrialModeActive {
            get {
                return this.isTrialModeActiveField;
            }
            set {
                this.isTrialModeActiveField = value;
                this.RaisePropertyChanged("IsTrialModeActive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public bool RequireAccountApproval {
            get {
                return this.requireAccountApprovalField;
            }
            set {
                this.requireAccountApprovalField = value;
                this.RaisePropertyChanged("RequireAccountApproval");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public bool IsAntiMalwareVisible {
            get {
                return this.isAntiMalwareVisibleField;
            }
            set {
                this.isAntiMalwareVisibleField = value;
                this.RaisePropertyChanged("IsAntiMalwareVisible");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum CompanyType {
        
        /// <remarks/>
        Direct_Customer,
        
        /// <remarks/>
        Reseller,
        
        /// <remarks/>
        Reseller_Customer,
        
        /// <remarks/>
        Master,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class ContactInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string emailField;
        
        private string phoneField;
        
        private string mobileField;
        
        private string faxField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string regionField;
        
        private string countryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
                this.RaisePropertyChanged("Mobile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
                this.RaisePropertyChanged("Fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
                this.RaisePropertyChanged("Address1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
                this.RaisePropertyChanged("Address2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
                this.RaisePropertyChanged("ZipCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
                this.RaisePropertyChanged("Region");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("Country");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class AccessGroupUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private long userIdField;
        
        private string userNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private long createdByField;
        
        private System.DateTime createdDateField;
        
        private System.Nullable<long> removedByField;
        
        private string removedByFirstNameField;
        
        private string removedByLastNameField;
        
        private System.Nullable<System.DateTime> removedDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<long> RemovedBy {
            get {
                return this.removedByField;
            }
            set {
                this.removedByField = value;
                this.RaisePropertyChanged("RemovedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string RemovedByFirstName {
            get {
                return this.removedByFirstNameField;
            }
            set {
                this.removedByFirstNameField = value;
                this.RaisePropertyChanged("RemovedByFirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string RemovedByLastName {
            get {
                return this.removedByLastNameField;
            }
            set {
                this.removedByLastNameField = value;
                this.RaisePropertyChanged("RemovedByLastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public System.Nullable<System.DateTime> RemovedDate {
            get {
                return this.removedDateField;
            }
            set {
                this.removedDateField = value;
                this.RaisePropertyChanged("RemovedDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class AccessGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string nameField;
        
        private bool isActiveField;
        
        private long createdByField;
        
        private System.DateTime createdDateField;
        
        private bool isUserDefinedField;
        
        private int userCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
                this.RaisePropertyChanged("IsActive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool IsUserDefined {
            get {
                return this.isUserDefinedField;
            }
            set {
                this.isUserDefinedField = value;
                this.RaisePropertyChanged("IsUserDefined");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int UserCount {
            get {
                return this.userCountField;
            }
            set {
                this.userCountField = value;
                this.RaisePropertyChanged("UserCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UserAccountListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private long entityIdField;
        
        private string fNameField;
        
        private string lNameField;
        
        private string userNameField;
        
        private string companyNameField;
        
        private AccountType typeField;
        
        private PortalRoleListItem roleField;
        
        private System.Nullable<System.DateTime> licenseCreatedDateField;
        
        private System.Nullable<System.DateTime> licenseExpirationDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
                this.RaisePropertyChanged("FName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LName {
            get {
                return this.lNameField;
            }
            set {
                this.lNameField = value;
                this.RaisePropertyChanged("LName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
                this.RaisePropertyChanged("CompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public AccountType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public PortalRoleListItem Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
                this.RaisePropertyChanged("Role");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<System.DateTime> LicenseCreatedDate {
            get {
                return this.licenseCreatedDateField;
            }
            set {
                this.licenseCreatedDateField = value;
                this.RaisePropertyChanged("LicenseCreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<System.DateTime> LicenseExpirationDate {
            get {
                return this.licenseExpirationDateField;
            }
            set {
                this.licenseExpirationDateField = value;
                this.RaisePropertyChanged("LicenseExpirationDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum AccountType {
        
        /// <remarks/>
        Professional,
        
        /// <remarks/>
        Free,
        
        /// <remarks/>
        Trial,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class PortalRoleListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UserAccountListReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private UserAccountListItem[] accountsField;
        
        private long totalRecordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public UserAccountListItem[] Accounts {
            get {
                return this.accountsField;
            }
            set {
                this.accountsField = value;
                this.RaisePropertyChanged("Accounts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class AccountActivationConfig : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AccountActivationLinkStatus statusField;
        
        private long entityIDField;
        
        private string entityNameField;
        
        private bool isOverrideField;
        
        private bool isSoftwarePreinstalledField;
        
        private bool passwordExistsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AccountActivationLinkStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
                this.RaisePropertyChanged("EntityID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string EntityName {
            get {
                return this.entityNameField;
            }
            set {
                this.entityNameField = value;
                this.RaisePropertyChanged("EntityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsOverride {
            get {
                return this.isOverrideField;
            }
            set {
                this.isOverrideField = value;
                this.RaisePropertyChanged("IsOverride");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsSoftwarePreinstalled {
            get {
                return this.isSoftwarePreinstalledField;
            }
            set {
                this.isSoftwarePreinstalledField = value;
                this.RaisePropertyChanged("IsSoftwarePreinstalled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool PasswordExists {
            get {
                return this.passwordExistsField;
            }
            set {
                this.passwordExistsField = value;
                this.RaisePropertyChanged("PasswordExists");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum AccountActivationLinkStatus {
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Used,
        
        /// <remarks/>
        Removed,
        
        /// <remarks/>
        Expired,
        
        /// <remarks/>
        Replaced,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Bad_Data,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class SecurityQuestion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int questionNumberField;
        
        private string questionTextField;
        
        private string answerHashField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int QuestionNumber {
            get {
                return this.questionNumberField;
            }
            set {
                this.questionNumberField = value;
                this.RaisePropertyChanged("QuestionNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string QuestionText {
            get {
                return this.questionTextField;
            }
            set {
                this.questionTextField = value;
                this.RaisePropertyChanged("QuestionText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string AnswerHash {
            get {
                return this.answerHashField;
            }
            set {
                this.answerHashField = value;
                this.RaisePropertyChanged("AnswerHash");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UserAccountCountList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long aliasCountField;
        
        private long deviceCountField;
        
        private long encryptionCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long AliasCount {
            get {
                return this.aliasCountField;
            }
            set {
                this.aliasCountField = value;
                this.RaisePropertyChanged("AliasCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long DeviceCount {
            get {
                return this.deviceCountField;
            }
            set {
                this.deviceCountField = value;
                this.RaisePropertyChanged("DeviceCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long EncryptionCount {
            get {
                return this.encryptionCountField;
            }
            set {
                this.encryptionCountField = value;
                this.RaisePropertyChanged("EncryptionCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UserAccount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private int departmentIdField;
        
        private long entityIdField;
        
        private string fNameField;
        
        private string lNameField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string companyField;
        
        private bool isLockedOutField;
        
        private bool isSuspendedField;
        
        private bool isUsingTemporaryPasswordField;
        
        private bool isForcePasswordChangeField;
        
        private System.DateTime lastPasswordChangeField;
        
        private ContactInfo contactInfoField;
        
        private AccountType typeField;
        
        private PortalRoleListItem roleField;
        
        private UserAccountCountList countListField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private System.Nullable<System.DateTime> licenseCreatedDateField;
        
        private System.Nullable<System.DateTime> licenseExpirationDateField;
        
        private bool isAwaitingApprovalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int DepartmentId {
            get {
                return this.departmentIdField;
            }
            set {
                this.departmentIdField = value;
                this.RaisePropertyChanged("DepartmentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FName {
            get {
                return this.fNameField;
            }
            set {
                this.fNameField = value;
                this.RaisePropertyChanged("FName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string LName {
            get {
                return this.lNameField;
            }
            set {
                this.lNameField = value;
                this.RaisePropertyChanged("LName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
                this.RaisePropertyChanged("Company");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool IsLockedOut {
            get {
                return this.isLockedOutField;
            }
            set {
                this.isLockedOutField = value;
                this.RaisePropertyChanged("IsLockedOut");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsSuspended {
            get {
                return this.isSuspendedField;
            }
            set {
                this.isSuspendedField = value;
                this.RaisePropertyChanged("IsSuspended");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool IsUsingTemporaryPassword {
            get {
                return this.isUsingTemporaryPasswordField;
            }
            set {
                this.isUsingTemporaryPasswordField = value;
                this.RaisePropertyChanged("IsUsingTemporaryPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool IsForcePasswordChange {
            get {
                return this.isForcePasswordChangeField;
            }
            set {
                this.isForcePasswordChangeField = value;
                this.RaisePropertyChanged("IsForcePasswordChange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.DateTime LastPasswordChange {
            get {
                return this.lastPasswordChangeField;
            }
            set {
                this.lastPasswordChangeField = value;
                this.RaisePropertyChanged("LastPasswordChange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public ContactInfo ContactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
                this.RaisePropertyChanged("ContactInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public AccountType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public PortalRoleListItem Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
                this.RaisePropertyChanged("Role");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public UserAccountCountList CountList {
            get {
                return this.countListField;
            }
            set {
                this.countListField = value;
                this.RaisePropertyChanged("CountList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=17)]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=18)]
        public System.Nullable<System.DateTime> LicenseCreatedDate {
            get {
                return this.licenseCreatedDateField;
            }
            set {
                this.licenseCreatedDateField = value;
                this.RaisePropertyChanged("LicenseCreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=19)]
        public System.Nullable<System.DateTime> LicenseExpirationDate {
            get {
                return this.licenseExpirationDateField;
            }
            set {
                this.licenseExpirationDateField = value;
                this.RaisePropertyChanged("LicenseExpirationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public bool IsAwaitingApproval {
            get {
                return this.isAwaitingApprovalField;
            }
            set {
                this.isAwaitingApprovalField = value;
                this.RaisePropertyChanged("IsAwaitingApproval");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UserUsageRights : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long userIdField;
        
        private bool canCopyField;
        
        private bool canForwardField;
        
        private bool canPrintField;
        
        private bool canSaveField;
        
        private System.Nullable<long> createdByField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool CanCopy {
            get {
                return this.canCopyField;
            }
            set {
                this.canCopyField = value;
                this.RaisePropertyChanged("CanCopy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool CanForward {
            get {
                return this.canForwardField;
            }
            set {
                this.canForwardField = value;
                this.RaisePropertyChanged("CanForward");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool CanPrint {
            get {
                return this.canPrintField;
            }
            set {
                this.canPrintField = value;
                this.RaisePropertyChanged("CanPrint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool CanSave {
            get {
                return this.canSaveField;
            }
            set {
                this.canSaveField = value;
                this.RaisePropertyChanged("CanSave");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<long> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public partial class UsageRightsGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> idField;
        
        private string nameField;
        
        private bool isActiveField;
        
        private System.Nullable<long> createdByField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private System.Nullable<int> userCountField;
        
        private UsageRightEncryptOption encryptCopyField;
        
        private UsageRightEncryptOption encryptForwardField;
        
        private UsageRightEncryptOption encryptPrintField;
        
        private UsageRightEncryptOption encryptSaveField;
        
        private UsageRightEncryptOption encryptSunriseField;
        
        private UsageRightEncryptOption encryptSunsetField;
        
        private UsageRightDecryptOption decryptCopyField;
        
        private UsageRightDecryptOption decryptForwardField;
        
        private UsageRightDecryptOption decryptPrintField;
        
        private UsageRightDecryptOption decryptSaveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
                this.RaisePropertyChanged("IsActive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<long> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<int> UserCount {
            get {
                return this.userCountField;
            }
            set {
                this.userCountField = value;
                this.RaisePropertyChanged("UserCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public UsageRightEncryptOption EncryptCopy {
            get {
                return this.encryptCopyField;
            }
            set {
                this.encryptCopyField = value;
                this.RaisePropertyChanged("EncryptCopy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public UsageRightEncryptOption EncryptForward {
            get {
                return this.encryptForwardField;
            }
            set {
                this.encryptForwardField = value;
                this.RaisePropertyChanged("EncryptForward");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public UsageRightEncryptOption EncryptPrint {
            get {
                return this.encryptPrintField;
            }
            set {
                this.encryptPrintField = value;
                this.RaisePropertyChanged("EncryptPrint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public UsageRightEncryptOption EncryptSave {
            get {
                return this.encryptSaveField;
            }
            set {
                this.encryptSaveField = value;
                this.RaisePropertyChanged("EncryptSave");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public UsageRightEncryptOption EncryptSunrise {
            get {
                return this.encryptSunriseField;
            }
            set {
                this.encryptSunriseField = value;
                this.RaisePropertyChanged("EncryptSunrise");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public UsageRightEncryptOption EncryptSunset {
            get {
                return this.encryptSunsetField;
            }
            set {
                this.encryptSunsetField = value;
                this.RaisePropertyChanged("EncryptSunset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public UsageRightDecryptOption DecryptCopy {
            get {
                return this.decryptCopyField;
            }
            set {
                this.decryptCopyField = value;
                this.RaisePropertyChanged("DecryptCopy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public UsageRightDecryptOption DecryptForward {
            get {
                return this.decryptForwardField;
            }
            set {
                this.decryptForwardField = value;
                this.RaisePropertyChanged("DecryptForward");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public UsageRightDecryptOption DecryptPrint {
            get {
                return this.decryptPrintField;
            }
            set {
                this.decryptPrintField = value;
                this.RaisePropertyChanged("DecryptPrint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public UsageRightDecryptOption DecryptSave {
            get {
                return this.decryptSaveField;
            }
            set {
                this.decryptSaveField = value;
                this.RaisePropertyChanged("DecryptSave");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UsageRightEncryptOption {
        
        /// <remarks/>
        Allow,
        
        /// <remarks/>
        Disable,
        
        /// <remarks/>
        Enforce,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UsageRightDecryptOption {
        
        /// <remarks/>
        Allow,
        
        /// <remarks/>
        Disable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateUsageRightsGroupResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUsageRightsGroup", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUsageRightsGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.UsageRightsGroup usage_rights_group;
        
        public UpdateUsageRightsGroupRequest() {
        }
        
        public UpdateUsageRightsGroupRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, Encryptics.WebPortal.PortalService.UsageRightsGroup usage_rights_group) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
            this.usage_rights_group = usage_rights_group;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUsageRightsGroupResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUsageRightsGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResult UpdateUsageRightsGroupResult;
        
        public UpdateUsageRightsGroupResponse() {
        }
        
        public UpdateUsageRightsGroupResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResult UpdateUsageRightsGroupResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUsageRightsGroupResult = UpdateUsageRightsGroupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUsageRightsGroupStatus", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUsageRightsGroupStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public bool is_active;
        
        public UpdateUsageRightsGroupStatusRequest() {
        }
        
        public UpdateUsageRightsGroupStatusRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, bool is_active) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
            this.is_active = is_active;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUsageRightsGroupStatusResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUsageRightsGroupStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResult UpdateUsageRightsGroupStatusResult;
        
        public UpdateUsageRightsGroupStatusResponse() {
        }
        
        public UpdateUsageRightsGroupStatusResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResult UpdateUsageRightsGroupStatusResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUsageRightsGroupStatusResult = UpdateUsageRightsGroupStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUser", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string first_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public string last_name;
        
        public UpdateUserRequest() {
        }
        
        public UpdateUserRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string first_name, string last_name) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.first_name = first_name;
            this.last_name = last_name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateUserResult;
        
        public UpdateUserResponse() {
        }
        
        public UpdateUserResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateUserResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserResult = UpdateUserResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UserAdminStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Admin,
        
        /// <remarks/>
        Super_Admin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateUserAdminStatusStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        No_Change,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserAdminStatus", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserAdminStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.UserAdminStatus new_status;
        
        public UpdateUserAdminStatusRequest() {
        }
        
        public UpdateUserAdminStatusRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.UserAdminStatus new_status) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.new_status = new_status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserAdminStatusResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserAdminStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateUserAdminStatusStatus UpdateUserAdminStatusResult;
        
        public UpdateUserAdminStatusResponse() {
        }
        
        public UpdateUserAdminStatusResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateUserAdminStatusStatus UpdateUserAdminStatusResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserAdminStatusResult = UpdateUserAdminStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserCompany", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserCompanyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long new_entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public bool transfer_licenses;
        
        public UpdateUserCompanyRequest() {
        }
        
        public UpdateUserCompanyRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long new_entity_id, bool transfer_licenses) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.new_entity_id = new_entity_id;
            this.transfer_licenses = transfer_licenses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserCompanyResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserCompanyResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateUserCompanyResult;
        
        public UpdateUserCompanyResponse() {
        }
        
        public UpdateUserCompanyResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateUserCompanyResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserCompanyResult = UpdateUserCompanyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserContactInfo", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserContactInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string first_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string last_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.ContactInfo user_contact_info;
        
        public UpdateUserContactInfoRequest() {
        }
        
        public UpdateUserContactInfoRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id, string first_name, string last_name, Encryptics.WebPortal.PortalService.ContactInfo user_contact_info) {
            this.TokenAuth = TokenAuth;
            this.user_id = user_id;
            this.first_name = first_name;
            this.last_name = last_name;
            this.user_contact_info = user_contact_info;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserContactInfoResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserContactInfoResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateUserContactInfoResult;
        
        public UpdateUserContactInfoResponse() {
        }
        
        public UpdateUserContactInfoResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateUserContactInfoResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserContactInfoResult = UpdateUserContactInfoResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateUserPasswordStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Old_Password_Incorrect,
        
        /// <remarks/>
        History_Violation,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserPassword", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserPasswordRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string old_password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string new_password;
        
        public UpdateUserPasswordRequest() {
        }
        
        public UpdateUserPasswordRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string username, string old_password, string new_password) {
            this.TokenAuth = TokenAuth;
            this.username = username;
            this.old_password = old_password;
            this.new_password = new_password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserPasswordResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserPasswordResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateUserPasswordStatus UpdateUserPasswordResult;
        
        public UpdateUserPasswordResponse() {
        }
        
        public UpdateUserPasswordResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateUserPasswordStatus UpdateUserPasswordResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserPasswordResult = UpdateUserPasswordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserResetPassword", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserResetPasswordRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string new_password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public bool random_password;
        
        public UpdateUserResetPasswordRequest() {
        }
        
        public UpdateUserResetPasswordRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string new_password, bool random_password) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.new_password = new_password;
            this.random_password = random_password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserResetPasswordResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserResetPasswordResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateUserResetPasswordResult;
        
        public UpdateUserResetPasswordResponse() {
        }
        
        public UpdateUserResetPasswordResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateUserResetPasswordResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserResetPasswordResult = UpdateUserResetPasswordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserSecurityQuestion", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserSecurityQuestionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int question_number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string question;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string answer_hash;
        
        public UpdateUserSecurityQuestionRequest() {
        }
        
        public UpdateUserSecurityQuestionRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int question_number, string question, string answer_hash) {
            this.TokenAuth = TokenAuth;
            this.question_number = question_number;
            this.question = question;
            this.answer_hash = answer_hash;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserSecurityQuestionResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserSecurityQuestionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateUserSecurityQuestionResult;
        
        public UpdateUserSecurityQuestionResponse() {
        }
        
        public UpdateUserSecurityQuestionResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateUserSecurityQuestionResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserSecurityQuestionResult = UpdateUserSecurityQuestionResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UserStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Suspended,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserStatus", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.UserStatus new_status;
        
        public UpdateUserStatusRequest() {
        }
        
        public UpdateUserStatusRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.UserStatus new_status) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.new_status = new_status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserStatusResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateUserStatusResult;
        
        public UpdateUserStatusResponse() {
        }
        
        public UpdateUserStatusResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateUserStatusResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserStatusResult = UpdateUserStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserUnlock", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserUnlockRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public UpdateUserUnlockRequest() {
        }
        
        public UpdateUserUnlockRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserUnlockResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserUnlockResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateUserUnlockResult;
        
        public UpdateUserUnlockResponse() {
        }
        
        public UpdateUserUnlockResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateUserUnlockResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserUnlockResult = UpdateUserUnlockResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateUserUsageRightsStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserUsageRights", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserUsageRightsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.UserUsageRights user_usage_rights;
        
        public UpdateUserUsageRightsRequest() {
        }
        
        public UpdateUserUsageRightsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.UserUsageRights user_usage_rights) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_usage_rights = user_usage_rights;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserUsageRightsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateUserUsageRightsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateUserUsageRightsStatus UpdateUserUsageRightsResult;
        
        public UpdateUserUsageRightsResponse() {
        }
        
        public UpdateUserUsageRightsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateUserUsageRightsStatus UpdateUserUsageRightsResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateUserUsageRightsResult = UpdateUserUsageRightsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserLogin", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UserLoginRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string account_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string password;
        
        public UserLoginRequest() {
        }
        
        public UserLoginRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string account_name, string password) {
            this.TokenAuth = TokenAuth;
            this.account_name = account_name;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserLoginResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UserLoginResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UserAccount UserLoginResult;
        
        public UserLoginResponse() {
        }
        
        public UserLoginResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UserAccount UserLoginResult) {
            this.TokenAuth = TokenAuth;
            this.UserLoginResult = UserLoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserLogout", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UserLogoutRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public UserLogoutRequest() {
        }
        
        public UserLogoutRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserLogoutResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UserLogoutResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UserLogoutResult;
        
        public UserLogoutResponse() {
        }
        
        public UserLogoutResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UserLogoutResult) {
            this.TokenAuth = TokenAuth;
            this.UserLogoutResult = UserLogoutResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TokenLogin", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class TokenLoginRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string token;
        
        public TokenLoginRequest() {
        }
        
        public TokenLoginRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string token) {
            this.TokenAuth = TokenAuth;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TokenLoginResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class TokenLoginResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UserAccount TokenLoginResult;
        
        public TokenLoginResponse() {
        }
        
        public TokenLoginResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UserAccount TokenLoginResult) {
            this.TokenAuth = TokenAuth;
            this.TokenLoginResult = TokenLoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateToken", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class ValidateTokenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long user_id;
        
        public ValidateTokenRequest() {
        }
        
        public ValidateTokenRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id) {
            this.TokenAuth = TokenAuth;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTokenResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class ValidateTokenResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool ValidateTokenResult;
        
        public ValidateTokenResponse() {
        }
        
        public ValidateTokenResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool ValidateTokenResult) {
            this.TokenAuth = TokenAuth;
            this.ValidateTokenResult = ValidateTokenResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum AccountActivationStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Bad_Data,
        
        /// <remarks/>
        Needs_Password,
        
        /// <remarks/>
        Link_Expired,
        
        /// <remarks/>
        Used,
        
        /// <remarks/>
        Removed,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountActivation", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class AccountActivationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int activation_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string activation_code;
        
        public AccountActivationRequest() {
        }
        
        public AccountActivationRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code) {
            this.TokenAuth = TokenAuth;
            this.activation_id = activation_id;
            this.activation_code = activation_code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountActivationResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class AccountActivationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivationResult;
        
        public AccountActivationResponse() {
        }
        
        public AccountActivationResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivationResult) {
            this.TokenAuth = TokenAuth;
            this.AccountActivationResult = AccountActivationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountActivationByID", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class AccountActivationByIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int activation_id;
        
        public AccountActivationByIDRequest() {
        }
        
        public AccountActivationByIDRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id) {
            this.TokenAuth = TokenAuth;
            this.activation_id = activation_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountActivationByIDResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class AccountActivationByIDResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivationByIDResult;
        
        public AccountActivationByIDResponse() {
        }
        
        public AccountActivationByIDResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivationByIDResult) {
            this.TokenAuth = TokenAuth;
            this.AccountActivationByIDResult = AccountActivationByIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountActivationWithPassword", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class AccountActivationWithPasswordRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int activation_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string activation_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string hash;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public string password;
        
        public AccountActivationWithPasswordRequest() {
        }
        
        public AccountActivationWithPasswordRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code, string hash, string password) {
            this.TokenAuth = TokenAuth;
            this.activation_id = activation_id;
            this.activation_code = activation_code;
            this.hash = hash;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AccountActivationWithPasswordResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class AccountActivationWithPasswordResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivationWithPasswordResult;
        
        public AccountActivationWithPasswordResponse() {
        }
        
        public AccountActivationWithPasswordResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivationWithPasswordResult) {
            this.TokenAuth = TokenAuth;
            this.AccountActivationWithPasswordResult = AccountActivationWithPasswordResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum OriginSite {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        PORTAL,
        
        /// <remarks/>
        WEBSITE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum AccountRegistrationStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Exists,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExpireTokenSession", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class ExpireTokenSessionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long token_id;
        
        public ExpireTokenSessionRequest() {
        }
        
        public ExpireTokenSessionRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long token_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.token_id = token_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExpireTokenSessionResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class ExpireTokenSessionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool ExpireTokenSessionResult;
        
        public ExpireTokenSessionResponse() {
        }
        
        public ExpireTokenSessionResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool ExpireTokenSessionResult) {
            this.TokenAuth = TokenAuth;
            this.ExpireTokenSessionResult = ExpireTokenSessionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountActivationLinkStatus", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccountActivationLinkStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int activation_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string activation_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string hash;
        
        public GetAccountActivationLinkStatusRequest() {
        }
        
        public GetAccountActivationLinkStatusRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code, string hash) {
            this.TokenAuth = TokenAuth;
            this.activation_id = activation_id;
            this.activation_code = activation_code;
            this.hash = hash;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountActivationLinkStatusResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccountActivationLinkStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AccountActivationConfig GetAccountActivationLinkStatusResult;
        
        public GetAccountActivationLinkStatusResponse() {
        }
        
        public GetAccountActivationLinkStatusResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AccountActivationConfig GetAccountActivationLinkStatusResult) {
            this.TokenAuth = TokenAuth;
            this.GetAccountActivationLinkStatusResult = GetAccountActivationLinkStatusResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum AccountSearchType {
        
        /// <remarks/>
        ANY,
        
        /// <remarks/>
        FIRST_NAME,
        
        /// <remarks/>
        LAST_NAME,
        
        /// <remarks/>
        EMAIL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum AccountItemListSort {
        
        /// <remarks/>
        UNDEFINED,
        
        /// <remarks/>
        Email,
        
        /// <remarks/>
        First_Name,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        Last_Name,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountsList", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccountsListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string term;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.AccountSearchType search_type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.AccountItemListSort sort_field;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=4)]
        public Encryptics.WebPortal.PortalService.OrderByDirection order_dir;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=5)]
        public int page_size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=6)]
        public int page;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=7)]
        public Encryptics.WebPortal.PortalService.UserStatus user_status;
        
        public GetAccountsListRequest() {
        }
        
        public GetAccountsListRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, string term, Encryptics.WebPortal.PortalService.AccountSearchType search_type, Encryptics.WebPortal.PortalService.AccountItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page, Encryptics.WebPortal.PortalService.UserStatus user_status) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.term = term;
            this.search_type = search_type;
            this.sort_field = sort_field;
            this.order_dir = order_dir;
            this.page_size = page_size;
            this.page = page;
            this.user_status = user_status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountsListResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccountsListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UserAccountListReport GetAccountsListResult;
        
        public GetAccountsListResponse() {
        }
        
        public GetAccountsListResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UserAccountListReport GetAccountsListResult) {
            this.TokenAuth = TokenAuth;
            this.GetAccountsListResult = GetAccountsListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessGroupDetails", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccessGroupDetailsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        public GetAccessGroupDetailsRequest() {
        }
        
        public GetAccessGroupDetailsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessGroupDetailsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccessGroupDetailsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AccessGroup GetAccessGroupDetailsResult;
        
        public GetAccessGroupDetailsResponse() {
        }
        
        public GetAccessGroupDetailsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AccessGroup GetAccessGroupDetailsResult) {
            this.TokenAuth = TokenAuth;
            this.GetAccessGroupDetailsResult = GetAccessGroupDetailsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessGroups", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccessGroupsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> user_id;
        
        public GetAccessGroupsRequest() {
        }
        
        public GetAccessGroupsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<long> user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessGroupsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccessGroupsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AccessGroup[] GetAccessGroupsResult;
        
        public GetAccessGroupsResponse() {
        }
        
        public GetAccessGroupsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AccessGroup[] GetAccessGroupsResult) {
            this.TokenAuth = TokenAuth;
            this.GetAccessGroupsResult = GetAccessGroupsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessGroupUsers", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccessGroupUsersRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        public GetAccessGroupUsersRequest() {
        }
        
        public GetAccessGroupUsersRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessGroupUsersResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccessGroupUsersResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AccessGroupUser[] GetAccessGroupUsersResult;
        
        public GetAccessGroupUsersResponse() {
        }
        
        public GetAccessGroupUsersResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AccessGroupUser[] GetAccessGroupUsersResult) {
            this.TokenAuth = TokenAuth;
            this.GetAccessGroupUsersResult = GetAccessGroupUsersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessGroupUsersArchived", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccessGroupUsersArchivedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        public GetAccessGroupUsersArchivedRequest() {
        }
        
        public GetAccessGroupUsersArchivedRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessGroupUsersArchivedResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccessGroupUsersArchivedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AccessGroupUser[] GetAccessGroupUsersArchivedResult;
        
        public GetAccessGroupUsersArchivedResponse() {
        }
        
        public GetAccessGroupUsersArchivedResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AccessGroupUser[] GetAccessGroupUsersArchivedResult) {
            this.TokenAuth = TokenAuth;
            this.GetAccessGroupUsersArchivedResult = GetAccessGroupUsersArchivedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDetails", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDetailsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetCompanyDetailsRequest() {
        }
        
        public GetCompanyDetailsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDetailsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDetailsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.Company GetCompanyDetailsResult;
        
        public GetCompanyDetailsResponse() {
        }
        
        public GetCompanyDetailsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Company GetCompanyDetailsResult) {
            this.TokenAuth = TokenAuth;
            this.GetCompanyDetailsResult = GetCompanyDetailsResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum DeviceItemListSort {
        
        /// <remarks/>
        UNDEFINED,
        
        /// <remarks/>
        DateDeployed,
        
        /// <remarks/>
        DeviceType,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        OwnerID,
        
        /// <remarks/>
        OwnerFirstName,
        
        /// <remarks/>
        OwnerLastName,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDevices", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDevicesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.DeviceItemListSort sort_field;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.OrderByDirection order_dir;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public int page_size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=4)]
        public int page;
        
        public GetCompanyDevicesRequest() {
        }
        
        public GetCompanyDevicesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DeviceItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.sort_field = sort_field;
            this.order_dir = order_dir;
            this.page_size = page_size;
            this.page = page;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDevicesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDevicesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DeviceListItem[] GetCompanyDevicesResult;
        
        public GetCompanyDevicesResponse() {
        }
        
        public GetCompanyDevicesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DeviceListItem[] GetCompanyDevicesResult) {
            this.TokenAuth = TokenAuth;
            this.GetCompanyDevicesResult = GetCompanyDevicesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDLPConfig", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDLPConfigRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetCompanyDLPConfigRequest() {
        }
        
        public GetCompanyDLPConfigRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDLPConfigResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDLPConfigResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyDLPConfig GetCompanyDLPConfigResult;
        
        public GetCompanyDLPConfigResponse() {
        }
        
        public GetCompanyDLPConfigResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyDLPConfig GetCompanyDLPConfigResult) {
            this.TokenAuth = TokenAuth;
            this.GetCompanyDLPConfigResult = GetCompanyDLPConfigResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDomains", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDomainsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetCompanyDomainsRequest() {
        }
        
        public GetCompanyDomainsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDomainsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDomainsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyDomain[] GetCompanyDomainsResult;
        
        public GetCompanyDomainsResponse() {
        }
        
        public GetCompanyDomainsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyDomain[] GetCompanyDomainsResult) {
            this.TokenAuth = TokenAuth;
            this.GetCompanyDomainsResult = GetCompanyDomainsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyEmailTemplate", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyEmailTemplateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public int template_type;
        
        public GetCompanyEmailTemplateRequest() {
        }
        
        public GetCompanyEmailTemplateRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int template_type) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.template_type = template_type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyEmailTemplateResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyEmailTemplateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyEmailTemplate GetCompanyEmailTemplateResult;
        
        public GetCompanyEmailTemplateResponse() {
        }
        
        public GetCompanyEmailTemplateResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyEmailTemplate GetCompanyEmailTemplateResult) {
            this.TokenAuth = TokenAuth;
            this.GetCompanyEmailTemplateResult = GetCompanyEmailTemplateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyGeneology", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyGeneologyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetCompanyGeneologyRequest() {
        }
        
        public GetCompanyGeneologyRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyGeneologyResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyGeneologyResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyGeneology[] GetCompanyGeneologyResult;
        
        public GetCompanyGeneologyResponse() {
        }
        
        public GetCompanyGeneologyResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyGeneology[] GetCompanyGeneologyResult) {
            this.TokenAuth = TokenAuth;
            this.GetCompanyGeneologyResult = GetCompanyGeneologyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyGWConfig", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyGWConfigRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetCompanyGWConfigRequest() {
        }
        
        public GetCompanyGWConfigRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyGWConfigResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyGWConfigResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyGWConfig GetCompanyGWConfigResult;
        
        public GetCompanyGWConfigResponse() {
        }
        
        public GetCompanyGWConfigResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyGWConfig GetCompanyGWConfigResult) {
            this.TokenAuth = TokenAuth;
            this.GetCompanyGWConfigResult = GetCompanyGWConfigResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeviceDetails", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDeviceDetailsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long device_id;
        
        public GetDeviceDetailsRequest() {
        }
        
        public GetDeviceDetailsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long device_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.device_id = device_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeviceDetailsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDeviceDetailsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.Device GetDeviceDetailsResult;
        
        public GetDeviceDetailsResponse() {
        }
        
        public GetDeviceDetailsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Device GetDeviceDetailsResult) {
            this.TokenAuth = TokenAuth;
            this.GetDeviceDetailsResult = GetDeviceDetailsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeviceList", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDeviceListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public GetDeviceListRequest() {
        }
        
        public GetDeviceListRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeviceListResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDeviceListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.Device[] GetDeviceListResult;
        
        public GetDeviceListResponse() {
        }
        
        public GetDeviceListResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Device[] GetDeviceListResult) {
            this.TokenAuth = TokenAuth;
            this.GetDeviceListResult = GetDeviceListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEncryptionDetails", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetEncryptionDetailsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long safe_id;
        
        public GetEncryptionDetailsRequest() {
        }
        
        public GetEncryptionDetailsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long safe_id) {
            this.TokenAuth = TokenAuth;
            this.safe_id = safe_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEncryptionDetailsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetEncryptionDetailsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.Encryption GetEncryptionDetailsResult;
        
        public GetEncryptionDetailsResponse() {
        }
        
        public GetEncryptionDetailsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Encryption GetEncryptionDetailsResult) {
            this.TokenAuth = TokenAuth;
            this.GetEncryptionDetailsResult = GetEncryptionDetailsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDLPSummary", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDLPSummaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetCompanyDLPSummaryRequest() {
        }
        
        public GetCompanyDLPSummaryRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDLPSummaryResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetCompanyDLPSummaryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyDLPSummaryReport GetCompanyDLPSummaryResult;
        
        public GetCompanyDLPSummaryResponse() {
        }
        
        public GetCompanyDLPSummaryResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyDLPSummaryReport GetCompanyDLPSummaryResult) {
            this.TokenAuth = TokenAuth;
            this.GetCompanyDLPSummaryResult = GetCompanyDLPSummaryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPJustifications", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPJustificationsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetDLPJustificationsRequest() {
        }
        
        public GetDLPJustificationsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPJustificationsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPJustificationsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPViolationsReport GetDLPJustificationsResult;
        
        public GetDLPJustificationsResponse() {
        }
        
        public GetDLPJustificationsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPViolationsReport GetDLPJustificationsResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPJustificationsResult = GetDLPJustificationsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPPolicies", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPPoliciesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetDLPPoliciesRequest() {
        }
        
        public GetDLPPoliciesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPPoliciesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPPoliciesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPPolicy[] GetDLPPoliciesResult;
        
        public GetDLPPoliciesResponse() {
        }
        
        public GetDLPPoliciesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPPolicy[] GetDLPPoliciesResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPPoliciesResult = GetDLPPoliciesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPRule", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPRuleRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long rule_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_rule_id;
        
        public GetDLPRuleRequest() {
        }
        
        public GetDLPRuleRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long rule_id, System.Nullable<long> entity_rule_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.rule_id = rule_id;
            this.entity_rule_id = entity_rule_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPRuleResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPRuleResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPRule GetDLPRuleResult;
        
        public GetDLPRuleResponse() {
        }
        
        public GetDLPRuleResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPRule GetDLPRuleResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPRuleResult = GetDLPRuleResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPRules", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPRulesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> rule_type_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public bool only_enabled;
        
        public GetDLPRulesRequest() {
        }
        
        public GetDLPRulesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_id, System.Nullable<long> rule_type_id, bool only_enabled) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_id = policy_id;
            this.rule_type_id = rule_type_id;
            this.only_enabled = only_enabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPRulesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPRulesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPRule[] GetDLPRulesResult;
        
        public GetDLPRulesResponse() {
        }
        
        public GetDLPRulesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPRule[] GetDLPRulesResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPRulesResult = GetDLPRulesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPRulesVisibility", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPRulesVisibilityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetDLPRulesVisibilityRequest() {
        }
        
        public GetDLPRulesVisibilityRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPRulesVisibilityResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPRulesVisibilityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPRulesVisibility GetDLPRulesVisibilityResult;
        
        public GetDLPRulesVisibilityResponse() {
        }
        
        public GetDLPRulesVisibilityResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPRulesVisibility GetDLPRulesVisibilityResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPRulesVisibilityResult = GetDLPRulesVisibilityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPRuleTypes", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPRuleTypesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_id;
        
        public GetDLPRuleTypesRequest() {
        }
        
        public GetDLPRuleTypesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_id = policy_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPRuleTypesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPRuleTypesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPRuleType[] GetDLPRuleTypesResult;
        
        public GetDLPRuleTypesResponse() {
        }
        
        public GetDLPRuleTypesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPRuleType[] GetDLPRuleTypesResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPRuleTypesResult = GetDLPRuleTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPViolations", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPViolationsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetDLPViolationsRequest() {
        }
        
        public GetDLPViolationsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPViolationsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPViolationsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPViolationsReport GetDLPViolationsResult;
        
        public GetDLPViolationsResponse() {
        }
        
        public GetDLPViolationsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPViolationsReport GetDLPViolationsResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPViolationsResult = GetDLPViolationsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPViolationsRuleOverviewByRuleType", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPViolationsRuleOverviewByRuleTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long rule_type_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetDLPViolationsRuleOverviewByRuleTypeRequest() {
        }
        
        public GetDLPViolationsRuleOverviewByRuleTypeRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, long rule_type_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.rule_type_id = rule_type_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPViolationsRuleOverviewByRuleTypeResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPViolationsRuleOverviewByRuleTypeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPViolationsRuleOverviewByRuleTypeReport GetDLPViolationsRuleOverviewByRuleTypeResult;
        
        public GetDLPViolationsRuleOverviewByRuleTypeResponse() {
        }
        
        public GetDLPViolationsRuleOverviewByRuleTypeResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPViolationsRuleOverviewByRuleTypeReport GetDLPViolationsRuleOverviewByRuleTypeResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPViolationsRuleOverviewByRuleTypeResult = GetDLPViolationsRuleOverviewByRuleTypeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPViolationsRuleTypeOverview", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPViolationsRuleTypeOverviewRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetDLPViolationsRuleTypeOverviewRequest() {
        }
        
        public GetDLPViolationsRuleTypeOverviewRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDLPViolationsRuleTypeOverviewResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetDLPViolationsRuleTypeOverviewResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPViolationsRuleTypeOverviewReport GetDLPViolationsRuleTypeOverviewResult;
        
        public GetDLPViolationsRuleTypeOverviewResponse() {
        }
        
        public GetDLPViolationsRuleTypeOverviewResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPViolationsRuleTypeOverviewReport GetDLPViolationsRuleTypeOverviewResult) {
            this.TokenAuth = TokenAuth;
            this.GetDLPViolationsRuleTypeOverviewResult = GetDLPViolationsRuleTypeOverviewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEntityRoleUsers", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetEntityRoleUsersRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> role_id;
        
        public GetEntityRoleUsersRequest() {
        }
        
        public GetEntityRoleUsersRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> role_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.role_id = role_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEntityRoleUsersResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetEntityRoleUsersResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.EntityRoleUser[] GetEntityRoleUsersResult;
        
        public GetEntityRoleUsersResponse() {
        }
        
        public GetEntityRoleUsersResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.EntityRoleUser[] GetEntityRoleUsersResult) {
            this.TokenAuth = TokenAuth;
            this.GetEntityRoleUsersResult = GetEntityRoleUsersResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum SummaryType {
        
        /// <remarks/>
        Daily,
        
        /// <remarks/>
        Monthly,
        
        /// <remarks/>
        Yearly,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEntityUsageSummaries", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetEntityUsageSummariesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public System.DateTime start_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public System.DateTime end_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.SummaryType sumType;
        
        public GetEntityUsageSummariesRequest() {
        }
        
        public GetEntityUsageSummariesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.DateTime start_date, System.DateTime end_date, Encryptics.WebPortal.PortalService.SummaryType sumType) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.start_date = start_date;
            this.end_date = end_date;
            this.sumType = sumType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEntityUsageSummariesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetEntityUsageSummariesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UsageSummary[] GetEntityUsageSummariesResult;
        
        public GetEntityUsageSummariesResponse() {
        }
        
        public GetEntityUsageSummariesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UsageSummary[] GetEntityUsageSummariesResult) {
            this.TokenAuth = TokenAuth;
            this.GetEntityUsageSummariesResult = GetEntityUsageSummariesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGrantableCompanies", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetGrantableCompaniesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long admin_entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long admin_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public string company_name_filter;
        
        public GetGrantableCompaniesRequest() {
        }
        
        public GetGrantableCompaniesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long admin_entity_id, long admin_id, System.Nullable<long> user_id, string company_name_filter) {
            this.TokenAuth = TokenAuth;
            this.admin_entity_id = admin_entity_id;
            this.admin_id = admin_id;
            this.user_id = user_id;
            this.company_name_filter = company_name_filter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGrantableCompaniesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetGrantableCompaniesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyListItem[] GetGrantableCompaniesResult;
        
        public GetGrantableCompaniesResponse() {
        }
        
        public GetGrantableCompaniesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyListItem[] GetGrantableCompaniesResult) {
            this.TokenAuth = TokenAuth;
            this.GetGrantableCompaniesResult = GetGrantableCompaniesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGrantableRoles", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetGrantableRolesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetGrantableRolesRequest() {
        }
        
        public GetGrantableRolesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGrantableRolesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetGrantableRolesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.PortalRoleListItem[] GetGrantableRolesResult;
        
        public GetGrantableRolesResponse() {
        }
        
        public GetGrantableRolesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.PortalRoleListItem[] GetGrantableRolesResult) {
            this.TokenAuth = TokenAuth;
            this.GetGrantableRolesResult = GetGrantableRolesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetImportUsersAccounts", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetImportUsersAccountsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long import_file_id;
        
        public GetImportUsersAccountsRequest() {
        }
        
        public GetImportUsersAccountsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long import_file_id) {
            this.TokenAuth = TokenAuth;
            this.import_file_id = import_file_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetImportUsersAccountsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetImportUsersAccountsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.ImportUsersAccount[] GetImportUsersAccountsResult;
        
        public GetImportUsersAccountsResponse() {
        }
        
        public GetImportUsersAccountsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ImportUsersAccount[] GetImportUsersAccountsResult) {
            this.TokenAuth = TokenAuth;
            this.GetImportUsersAccountsResult = GetImportUsersAccountsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetImportUsersRequests", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetImportUsersRequestsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetImportUsersRequestsRequest() {
        }
        
        public GetImportUsersRequestsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetImportUsersRequestsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetImportUsersRequestsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.ImportUsersRequest[] GetImportUsersRequestsResult;
        
        public GetImportUsersRequestsResponse() {
        }
        
        public GetImportUsersRequestsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ImportUsersRequest[] GetImportUsersRequestsResult) {
            this.TokenAuth = TokenAuth;
            this.GetImportUsersRequestsResult = GetImportUsersRequestsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLexiconDLPTerms", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetLexiconDLPTermsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long lexicon_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public int page_size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public int page;
        
        public GetLexiconDLPTermsRequest() {
        }
        
        public GetLexiconDLPTermsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long lexicon_id, System.Nullable<long> entity_id, int page_size, int page) {
            this.TokenAuth = TokenAuth;
            this.lexicon_id = lexicon_id;
            this.entity_id = entity_id;
            this.page_size = page_size;
            this.page = page;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLexiconDLPTermsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetLexiconDLPTermsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.DLPTerm[] GetLexiconDLPTermsResult;
        
        public GetLexiconDLPTermsResponse() {
        }
        
        public GetLexiconDLPTermsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.DLPTerm[] GetLexiconDLPTermsResult) {
            this.TokenAuth = TokenAuth;
            this.GetLexiconDLPTermsResult = GetLexiconDLPTermsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareFiles", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareFilesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetMalwareFilesRequest() {
        }
        
        public GetMalwareFilesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareFilesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareFilesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.MalwareFilesReport GetMalwareFilesResult;
        
        public GetMalwareFilesResponse() {
        }
        
        public GetMalwareFilesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.MalwareFilesReport GetMalwareFilesResult) {
            this.TokenAuth = TokenAuth;
            this.GetMalwareFilesResult = GetMalwareFilesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareFileTypeRiskProfile", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareFileTypeRiskProfileRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string file_type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetMalwareFileTypeRiskProfileRequest() {
        }
        
        public GetMalwareFileTypeRiskProfileRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, string file_type, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.file_type = file_type;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareFileTypeRiskProfileResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareFileTypeRiskProfileResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.MalwareFileTypeRiskProfileReport GetMalwareFileTypeRiskProfileResult;
        
        public GetMalwareFileTypeRiskProfileResponse() {
        }
        
        public GetMalwareFileTypeRiskProfileResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.MalwareFileTypeRiskProfileReport GetMalwareFileTypeRiskProfileResult) {
            this.TokenAuth = TokenAuth;
            this.GetMalwareFileTypeRiskProfileResult = GetMalwareFileTypeRiskProfileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareFileTypes", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareFileTypesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        public GetMalwareFileTypesRequest() {
        }
        
        public GetMalwareFileTypesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth) {
            this.TokenAuth = TokenAuth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareFileTypesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareFileTypesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string[] GetMalwareFileTypesResult;
        
        public GetMalwareFileTypesResponse() {
        }
        
        public GetMalwareFileTypesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string[] GetMalwareFileTypesResult) {
            this.TokenAuth = TokenAuth;
            this.GetMalwareFileTypesResult = GetMalwareFileTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareFileTypesOverview", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareFileTypesOverviewRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetMalwareFileTypesOverviewRequest() {
        }
        
        public GetMalwareFileTypesOverviewRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareFileTypesOverviewResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareFileTypesOverviewResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.MalwareFileTypesOverviewReport GetMalwareFileTypesOverviewResult;
        
        public GetMalwareFileTypesOverviewResponse() {
        }
        
        public GetMalwareFileTypesOverviewResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.MalwareFileTypesOverviewReport GetMalwareFileTypesOverviewResult) {
            this.TokenAuth = TokenAuth;
            this.GetMalwareFileTypesOverviewResult = GetMalwareFileTypesOverviewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareRiskOverview", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareRiskOverviewRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetMalwareRiskOverviewRequest() {
        }
        
        public GetMalwareRiskOverviewRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMalwareRiskOverviewResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetMalwareRiskOverviewResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.MalwareRiskOverviewReport GetMalwareRiskOverviewResult;
        
        public GetMalwareRiskOverviewResponse() {
        }
        
        public GetMalwareRiskOverviewResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.MalwareRiskOverviewReport GetMalwareRiskOverviewResult) {
            this.TokenAuth = TokenAuth;
            this.GetMalwareRiskOverviewResult = GetMalwareRiskOverviewResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum PendingAccountSearchType {
        
        /// <remarks/>
        ANY,
        
        /// <remarks/>
        FIRST_NAME,
        
        /// <remarks/>
        LAST_NAME,
        
        /// <remarks/>
        EMAIL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum PendingAccountItemListSort {
        
        /// <remarks/>
        UNDEFINED,
        
        /// <remarks/>
        Email,
        
        /// <remarks/>
        First_Name,
        
        /// <remarks/>
        Last_Name,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPendingAccounts", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetPendingAccountsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string term;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.PendingAccountSearchType search_type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.PendingAccountItemListSort sort_field;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=4)]
        public Encryptics.WebPortal.PortalService.OrderByDirection order_dir;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=5)]
        public int page_size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=6)]
        public int page;
        
        public GetPendingAccountsRequest() {
        }
        
        public GetPendingAccountsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, string term, Encryptics.WebPortal.PortalService.PendingAccountSearchType search_type, Encryptics.WebPortal.PortalService.PendingAccountItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.term = term;
            this.search_type = search_type;
            this.sort_field = sort_field;
            this.order_dir = order_dir;
            this.page_size = page_size;
            this.page = page;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPendingAccountsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetPendingAccountsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.PendingUserAccountListReport GetPendingAccountsResult;
        
        public GetPendingAccountsResponse() {
        }
        
        public GetPendingAccountsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.PendingUserAccountListReport GetPendingAccountsResult) {
            this.TokenAuth = TokenAuth;
            this.GetPendingAccountsResult = GetPendingAccountsResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum ResetPasswordLinkStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Bad_Data,
        
        /// <remarks/>
        Expired,
        
        /// <remarks/>
        Used,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResetPasswordLinkStatus", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetResetPasswordLinkStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int request_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string hash;
        
        public GetResetPasswordLinkStatusRequest() {
        }
        
        public GetResetPasswordLinkStatusRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int request_id, string code, string hash) {
            this.TokenAuth = TokenAuth;
            this.request_id = request_id;
            this.code = code;
            this.hash = hash;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResetPasswordLinkStatusResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetResetPasswordLinkStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.ResetPasswordLinkStatus GetResetPasswordLinkStatusResult;
        
        public GetResetPasswordLinkStatusResponse() {
        }
        
        public GetResetPasswordLinkStatusResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ResetPasswordLinkStatus GetResetPasswordLinkStatusResult) {
            this.TokenAuth = TokenAuth;
            this.GetResetPasswordLinkStatusResult = GetResetPasswordLinkStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoftwarePlatforms", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetSoftwarePlatformsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        public GetSoftwarePlatformsRequest() {
        }
        
        public GetSoftwarePlatformsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth) {
            this.TokenAuth = TokenAuth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoftwarePlatformsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetSoftwarePlatformsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.SoftwarePlatform[] GetSoftwarePlatformsResult;
        
        public GetSoftwarePlatformsResponse() {
        }
        
        public GetSoftwarePlatformsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.SoftwarePlatform[] GetSoftwarePlatformsResult) {
            this.TokenAuth = TokenAuth;
            this.GetSoftwarePlatformsResult = GetSoftwarePlatformsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoftwareReleases", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetSoftwareReleasesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> platform_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> is_active;
        
        public GetSoftwareReleasesRequest() {
        }
        
        public GetSoftwareReleasesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<int> platform_id, System.Nullable<bool> is_active) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.platform_id = platform_id;
            this.is_active = is_active;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSoftwareReleasesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetSoftwareReleasesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.SoftwareRelease[] GetSoftwareReleasesResult;
        
        public GetSoftwareReleasesResponse() {
        }
        
        public GetSoftwareReleasesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.SoftwareRelease[] GetSoftwareReleasesResult) {
            this.TokenAuth = TokenAuth;
            this.GetSoftwareReleasesResult = GetSoftwareReleasesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesByDecryptions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesByDecryptionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetTopCompaniesByDecryptionsRequest() {
        }
        
        public GetTopCompaniesByDecryptionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesByDecryptionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesByDecryptionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.TopCompaniesByDecryptionsReport GetTopCompaniesByDecryptionsResult;
        
        public GetTopCompaniesByDecryptionsResponse() {
        }
        
        public GetTopCompaniesByDecryptionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.TopCompaniesByDecryptionsReport GetTopCompaniesByDecryptionsResult) {
            this.TokenAuth = TokenAuth;
            this.GetTopCompaniesByDecryptionsResult = GetTopCompaniesByDecryptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesByEncryptions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesByEncryptionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetTopCompaniesByEncryptionsRequest() {
        }
        
        public GetTopCompaniesByEncryptionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesByEncryptionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesByEncryptionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.TopCompaniesByEncryptionsReport GetTopCompaniesByEncryptionsResult;
        
        public GetTopCompaniesByEncryptionsResponse() {
        }
        
        public GetTopCompaniesByEncryptionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.TopCompaniesByEncryptionsReport GetTopCompaniesByEncryptionsResult) {
            this.TokenAuth = TokenAuth;
            this.GetTopCompaniesByEncryptionsResult = GetTopCompaniesByEncryptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesByExpiration", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesByExpirationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int top_count;
        
        public GetTopCompaniesByExpirationRequest() {
        }
        
        public GetTopCompaniesByExpirationRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int top_count) {
            this.TokenAuth = TokenAuth;
            this.top_count = top_count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesByExpirationResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesByExpirationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.TopCompaniesByExpirationReport GetTopCompaniesByExpirationResult;
        
        public GetTopCompaniesByExpirationResponse() {
        }
        
        public GetTopCompaniesByExpirationResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.TopCompaniesByExpirationReport GetTopCompaniesByExpirationResult) {
            this.TokenAuth = TokenAuth;
            this.GetTopCompaniesByExpirationResult = GetTopCompaniesByExpirationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesUsageSummariesByDecryptions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesUsageSummariesByDecryptionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public System.DateTime start_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public System.DateTime end_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public int top_count;
        
        public GetTopCompaniesUsageSummariesByDecryptionsRequest() {
        }
        
        public GetTopCompaniesUsageSummariesByDecryptionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.DateTime start_date, System.DateTime end_date, int top_count) {
            this.TokenAuth = TokenAuth;
            this.start_date = start_date;
            this.end_date = end_date;
            this.top_count = top_count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesUsageSummariesByDecryptionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesUsageSummariesByDecryptionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyUsageCount[] GetTopCompaniesUsageSummariesByDecryptionsResult;
        
        public GetTopCompaniesUsageSummariesByDecryptionsResponse() {
        }
        
        public GetTopCompaniesUsageSummariesByDecryptionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyUsageCount[] GetTopCompaniesUsageSummariesByDecryptionsResult) {
            this.TokenAuth = TokenAuth;
            this.GetTopCompaniesUsageSummariesByDecryptionsResult = GetTopCompaniesUsageSummariesByDecryptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesUsageSummariesByEncryptions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesUsageSummariesByEncryptionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public System.DateTime start_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public System.DateTime end_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public int top_count;
        
        public GetTopCompaniesUsageSummariesByEncryptionsRequest() {
        }
        
        public GetTopCompaniesUsageSummariesByEncryptionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.DateTime start_date, System.DateTime end_date, int top_count) {
            this.TokenAuth = TokenAuth;
            this.start_date = start_date;
            this.end_date = end_date;
            this.top_count = top_count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopCompaniesUsageSummariesByEncryptionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopCompaniesUsageSummariesByEncryptionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyUsageCount[] GetTopCompaniesUsageSummariesByEncryptionsResult;
        
        public GetTopCompaniesUsageSummariesByEncryptionsResponse() {
        }
        
        public GetTopCompaniesUsageSummariesByEncryptionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyUsageCount[] GetTopCompaniesUsageSummariesByEncryptionsResult) {
            this.TokenAuth = TokenAuth;
            this.GetTopCompaniesUsageSummariesByEncryptionsResult = GetTopCompaniesUsageSummariesByEncryptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopUsersByEncryptions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopUsersByEncryptionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetTopUsersByEncryptionsRequest() {
        }
        
        public GetTopUsersByEncryptionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopUsersByEncryptionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopUsersByEncryptionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.TopUsersByEncryptionsReport GetTopUsersByEncryptionsResult;
        
        public GetTopUsersByEncryptionsResponse() {
        }
        
        public GetTopUsersByEncryptionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.TopUsersByEncryptionsReport GetTopUsersByEncryptionsResult) {
            this.TokenAuth = TokenAuth;
            this.GetTopUsersByEncryptionsResult = GetTopUsersByEncryptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopUsersByViolations", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopUsersByViolationsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetTopUsersByViolationsRequest() {
        }
        
        public GetTopUsersByViolationsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopUsersByViolationsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopUsersByViolationsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.TopUsersByDLPViolationsReport GetTopUsersByViolationsResult;
        
        public GetTopUsersByViolationsResponse() {
        }
        
        public GetTopUsersByViolationsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.TopUsersByDLPViolationsReport GetTopUsersByViolationsResult) {
            this.TokenAuth = TokenAuth;
            this.GetTopUsersByViolationsResult = GetTopUsersByViolationsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopViolatedDLPRules", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopViolatedDLPRulesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> policy_set_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.ReportParams report_params;
        
        public GetTopViolatedDLPRulesRequest() {
        }
        
        public GetTopViolatedDLPRulesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.policy_set_id = policy_set_id;
            this.report_params = report_params;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopViolatedDLPRulesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetTopViolatedDLPRulesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.TopViolatedDLPRulesReport GetTopViolatedDLPRulesResult;
        
        public GetTopViolatedDLPRulesResponse() {
        }
        
        public GetTopViolatedDLPRulesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.TopViolatedDLPRulesReport GetTopViolatedDLPRulesResult) {
            this.TokenAuth = TokenAuth;
            this.GetTopViolatedDLPRulesResult = GetTopViolatedDLPRulesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsageRightsGroupDetails", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUsageRightsGroupDetailsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        public GetUsageRightsGroupDetailsRequest() {
        }
        
        public GetUsageRightsGroupDetailsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsageRightsGroupDetailsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUsageRightsGroupDetailsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UsageRightsGroup GetUsageRightsGroupDetailsResult;
        
        public GetUsageRightsGroupDetailsResponse() {
        }
        
        public GetUsageRightsGroupDetailsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UsageRightsGroup GetUsageRightsGroupDetailsResult) {
            this.TokenAuth = TokenAuth;
            this.GetUsageRightsGroupDetailsResult = GetUsageRightsGroupDetailsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsageRightsGroups", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUsageRightsGroupsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public GetUsageRightsGroupsRequest() {
        }
        
        public GetUsageRightsGroupsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsageRightsGroupsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUsageRightsGroupsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UsageRightsGroup[] GetUsageRightsGroupsResult;
        
        public GetUsageRightsGroupsResponse() {
        }
        
        public GetUsageRightsGroupsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UsageRightsGroup[] GetUsageRightsGroupsResult) {
            this.TokenAuth = TokenAuth;
            this.GetUsageRightsGroupsResult = GetUsageRightsGroupsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsageRightsGroupUsers", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUsageRightsGroupUsersRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        public GetUsageRightsGroupUsersRequest() {
        }
        
        public GetUsageRightsGroupUsersRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsageRightsGroupUsersResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUsageRightsGroupUsersResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UsageRightsGroupUser[] GetUsageRightsGroupUsersResult;
        
        public GetUsageRightsGroupUsersResponse() {
        }
        
        public GetUsageRightsGroupUsersResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UsageRightsGroupUser[] GetUsageRightsGroupUsersResult) {
            this.TokenAuth = TokenAuth;
            this.GetUsageRightsGroupUsersResult = GetUsageRightsGroupUsersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsageRightsGroupUsersArchived", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUsageRightsGroupUsersArchivedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        public GetUsageRightsGroupUsersArchivedRequest() {
        }
        
        public GetUsageRightsGroupUsersArchivedRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsageRightsGroupUsersArchivedResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUsageRightsGroupUsersArchivedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UsageRightsGroupUser[] GetUsageRightsGroupUsersArchivedResult;
        
        public GetUsageRightsGroupUsersArchivedResponse() {
        }
        
        public GetUsageRightsGroupUsersArchivedResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UsageRightsGroupUser[] GetUsageRightsGroupUsersArchivedResult) {
            this.TokenAuth = TokenAuth;
            this.GetUsageRightsGroupUsersArchivedResult = GetUsageRightsGroupUsersArchivedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserAuthorizedAction", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserAuthorizedActionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string action;
        
        public GetUserAuthorizedActionRequest() {
        }
        
        public GetUserAuthorizedActionRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string action) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.action = action;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserAuthorizedActionResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserAuthorizedActionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool GetUserAuthorizedActionResult;
        
        public GetUserAuthorizedActionResponse() {
        }
        
        public GetUserAuthorizedActionResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool GetUserAuthorizedActionResult) {
            this.TokenAuth = TokenAuth;
            this.GetUserAuthorizedActionResult = GetUserAuthorizedActionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserAuthorizedActions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserAuthorizedActionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string[] actions;
        
        public GetUserAuthorizedActionsRequest() {
        }
        
        public GetUserAuthorizedActionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string[] actions) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.actions = actions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserAuthorizedActionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserAuthorizedActionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.AuthorizedAction[] GetUserAuthorizedActionsResult;
        
        public GetUserAuthorizedActionsResponse() {
        }
        
        public GetUserAuthorizedActionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.AuthorizedAction[] GetUserAuthorizedActionsResult) {
            this.TokenAuth = TokenAuth;
            this.GetUserAuthorizedActionsResult = GetUserAuthorizedActionsResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum CompanyStatus {
        
        /// <remarks/>
        ANY,
        
        /// <remarks/>
        ACTIVE,
        
        /// <remarks/>
        INACTIVE,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserCompanies", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserCompaniesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long admin_entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long admin_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.CompanyStatus company_status;
        
        public GetUserCompaniesRequest() {
        }
        
        public GetUserCompaniesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long admin_entity_id, long admin_id, long user_id, Encryptics.WebPortal.PortalService.CompanyStatus company_status) {
            this.TokenAuth = TokenAuth;
            this.admin_entity_id = admin_entity_id;
            this.admin_id = admin_id;
            this.user_id = user_id;
            this.company_status = company_status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserCompaniesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserCompaniesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.CompanyListItem[] GetUserCompaniesResult;
        
        public GetUserCompaniesResponse() {
        }
        
        public GetUserCompaniesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.CompanyListItem[] GetUserCompaniesResult) {
            this.TokenAuth = TokenAuth;
            this.GetUserCompaniesResult = GetUserCompaniesResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum EncryptionSort {
        
        /// <remarks/>
        UNDEFINED,
        
        /// <remarks/>
        AuthorEmailAddress,
        
        /// <remarks/>
        ContainerID,
        
        /// <remarks/>
        ContainerTimeStamp,
        
        /// <remarks/>
        CreateDate,
        
        /// <remarks/>
        DecryptLimit,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        IsAuthorAccessRevoked,
        
        /// <remarks/>
        IsTotalRecall,
        
        /// <remarks/>
        RecallDate,
        
        /// <remarks/>
        SunriseDate,
        
        /// <remarks/>
        SunsetDate,
        
        /// <remarks/>
        TotalRecallParentID,
        
        /// <remarks/>
        UserID,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserDecryptions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserDecryptionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.EncryptionSort sort_field;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.OrderByDirection order_dir;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=4)]
        public int page_size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=5)]
        public int page;
        
        public GetUserDecryptionsRequest() {
        }
        
        public GetUserDecryptionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.EncryptionSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.sort_field = sort_field;
            this.order_dir = order_dir;
            this.page_size = page_size;
            this.page = page;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserDecryptionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserDecryptionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.Decryption[] GetUserDecryptionsResult;
        
        public GetUserDecryptionsResponse() {
        }
        
        public GetUserDecryptionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Decryption[] GetUserDecryptionsResult) {
            this.TokenAuth = TokenAuth;
            this.GetUserDecryptionsResult = GetUserDecryptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountDetails", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccountDetailsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public GetAccountDetailsRequest() {
        }
        
        public GetAccountDetailsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountDetailsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetAccountDetailsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UserAccount GetAccountDetailsResult;
        
        public GetAccountDetailsResponse() {
        }
        
        public GetAccountDetailsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UserAccount GetAccountDetailsResult) {
            this.TokenAuth = TokenAuth;
            this.GetAccountDetailsResult = GetAccountDetailsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserEncryptions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserEncryptionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.EncryptionSort sort_field;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.OrderByDirection order_dir;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=4)]
        public int page_size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=5)]
        public int page;
        
        public GetUserEncryptionsRequest() {
        }
        
        public GetUserEncryptionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.EncryptionSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.sort_field = sort_field;
            this.order_dir = order_dir;
            this.page_size = page_size;
            this.page = page;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserEncryptionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserEncryptionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.Encryption[] GetUserEncryptionsResult;
        
        public GetUserEncryptionsResponse() {
        }
        
        public GetUserEncryptionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Encryption[] GetUserEncryptionsResult) {
            this.TokenAuth = TokenAuth;
            this.GetUserEncryptionsResult = GetUserEncryptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserEntityRoles", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserEntityRolesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_id;
        
        public GetUserEntityRolesRequest() {
        }
        
        public GetUserEntityRolesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id, System.Nullable<long> entity_id) {
            this.TokenAuth = TokenAuth;
            this.user_id = user_id;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserEntityRolesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserEntityRolesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.EntityRoleUser[] GetUserEntityRolesResult;
        
        public GetUserEntityRolesResponse() {
        }
        
        public GetUserEntityRolesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.EntityRoleUser[] GetUserEntityRolesResult) {
            this.TokenAuth = TokenAuth;
            this.GetUserEntityRolesResult = GetUserEntityRolesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserSecurityQuestion", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserSecurityQuestionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> question_number;
        
        public GetUserSecurityQuestionRequest() {
        }
        
        public GetUserSecurityQuestionRequest(string email, System.Nullable<int> question_number) {
            this.email = email;
            this.question_number = question_number;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserSecurityQuestionResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserSecurityQuestionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.SecurityQuestion GetUserSecurityQuestionResult;
        
        public GetUserSecurityQuestionResponse() {
        }
        
        public GetUserSecurityQuestionResponse(Encryptics.WebPortal.PortalService.SecurityQuestion GetUserSecurityQuestionResult) {
            this.GetUserSecurityQuestionResult = GetUserSecurityQuestionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserUsageRights", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserUsageRightsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public GetUserUsageRightsRequest() {
        }
        
        public GetUserUsageRightsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserUsageRightsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserUsageRightsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UserUsageRights GetUserUsageRightsResult;
        
        public GetUserUsageRightsResponse() {
        }
        
        public GetUserUsageRightsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UserUsageRights GetUserUsageRightsResult) {
            this.TokenAuth = TokenAuth;
            this.GetUserUsageRightsResult = GetUserUsageRightsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserUsageSummaryByMonth", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserUsageSummaryByMonthRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public GetUserUsageSummaryByMonthRequest() {
        }
        
        public GetUserUsageSummaryByMonthRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserUsageSummaryByMonthResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class GetUserUsageSummaryByMonthResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UsageSummary[] GetUserUsageSummaryByMonthResult;
        
        public GetUserUsageSummaryByMonthResponse() {
        }
        
        public GetUserUsageSummaryByMonthResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UsageSummary[] GetUserUsageSummaryByMonthResult) {
            this.TokenAuth = TokenAuth;
            this.GetUserUsageSummaryByMonthResult = GetUserUsageSummaryByMonthResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertAccessGroup", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertAccessGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public bool is_active;
        
        public InsertAccessGroupRequest() {
        }
        
        public InsertAccessGroupRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<long> user_id, string name, bool is_active) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.name = name;
            this.is_active = is_active;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertAccessGroupResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertAccessGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertAccessGroupResult InsertAccessGroupResult;
        
        public InsertAccessGroupResponse() {
        }
        
        public InsertAccessGroupResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertAccessGroupResult InsertAccessGroupResult) {
            this.TokenAuth = TokenAuth;
            this.InsertAccessGroupResult = InsertAccessGroupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertAccessGroupUser", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertAccessGroupUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string user_name;
        
        public InsertAccessGroupUserRequest() {
        }
        
        public InsertAccessGroupUserRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, string user_name) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
            this.user_name = user_name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertAccessGroupUserResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertAccessGroupUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertAccessGroupUserResult InsertAccessGroupUserResult;
        
        public InsertAccessGroupUserResponse() {
        }
        
        public InsertAccessGroupUserResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertAccessGroupUserResult InsertAccessGroupUserResult) {
            this.TokenAuth = TokenAuth;
            this.InsertAccessGroupUserResult = InsertAccessGroupUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertCompany", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertCompanyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.CompanyType company_type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string address1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public string address2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=4)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=5)]
        public string state;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=6)]
        public string zip_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=7)]
        public string contact1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=8)]
        public string contact1_phone_number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=9)]
        public string contact2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=10)]
        public string contact2_phone_number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=11)]
        public bool use_global_expiration_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=12)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> global_expiration_date;
        
        public InsertCompanyRequest() {
        }
        
        public InsertCompanyRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string name, Encryptics.WebPortal.PortalService.CompanyType company_type, string address1, string address2, string city, string state, string zip_code, string contact1, string contact1_phone_number, string contact2, string contact2_phone_number, bool use_global_expiration_date, System.Nullable<System.DateTime> global_expiration_date) {
            this.TokenAuth = TokenAuth;
            this.name = name;
            this.company_type = company_type;
            this.address1 = address1;
            this.address2 = address2;
            this.city = city;
            this.state = state;
            this.zip_code = zip_code;
            this.contact1 = contact1;
            this.contact1_phone_number = contact1_phone_number;
            this.contact2 = contact2;
            this.contact2_phone_number = contact2_phone_number;
            this.use_global_expiration_date = use_global_expiration_date;
            this.global_expiration_date = global_expiration_date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertCompanyResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertCompanyResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertCompanyResult InsertCompanyResult;
        
        public InsertCompanyResponse() {
        }
        
        public InsertCompanyResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertCompanyResult InsertCompanyResult) {
            this.TokenAuth = TokenAuth;
            this.InsertCompanyResult = InsertCompanyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertCompanyDLPTerm", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertCompanyDLPTermRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string term;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public bool is_regex;
        
        public InsertCompanyDLPTermRequest() {
        }
        
        public InsertCompanyDLPTermRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string term, bool is_regex) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.term = term;
            this.is_regex = is_regex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertCompanyDLPTermResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertCompanyDLPTermResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResult InsertCompanyDLPTermResult;
        
        public InsertCompanyDLPTermResponse() {
        }
        
        public InsertCompanyDLPTermResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResult InsertCompanyDLPTermResult) {
            this.TokenAuth = TokenAuth;
            this.InsertCompanyDLPTermResult = InsertCompanyDLPTermResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertCompanyDomain", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertCompanyDomainRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string domain;
        
        public InsertCompanyDomainRequest() {
        }
        
        public InsertCompanyDomainRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string domain) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.domain = domain;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertCompanyDomainResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertCompanyDomainResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertCompanyDomainResult InsertCompanyDomainResult;
        
        public InsertCompanyDomainResponse() {
        }
        
        public InsertCompanyDomainResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertCompanyDomainResult InsertCompanyDomainResult) {
            this.TokenAuth = TokenAuth;
            this.InsertCompanyDomainResult = InsertCompanyDomainResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertDLPPublication", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertDLPPublicationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public InsertDLPPublicationRequest() {
        }
        
        public InsertDLPPublicationRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertDLPPublicationResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertDLPPublicationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertDLPPublicationResult InsertDLPPublicationResult;
        
        public InsertDLPPublicationResponse() {
        }
        
        public InsertDLPPublicationResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertDLPPublicationResult InsertDLPPublicationResult) {
            this.TokenAuth = TokenAuth;
            this.InsertDLPPublicationResult = InsertDLPPublicationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertDLPRule", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertDLPRuleRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.DLPRule new_rule;
        
        public InsertDLPRuleRequest() {
        }
        
        public InsertDLPRuleRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DLPRule new_rule) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.new_rule = new_rule;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertDLPRuleResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertDLPRuleResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertDLPRuleResult InsertDLPRuleResult;
        
        public InsertDLPRuleResponse() {
        }
        
        public InsertDLPRuleResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertDLPRuleResult InsertDLPRuleResult) {
            this.TokenAuth = TokenAuth;
            this.InsertDLPRuleResult = InsertDLPRuleResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertEntityRoleUser", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertEntityRoleUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> role_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long user_id;
        
        public InsertEntityRoleUserRequest() {
        }
        
        public InsertEntityRoleUserRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> role_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.role_id = role_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertEntityRoleUserResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertEntityRoleUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertEntityRoleUserResult InsertEntityRoleUserResult;
        
        public InsertEntityRoleUserResponse() {
        }
        
        public InsertEntityRoleUserResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertEntityRoleUserResult InsertEntityRoleUserResult) {
            this.TokenAuth = TokenAuth;
            this.InsertEntityRoleUserResult = InsertEntityRoleUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertEntityRoleUsers", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertEntityRoleUsersRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.EntityRoleUser[] role_users;
        
        public InsertEntityRoleUsersRequest() {
        }
        
        public InsertEntityRoleUsersRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.EntityRoleUser[] role_users) {
            this.TokenAuth = TokenAuth;
            this.role_users = role_users;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertEntityRoleUsersResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertEntityRoleUsersResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResult InsertEntityRoleUsersResult;
        
        public InsertEntityRoleUsersResponse() {
        }
        
        public InsertEntityRoleUsersResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResult InsertEntityRoleUsersResult) {
            this.TokenAuth = TokenAuth;
            this.InsertEntityRoleUsersResult = InsertEntityRoleUsersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertGWPublication", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertGWPublicationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        public InsertGWPublicationRequest() {
        }
        
        public InsertGWPublicationRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertGWPublicationResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertGWPublicationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertGWPublicationResult InsertGWPublicationResult;
        
        public InsertGWPublicationResponse() {
        }
        
        public InsertGWPublicationResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertGWPublicationResult InsertGWPublicationResult) {
            this.TokenAuth = TokenAuth;
            this.InsertGWPublicationResult = InsertGWPublicationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertImportUsersRequest", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertImportUsersRequestRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.ImportUsersRequest import_request;
        
        public InsertImportUsersRequestRequest() {
        }
        
        public InsertImportUsersRequestRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ImportUsersRequest import_request) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.import_request = import_request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertImportUsersRequestResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertImportUsersRequestResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertImportUsersRequestResult InsertImportUsersRequestResult;
        
        public InsertImportUsersRequestResponse() {
        }
        
        public InsertImportUsersRequestResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertImportUsersRequestResult InsertImportUsersRequestResult) {
            this.TokenAuth = TokenAuth;
            this.InsertImportUsersRequestResult = InsertImportUsersRequestResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum LicensePoolType {
        
        /// <remarks/>
        ActivePool,
        
        /// <remarks/>
        AvailablePool,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertLicenseTransfer", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertLicenseTransferRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long from_entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.LicensePoolType from_pool;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long to_entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public Encryptics.WebPortal.PortalService.LicensePoolType to_pool;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=4)]
        public int amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> use_by_date;
        
        public InsertLicenseTransferRequest() {
        }
        
        public InsertLicenseTransferRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long from_entity_id, Encryptics.WebPortal.PortalService.LicensePoolType from_pool, long to_entity_id, Encryptics.WebPortal.PortalService.LicensePoolType to_pool, int amount, System.Nullable<System.DateTime> use_by_date) {
            this.TokenAuth = TokenAuth;
            this.from_entity_id = from_entity_id;
            this.from_pool = from_pool;
            this.to_entity_id = to_entity_id;
            this.to_pool = to_pool;
            this.amount = amount;
            this.use_by_date = use_by_date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertLicenseTransferResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertLicenseTransferResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertLicenseTransferResult InsertLicenseTransferResult;
        
        public InsertLicenseTransferResponse() {
        }
        
        public InsertLicenseTransferResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertLicenseTransferResult InsertLicenseTransferResult) {
            this.TokenAuth = TokenAuth;
            this.InsertLicenseTransferResult = InsertLicenseTransferResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertRequestUserTransfer", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertRequestUserTransferRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long to_entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string account_name;
        
        public InsertRequestUserTransferRequest() {
        }
        
        public InsertRequestUserTransferRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long to_entity_id, string account_name) {
            this.TokenAuth = TokenAuth;
            this.to_entity_id = to_entity_id;
            this.account_name = account_name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertRequestUserTransferResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertRequestUserTransferResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertRequestUserTransferResult InsertRequestUserTransferResult;
        
        public InsertRequestUserTransferResponse() {
        }
        
        public InsertRequestUserTransferResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertRequestUserTransferResult InsertRequestUserTransferResult) {
            this.TokenAuth = TokenAuth;
            this.InsertRequestUserTransferResult = InsertRequestUserTransferResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertResetPasswordRequest", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertResetPasswordRequestRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string email_address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.OriginSite origin_site;
        
        public InsertResetPasswordRequestRequest() {
        }
        
        public InsertResetPasswordRequestRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string email_address, Encryptics.WebPortal.PortalService.OriginSite origin_site) {
            this.TokenAuth = TokenAuth;
            this.email_address = email_address;
            this.origin_site = origin_site;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertResetPasswordRequestResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertResetPasswordRequestResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool InsertResetPasswordRequestResult;
        
        public InsertResetPasswordRequestResponse() {
        }
        
        public InsertResetPasswordRequestResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool InsertResetPasswordRequestResult) {
            this.TokenAuth = TokenAuth;
            this.InsertResetPasswordRequestResult = InsertResetPasswordRequestResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RollKeyType {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Communication,
        
        /// <remarks/>
        Signing,
        
        /// <remarks/>
        Container,
        
        /// <remarks/>
        All,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertServerKey", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertServerKeyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RollKeyType roll_key_type;
        
        public InsertServerKeyRequest() {
        }
        
        public InsertServerKeyRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RollKeyType roll_key_type) {
            this.TokenAuth = TokenAuth;
            this.roll_key_type = roll_key_type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertServerKeyResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertServerKeyResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertServerKeysResult InsertServerKeyResult;
        
        public InsertServerKeyResponse() {
        }
        
        public InsertServerKeyResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertServerKeysResult InsertServerKeyResult) {
            this.TokenAuth = TokenAuth;
            this.InsertServerKeyResult = InsertServerKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertSoftwareRelease", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertSoftwareReleaseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.SoftwareRelease software_release;
        
        public InsertSoftwareReleaseRequest() {
        }
        
        public InsertSoftwareReleaseRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.SoftwareRelease software_release) {
            this.TokenAuth = TokenAuth;
            this.software_release = software_release;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertSoftwareReleaseResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertSoftwareReleaseResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResult InsertSoftwareReleaseResult;
        
        public InsertSoftwareReleaseResponse() {
        }
        
        public InsertSoftwareReleaseResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResult InsertSoftwareReleaseResult) {
            this.TokenAuth = TokenAuth;
            this.InsertSoftwareReleaseResult = InsertSoftwareReleaseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUsageRightsGroup", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUsageRightsGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.UsageRightsGroup usage_rights_group;
        
        public InsertUsageRightsGroupRequest() {
        }
        
        public InsertUsageRightsGroupRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.UsageRightsGroup usage_rights_group) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.usage_rights_group = usage_rights_group;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUsageRightsGroupResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUsageRightsGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResult InsertUsageRightsGroupResult;
        
        public InsertUsageRightsGroupResponse() {
        }
        
        public InsertUsageRightsGroupResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResult InsertUsageRightsGroupResult) {
            this.TokenAuth = TokenAuth;
            this.InsertUsageRightsGroupResult = InsertUsageRightsGroupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUsageRightsGroupUser", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUsageRightsGroupUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public InsertUsageRightsGroupUserRequest() {
        }
        
        public InsertUsageRightsGroupUserRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUsageRightsGroupUserResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUsageRightsGroupUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResult InsertUsageRightsGroupUserResult;
        
        public InsertUsageRightsGroupUserResponse() {
        }
        
        public InsertUsageRightsGroupUserResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResult InsertUsageRightsGroupUserResult) {
            this.TokenAuth = TokenAuth;
            this.InsertUsageRightsGroupUserResult = InsertUsageRightsGroupUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUser", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string email_address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public string first_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=4)]
        public string last_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=5)]
        public string company;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=6)]
        public string country;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=7)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=8)]
        public string phone_number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=9)]
        public bool software_installed_by_admin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=10)]
        public bool assign_license;
        
        public InsertUserRequest() {
        }
        
        public InsertUserRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string email_address, string password, string first_name, string last_name, string company, string country, string type, string phone_number, bool software_installed_by_admin, bool assign_license) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.email_address = email_address;
            this.password = password;
            this.first_name = first_name;
            this.last_name = last_name;
            this.company = company;
            this.country = country;
            this.type = type;
            this.phone_number = phone_number;
            this.software_installed_by_admin = software_installed_by_admin;
            this.assign_license = assign_license;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUserResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertUserResult InsertUserResult;
        
        public InsertUserResponse() {
        }
        
        public InsertUserResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertUserResult InsertUserResult) {
            this.TokenAuth = TokenAuth;
            this.InsertUserResult = InsertUserResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum InsertUserAdminCompaniesStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUserAdminCompanies", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUserAdminCompaniesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long[] companies;
        
        public InsertUserAdminCompaniesRequest() {
        }
        
        public InsertUserAdminCompaniesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long[] companies) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.companies = companies;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUserAdminCompaniesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUserAdminCompaniesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesStatus InsertUserAdminCompaniesResult;
        
        public InsertUserAdminCompaniesResponse() {
        }
        
        public InsertUserAdminCompaniesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesStatus InsertUserAdminCompaniesResult) {
            this.TokenAuth = TokenAuth;
            this.InsertUserAdminCompaniesResult = InsertUserAdminCompaniesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUsersByBulk", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUsersByBulkRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string user_list;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public bool software_installed_by_admin;
        
        public InsertUsersByBulkRequest() {
        }
        
        public InsertUsersByBulkRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string user_list, bool software_installed_by_admin) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_list = user_list;
            this.software_installed_by_admin = software_installed_by_admin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUsersByBulkResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUsersByBulkResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertUsersByBulkResult InsertUsersByBulkResult;
        
        public InsertUsersByBulkResponse() {
        }
        
        public InsertUsersByBulkResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertUsersByBulkResult InsertUsersByBulkResult) {
            this.TokenAuth = TokenAuth;
            this.InsertUsersByBulkResult = InsertUsersByBulkResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUserLicense", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUserLicenseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public InsertUserLicenseRequest() {
        }
        
        public InsertUserLicenseRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUserLicenseResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUserLicenseResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.InsertUserLicenseResult InsertUserLicenseResult;
        
        public InsertUserLicenseResponse() {
        }
        
        public InsertUserLicenseResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.InsertUserLicenseResult InsertUserLicenseResult) {
            this.TokenAuth = TokenAuth;
            this.InsertUserLicenseResult = InsertUserLicenseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUserSecurityQuestions", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUserSecurityQuestionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.SecurityQuestion[] questions;
        
        public InsertUserSecurityQuestionsRequest() {
        }
        
        public InsertUserSecurityQuestionsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string email, Encryptics.WebPortal.PortalService.SecurityQuestion[] questions) {
            this.TokenAuth = TokenAuth;
            this.email = email;
            this.questions = questions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertUserSecurityQuestionsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class InsertUserSecurityQuestionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool InsertUserSecurityQuestionsResult;
        
        public InsertUserSecurityQuestionsResponse() {
        }
        
        public InsertUserSecurityQuestionsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool InsertUserSecurityQuestionsResult) {
            this.TokenAuth = TokenAuth;
            this.InsertUserSecurityQuestionsResult = InsertUserSecurityQuestionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogDebugRecord", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class LogDebugRecordRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public string class_info;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string method_info;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string log_info;
        
        public LogDebugRecordRequest() {
        }
        
        public LogDebugRecordRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string class_info, string method_info, string log_info) {
            this.TokenAuth = TokenAuth;
            this.class_info = class_info;
            this.method_info = method_info;
            this.log_info = log_info;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogDebugRecordResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class LogDebugRecordResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool LogDebugRecordResult;
        
        public LogDebugRecordResponse() {
        }
        
        public LogDebugRecordResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool LogDebugRecordResult) {
            this.TokenAuth = TokenAuth;
            this.LogDebugRecordResult = LogDebugRecordResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RemoveAccessGroupUserResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveAccessGroupUser", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveAccessGroupUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_user_id;
        
        public RemoveAccessGroupUserRequest() {
        }
        
        public RemoveAccessGroupUserRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_user_id) {
            this.TokenAuth = TokenAuth;
            this.group_user_id = group_user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveAccessGroupUserResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveAccessGroupUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResult RemoveAccessGroupUserResult;
        
        public RemoveAccessGroupUserResponse() {
        }
        
        public RemoveAccessGroupUserResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResult RemoveAccessGroupUserResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveAccessGroupUserResult = RemoveAccessGroupUserResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RemoveCompanyResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Mismatched_Name,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveCompany", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveCompanyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string company_name;
        
        public RemoveCompanyRequest() {
        }
        
        public RemoveCompanyRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string company_name) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.company_name = company_name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveCompanyResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveCompanyResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RemoveCompanyResult RemoveCompanyResult;
        
        public RemoveCompanyResponse() {
        }
        
        public RemoveCompanyResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RemoveCompanyResult RemoveCompanyResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveCompanyResult = RemoveCompanyResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RemoveCompanyDLPTermResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveCompanyDLPTerm", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveCompanyDLPTermRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long term_id;
        
        public RemoveCompanyDLPTermRequest() {
        }
        
        public RemoveCompanyDLPTermRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long term_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.term_id = term_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveCompanyDLPTermResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveCompanyDLPTermResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResult RemoveCompanyDLPTermResult;
        
        public RemoveCompanyDLPTermResponse() {
        }
        
        public RemoveCompanyDLPTermResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResult RemoveCompanyDLPTermResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveCompanyDLPTermResult = RemoveCompanyDLPTermResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RemoveCompanyDomainResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveCompanyDomain", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveCompanyDomainRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long domain_id;
        
        public RemoveCompanyDomainRequest() {
        }
        
        public RemoveCompanyDomainRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long domain_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.domain_id = domain_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveCompanyDomainResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveCompanyDomainResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RemoveCompanyDomainResult RemoveCompanyDomainResult;
        
        public RemoveCompanyDomainResponse() {
        }
        
        public RemoveCompanyDomainResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RemoveCompanyDomainResult RemoveCompanyDomainResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveCompanyDomainResult = RemoveCompanyDomainResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RemoveDLPRuleResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveDLPRule", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveDLPRuleRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long entity_rule_id;
        
        public RemoveDLPRuleRequest() {
        }
        
        public RemoveDLPRuleRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long entity_rule_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.entity_rule_id = entity_rule_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveDLPRuleResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveDLPRuleResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RemoveDLPRuleResult RemoveDLPRuleResult;
        
        public RemoveDLPRuleResponse() {
        }
        
        public RemoveDLPRuleResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RemoveDLPRuleResult RemoveDLPRuleResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveDLPRuleResult = RemoveDLPRuleResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemovePendingAccount", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemovePendingAccountRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long pending_id;
        
        public RemovePendingAccountRequest() {
        }
        
        public RemovePendingAccountRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long pending_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.pending_id = pending_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemovePendingAccountResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemovePendingAccountResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool RemovePendingAccountResult;
        
        public RemovePendingAccountResponse() {
        }
        
        public RemovePendingAccountResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool RemovePendingAccountResult) {
            this.TokenAuth = TokenAuth;
            this.RemovePendingAccountResult = RemovePendingAccountResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RemoveUsageRightsGroupResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUsageRightsGroup", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUsageRightsGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long usage_rights_group_id;
        
        public RemoveUsageRightsGroupRequest() {
        }
        
        public RemoveUsageRightsGroupRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long usage_rights_group_id) {
            this.TokenAuth = TokenAuth;
            this.usage_rights_group_id = usage_rights_group_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUsageRightsGroupResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUsageRightsGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResult RemoveUsageRightsGroupResult;
        
        public RemoveUsageRightsGroupResponse() {
        }
        
        public RemoveUsageRightsGroupResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResult RemoveUsageRightsGroupResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveUsageRightsGroupResult = RemoveUsageRightsGroupResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RemoveUsageRightsGroupUserResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUsageRightsGroupUser", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUsageRightsGroupUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long usage_rights_group_user_id;
        
        public RemoveUsageRightsGroupUserRequest() {
        }
        
        public RemoveUsageRightsGroupUserRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long usage_rights_group_user_id) {
            this.TokenAuth = TokenAuth;
            this.usage_rights_group_user_id = usage_rights_group_user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUsageRightsGroupUserResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUsageRightsGroupUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResult RemoveUsageRightsGroupUserResult;
        
        public RemoveUsageRightsGroupUserResponse() {
        }
        
        public RemoveUsageRightsGroupUserResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResult RemoveUsageRightsGroupUserResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveUsageRightsGroupUserResult = RemoveUsageRightsGroupUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUser", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public RemoveUserRequest() {
        }
        
        public RemoveUserRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUserResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool RemoveUserResult;
        
        public RemoveUserResponse() {
        }
        
        public RemoveUserResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool RemoveUserResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveUserResult = RemoveUserResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum RemoveUserAdminCompaniesStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUserAdminCompanies", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUserAdminCompaniesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long[] companies;
        
        public RemoveUserAdminCompaniesRequest() {
        }
        
        public RemoveUserAdminCompaniesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long[] companies) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.companies = companies;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUserAdminCompaniesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUserAdminCompaniesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesStatus RemoveUserAdminCompaniesResult;
        
        public RemoveUserAdminCompaniesResponse() {
        }
        
        public RemoveUserAdminCompaniesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesStatus RemoveUserAdminCompaniesResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveUserAdminCompaniesResult = RemoveUserAdminCompaniesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUserDevice", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUserDeviceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public long device_id;
        
        public RemoveUserDeviceRequest() {
        }
        
        public RemoveUserDeviceRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long device_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
            this.device_id = device_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUserDeviceResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUserDeviceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool RemoveUserDeviceResult;
        
        public RemoveUserDeviceResponse() {
        }
        
        public RemoveUserDeviceResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool RemoveUserDeviceResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveUserDeviceResult = RemoveUserDeviceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUserLicenses", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUserLicensesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long user_id;
        
        public RemoveUserLicensesRequest() {
        }
        
        public RemoveUserLicensesRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.user_id = user_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveUserLicensesResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class RemoveUserLicensesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool RemoveUserLicensesResult;
        
        public RemoveUserLicensesResponse() {
        }
        
        public RemoveUserLicensesResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool RemoveUserLicensesResult) {
            this.TokenAuth = TokenAuth;
            this.RemoveUserLicensesResult = RemoveUserLicensesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResendRequestUserTransfer", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class ResendRequestUserTransferRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long request_id;
        
        public ResendRequestUserTransferRequest() {
        }
        
        public ResendRequestUserTransferRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long request_id) {
            this.TokenAuth = TokenAuth;
            this.request_id = request_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResendRequestUserTransferResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class ResendRequestUserTransferResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool ResendRequestUserTransferResult;
        
        public ResendRequestUserTransferResponse() {
        }
        
        public ResendRequestUserTransferResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool ResendRequestUserTransferResult) {
            this.TokenAuth = TokenAuth;
            this.ResendRequestUserTransferResult = ResendRequestUserTransferResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateAccessGroupResult {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAccessGroup", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateAccessGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long group_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> is_active;
        
        public UpdateAccessGroupRequest() {
        }
        
        public UpdateAccessGroupRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, string name, System.Nullable<bool> is_active) {
            this.TokenAuth = TokenAuth;
            this.group_id = group_id;
            this.name = name;
            this.is_active = is_active;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAccessGroupResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateAccessGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateAccessGroupResult UpdateAccessGroupResult;
        
        public UpdateAccessGroupResponse() {
        }
        
        public UpdateAccessGroupResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateAccessGroupResult UpdateAccessGroupResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateAccessGroupResult = UpdateAccessGroupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompany", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.Company updated_company;
        
        public UpdateCompanyRequest() {
        }
        
        public UpdateCompanyRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Company updated_company) {
            this.TokenAuth = TokenAuth;
            this.updated_company = updated_company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateCompanyResult;
        
        public UpdateCompanyResponse() {
        }
        
        public UpdateCompanyResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateCompanyResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateCompanyResult = UpdateCompanyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyLexicons", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyLexiconsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long[] lexicons;
        
        public UpdateCompanyLexiconsRequest() {
        }
        
        public UpdateCompanyLexiconsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long[] lexicons) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.lexicons = lexicons;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyLexiconsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyLexiconsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateCompanyLexiconsResult;
        
        public UpdateCompanyLexiconsResponse() {
        }
        
        public UpdateCompanyLexiconsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateCompanyLexiconsResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateCompanyLexiconsResult = UpdateCompanyLexiconsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyDLPConfig", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyDLPConfigRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.CompanyDLPConfig new_settings;
        
        public UpdateCompanyDLPConfigRequest() {
        }
        
        public UpdateCompanyDLPConfigRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyDLPConfig new_settings) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.new_settings = new_settings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyDLPConfigResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyDLPConfigResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateCompanyDLPConfigResult;
        
        public UpdateCompanyDLPConfigResponse() {
        }
        
        public UpdateCompanyDLPConfigResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateCompanyDLPConfigResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateCompanyDLPConfigResult = UpdateCompanyDLPConfigResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyDLPSettings", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyDLPSettingsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.CompanyDLPSettings new_settings;
        
        public UpdateCompanyDLPSettingsRequest() {
        }
        
        public UpdateCompanyDLPSettingsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyDLPSettings new_settings) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.new_settings = new_settings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyDLPSettingsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyDLPSettingsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateCompanyDLPSettingsResult;
        
        public UpdateCompanyDLPSettingsResponse() {
        }
        
        public UpdateCompanyDLPSettingsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateCompanyDLPSettingsResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateCompanyDLPSettingsResult = UpdateCompanyDLPSettingsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyEmailTemplate", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyEmailTemplateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.CompanyEmailTemplate template;
        
        public UpdateCompanyEmailTemplateRequest() {
        }
        
        public UpdateCompanyEmailTemplateRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyEmailTemplate template) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.template = template;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyEmailTemplateResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyEmailTemplateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateCompanyEmailTemplateResult;
        
        public UpdateCompanyEmailTemplateResponse() {
        }
        
        public UpdateCompanyEmailTemplateResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateCompanyEmailTemplateResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateCompanyEmailTemplateResult = UpdateCompanyEmailTemplateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyGWConfig", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyGWConfigRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public bool is_enabled;
        
        public UpdateCompanyGWConfigRequest() {
        }
        
        public UpdateCompanyGWConfigRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, bool is_enabled) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.is_enabled = is_enabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCompanyGWConfigResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateCompanyGWConfigResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateCompanyGWConfigResult;
        
        public UpdateCompanyGWConfigResponse() {
        }
        
        public UpdateCompanyGWConfigResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateCompanyGWConfigResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateCompanyGWConfigResult = UpdateCompanyGWConfigResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateDeviceActivationStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Bad_Data,
        
        /// <remarks/>
        Link_Expired,
        
        /// <remarks/>
        Used,
        
        /// <remarks/>
        Removed,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDeviceActivation", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDeviceActivationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int activation_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string activation_code;
        
        public UpdateDeviceActivationRequest() {
        }
        
        public UpdateDeviceActivationRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code) {
            this.TokenAuth = TokenAuth;
            this.activation_id = activation_id;
            this.activation_code = activation_code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDeviceActivationResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDeviceActivationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateDeviceActivationStatus UpdateDeviceActivationResult;
        
        public UpdateDeviceActivationResponse() {
        }
        
        public UpdateDeviceActivationResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateDeviceActivationStatus UpdateDeviceActivationResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateDeviceActivationResult = UpdateDeviceActivationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDeviceStatus", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDeviceStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long device_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public Encryptics.WebPortal.PortalService.DeviceStatus new_status;
        
        public UpdateDeviceStatusRequest() {
        }
        
        public UpdateDeviceStatusRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long device_id, Encryptics.WebPortal.PortalService.DeviceStatus new_status) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.device_id = device_id;
            this.new_status = new_status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDeviceStatusResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDeviceStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateDeviceStatusResult;
        
        public UpdateDeviceStatusResponse() {
        }
        
        public UpdateDeviceStatusResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateDeviceStatusResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateDeviceStatusResult = UpdateDeviceStatusResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateDLPRuleDetailsStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Rule_Does_Not_Exist,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDLPRuleDetails", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDLPRuleDetailsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public Encryptics.WebPortal.PortalService.DLPRule rule;
        
        public UpdateDLPRuleDetailsRequest() {
        }
        
        public UpdateDLPRuleDetailsRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DLPRule rule) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.rule = rule;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDLPRuleDetailsResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDLPRuleDetailsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsStatus UpdateDLPRuleDetailsResult;
        
        public UpdateDLPRuleDetailsResponse() {
        }
        
        public UpdateDLPRuleDetailsResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsStatus UpdateDLPRuleDetailsResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateDLPRuleDetailsResult = UpdateDLPRuleDetailsResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateDLPRuleStatusStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Rule_Does_Not_Exist,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDLPRuleStatus", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDLPRuleStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public long rule_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> entity_rule_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public bool is_enabled;
        
        public UpdateDLPRuleStatusRequest() {
        }
        
        public UpdateDLPRuleStatusRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long rule_id, System.Nullable<long> entity_rule_id, bool is_enabled) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.rule_id = rule_id;
            this.entity_rule_id = entity_rule_id;
            this.is_enabled = is_enabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDLPRuleStatusResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDLPRuleStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusStatus UpdateDLPRuleStatusResult;
        
        public UpdateDLPRuleStatusResponse() {
        }
        
        public UpdateDLPRuleStatusResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusStatus UpdateDLPRuleStatusResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateDLPRuleStatusResult = UpdateDLPRuleStatusResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateDLPRulesVisibilityStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDLPRulesVisibility", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDLPRulesVisibilityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string rule_list;
        
        public UpdateDLPRulesVisibilityRequest() {
        }
        
        public UpdateDLPRulesVisibilityRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string rule_list) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.rule_list = rule_list;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDLPRulesVisibilityResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateDLPRulesVisibilityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityStatus UpdateDLPRulesVisibilityResult;
        
        public UpdateDLPRulesVisibilityResponse() {
        }
        
        public UpdateDLPRulesVisibilityResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityStatus UpdateDLPRulesVisibilityResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateDLPRulesVisibilityResult = UpdateDLPRulesVisibilityResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateEntitySoftwareReleaseStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Version_Not_Exists,
        
        /// <remarks/>
        Is_Not_Active,
        
        /// <remarks/>
        Is_Below_Minimum,
        
        /// <remarks/>
        No_Change,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateEntitySoftwareRelease", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateEntitySoftwareReleaseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public int software_release_id;
        
        public UpdateEntitySoftwareReleaseRequest() {
        }
        
        public UpdateEntitySoftwareReleaseRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int software_release_id) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.software_release_id = software_release_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateEntitySoftwareReleaseResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateEntitySoftwareReleaseResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseStatus UpdateEntitySoftwareReleaseResult;
        
        public UpdateEntitySoftwareReleaseResponse() {
        }
        
        public UpdateEntitySoftwareReleaseResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseStatus UpdateEntitySoftwareReleaseResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateEntitySoftwareReleaseResult = UpdateEntitySoftwareReleaseResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGWSetting", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateGWSettingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long entity_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public int ftc_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string setting;
        
        public UpdateGWSettingRequest() {
        }
        
        public UpdateGWSettingRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int ftc_id, string setting) {
            this.TokenAuth = TokenAuth;
            this.entity_id = entity_id;
            this.ftc_id = ftc_id;
            this.setting = setting;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGWSettingResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateGWSettingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public bool UpdateGWSettingResult;
        
        public UpdateGWSettingResponse() {
        }
        
        public UpdateGWSettingResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, bool UpdateGWSettingResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateGWSettingResult = UpdateGWSettingResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdatePasswordStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Bad_Data,
        
        /// <remarks/>
        Expired,
        
        /// <remarks/>
        Used,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePassword", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdatePasswordRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int request_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string hash;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public string password;
        
        public UpdatePasswordRequest() {
        }
        
        public UpdatePasswordRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int request_id, string code, string hash, string password) {
            this.TokenAuth = TokenAuth;
            this.request_id = request_id;
            this.code = code;
            this.hash = hash;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePasswordResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdatePasswordResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdatePasswordStatus UpdatePasswordResult;
        
        public UpdatePasswordResponse() {
        }
        
        public UpdatePasswordResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdatePasswordStatus UpdatePasswordResult) {
            this.TokenAuth = TokenAuth;
            this.UpdatePasswordResult = UpdatePasswordResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateRequestUserTransferStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateRequestUserTransfer", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateRequestUserTransferRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public long request_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public string code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=2)]
        public string signed_hash;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=3)]
        public bool is_accepted;
        
        public UpdateRequestUserTransferRequest() {
        }
        
        public UpdateRequestUserTransferRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long request_id, string code, string signed_hash, bool is_accepted) {
            this.TokenAuth = TokenAuth;
            this.request_id = request_id;
            this.code = code;
            this.signed_hash = signed_hash;
            this.is_accepted = is_accepted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateRequestUserTransferResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateRequestUserTransferResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateRequestUserTransferStatus UpdateRequestUserTransferResult;
        
        public UpdateRequestUserTransferResponse() {
        }
        
        public UpdateRequestUserTransferResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateRequestUserTransferStatus UpdateRequestUserTransferResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateRequestUserTransferResult = UpdateRequestUserTransferResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSoftwareRelease", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateSoftwareReleaseRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.SoftwareRelease software_release;
        
        public UpdateSoftwareReleaseRequest() {
        }
        
        public UpdateSoftwareReleaseRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.SoftwareRelease software_release) {
            this.TokenAuth = TokenAuth;
            this.software_release = software_release;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSoftwareReleaseResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateSoftwareReleaseResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResult UpdateSoftwareReleaseResult;
        
        public UpdateSoftwareReleaseResponse() {
        }
        
        public UpdateSoftwareReleaseResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResult UpdateSoftwareReleaseResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateSoftwareReleaseResult = UpdateSoftwareReleaseResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateSoftwareReleaseGlobalMinimumStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Version_Not_Exists,
        
        /// <remarks/>
        Is_Global_Minimum,
        
        /// <remarks/>
        Is_Not_Active,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSoftwareReleaseGlobalMinimum", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateSoftwareReleaseGlobalMinimumRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int software_release_id;
        
        public UpdateSoftwareReleaseGlobalMinimumRequest() {
        }
        
        public UpdateSoftwareReleaseGlobalMinimumRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int software_release_id) {
            this.TokenAuth = TokenAuth;
            this.software_release_id = software_release_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSoftwareReleaseGlobalMinimumResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateSoftwareReleaseGlobalMinimumResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumStatus UpdateSoftwareReleaseGlobalMinimumResult;
        
        public UpdateSoftwareReleaseGlobalMinimumResponse() {
        }
        
        public UpdateSoftwareReleaseGlobalMinimumResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumStatus UpdateSoftwareReleaseGlobalMinimumResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateSoftwareReleaseGlobalMinimumResult = UpdateSoftwareReleaseGlobalMinimumResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.encryptics.net/webservices/")]
    public enum UpdateSoftwareReleaseActiveStatusStatus {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Version_Not_Exists,
        
        /// <remarks/>
        No_Change,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSoftwareReleaseActiveStatus", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateSoftwareReleaseActiveStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public int software_release_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=1)]
        public bool is_active;
        
        public UpdateSoftwareReleaseActiveStatusRequest() {
        }
        
        public UpdateSoftwareReleaseActiveStatusRequest(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int software_release_id, bool is_active) {
            this.TokenAuth = TokenAuth;
            this.software_release_id = software_release_id;
            this.is_active = is_active;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSoftwareReleaseActiveStatusResponse", WrapperNamespace="http://www.encryptics.net/webservices/", IsWrapped=true)]
    public partial class UpdateSoftwareReleaseActiveStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.encryptics.net/webservices/")]
        public Encryptics.WebPortal.PortalService.TokenAuth TokenAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.encryptics.net/webservices/", Order=0)]
        public Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusStatus UpdateSoftwareReleaseActiveStatusResult;
        
        public UpdateSoftwareReleaseActiveStatusResponse() {
        }
        
        public UpdateSoftwareReleaseActiveStatusResponse(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusStatus UpdateSoftwareReleaseActiveStatusResult) {
            this.TokenAuth = TokenAuth;
            this.UpdateSoftwareReleaseActiveStatusResult = UpdateSoftwareReleaseActiveStatusResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PortalServiceSoapChannel : Encryptics.WebPortal.PortalService.PortalServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PortalServiceSoapClient : System.ServiceModel.ClientBase<Encryptics.WebPortal.PortalService.PortalServiceSoap>, Encryptics.WebPortal.PortalService.PortalServiceSoap {
        
        public PortalServiceSoapClient() {
        }
        
        public PortalServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PortalServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUsageRightsGroup(Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupRequest request) {
            return base.Channel.UpdateUsageRightsGroup(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResult UpdateUsageRightsGroup(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, Encryptics.WebPortal.PortalService.UsageRightsGroup usage_rights_group) {
            Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.usage_rights_group = usage_rights_group;
            Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUsageRightsGroup(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUsageRightsGroupResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupRequest request) {
            return base.Channel.UpdateUsageRightsGroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResponse> UpdateUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, Encryptics.WebPortal.PortalService.UsageRightsGroup usage_rights_group) {
            Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.usage_rights_group = usage_rights_group;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUsageRightsGroupAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUsageRightsGroupStatus(Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusRequest request) {
            return base.Channel.UpdateUsageRightsGroupStatus(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupResult UpdateUsageRightsGroupStatus(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, bool is_active) {
            Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.is_active = is_active;
            Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUsageRightsGroupStatus(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUsageRightsGroupStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUsageRightsGroupStatusAsync(Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusRequest request) {
            return base.Channel.UpdateUsageRightsGroupStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusResponse> UpdateUsageRightsGroupStatusAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, bool is_active) {
            Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUsageRightsGroupStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.is_active = is_active;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUsageRightsGroupStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUser(Encryptics.WebPortal.PortalService.UpdateUserRequest request) {
            return base.Channel.UpdateUser(request);
        }
        
        public bool UpdateUser(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string first_name, string last_name) {
            Encryptics.WebPortal.PortalService.UpdateUserRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.first_name = first_name;
            inValue.last_name = last_name;
            Encryptics.WebPortal.PortalService.UpdateUserResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUser(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserAsync(Encryptics.WebPortal.PortalService.UpdateUserRequest request) {
            return base.Channel.UpdateUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserResponse> UpdateUserAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string first_name, string last_name) {
            Encryptics.WebPortal.PortalService.UpdateUserRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.first_name = first_name;
            inValue.last_name = last_name;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserAdminStatusResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserAdminStatus(Encryptics.WebPortal.PortalService.UpdateUserAdminStatusRequest request) {
            return base.Channel.UpdateUserAdminStatus(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateUserAdminStatusStatus UpdateUserAdminStatus(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.UserAdminStatus new_status) {
            Encryptics.WebPortal.PortalService.UpdateUserAdminStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserAdminStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.new_status = new_status;
            Encryptics.WebPortal.PortalService.UpdateUserAdminStatusResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserAdminStatus(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserAdminStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserAdminStatusResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserAdminStatusAsync(Encryptics.WebPortal.PortalService.UpdateUserAdminStatusRequest request) {
            return base.Channel.UpdateUserAdminStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserAdminStatusResponse> UpdateUserAdminStatusAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.UserAdminStatus new_status) {
            Encryptics.WebPortal.PortalService.UpdateUserAdminStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserAdminStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.new_status = new_status;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserAdminStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserCompanyResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserCompany(Encryptics.WebPortal.PortalService.UpdateUserCompanyRequest request) {
            return base.Channel.UpdateUserCompany(request);
        }
        
        public bool UpdateUserCompany(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long new_entity_id, bool transfer_licenses) {
            Encryptics.WebPortal.PortalService.UpdateUserCompanyRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserCompanyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.new_entity_id = new_entity_id;
            inValue.transfer_licenses = transfer_licenses;
            Encryptics.WebPortal.PortalService.UpdateUserCompanyResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserCompany(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserCompanyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserCompanyResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserCompanyAsync(Encryptics.WebPortal.PortalService.UpdateUserCompanyRequest request) {
            return base.Channel.UpdateUserCompanyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserCompanyResponse> UpdateUserCompanyAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long new_entity_id, bool transfer_licenses) {
            Encryptics.WebPortal.PortalService.UpdateUserCompanyRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserCompanyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.new_entity_id = new_entity_id;
            inValue.transfer_licenses = transfer_licenses;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserCompanyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserContactInfoResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserContactInfo(Encryptics.WebPortal.PortalService.UpdateUserContactInfoRequest request) {
            return base.Channel.UpdateUserContactInfo(request);
        }
        
        public bool UpdateUserContactInfo(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id, string first_name, string last_name, Encryptics.WebPortal.PortalService.ContactInfo user_contact_info) {
            Encryptics.WebPortal.PortalService.UpdateUserContactInfoRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserContactInfoRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.user_id = user_id;
            inValue.first_name = first_name;
            inValue.last_name = last_name;
            inValue.user_contact_info = user_contact_info;
            Encryptics.WebPortal.PortalService.UpdateUserContactInfoResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserContactInfo(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserContactInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserContactInfoResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserContactInfoAsync(Encryptics.WebPortal.PortalService.UpdateUserContactInfoRequest request) {
            return base.Channel.UpdateUserContactInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserContactInfoResponse> UpdateUserContactInfoAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id, string first_name, string last_name, Encryptics.WebPortal.PortalService.ContactInfo user_contact_info) {
            Encryptics.WebPortal.PortalService.UpdateUserContactInfoRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserContactInfoRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.user_id = user_id;
            inValue.first_name = first_name;
            inValue.last_name = last_name;
            inValue.user_contact_info = user_contact_info;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserContactInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserPasswordResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserPassword(Encryptics.WebPortal.PortalService.UpdateUserPasswordRequest request) {
            return base.Channel.UpdateUserPassword(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateUserPasswordStatus UpdateUserPassword(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string username, string old_password, string new_password) {
            Encryptics.WebPortal.PortalService.UpdateUserPasswordRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserPasswordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.username = username;
            inValue.old_password = old_password;
            inValue.new_password = new_password;
            Encryptics.WebPortal.PortalService.UpdateUserPasswordResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserPassword(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserPasswordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserPasswordResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserPasswordAsync(Encryptics.WebPortal.PortalService.UpdateUserPasswordRequest request) {
            return base.Channel.UpdateUserPasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserPasswordResponse> UpdateUserPasswordAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string username, string old_password, string new_password) {
            Encryptics.WebPortal.PortalService.UpdateUserPasswordRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserPasswordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.username = username;
            inValue.old_password = old_password;
            inValue.new_password = new_password;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserPasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserResetPasswordResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserResetPassword(Encryptics.WebPortal.PortalService.UpdateUserResetPasswordRequest request) {
            return base.Channel.UpdateUserResetPassword(request);
        }
        
        public bool UpdateUserResetPassword(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string new_password, bool random_password) {
            Encryptics.WebPortal.PortalService.UpdateUserResetPasswordRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserResetPasswordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.new_password = new_password;
            inValue.random_password = random_password;
            Encryptics.WebPortal.PortalService.UpdateUserResetPasswordResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserResetPassword(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserResetPasswordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserResetPasswordResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserResetPasswordAsync(Encryptics.WebPortal.PortalService.UpdateUserResetPasswordRequest request) {
            return base.Channel.UpdateUserResetPasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserResetPasswordResponse> UpdateUserResetPasswordAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string new_password, bool random_password) {
            Encryptics.WebPortal.PortalService.UpdateUserResetPasswordRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserResetPasswordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.new_password = new_password;
            inValue.random_password = random_password;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserResetPasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserSecurityQuestion(Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionRequest request) {
            return base.Channel.UpdateUserSecurityQuestion(request);
        }
        
        public bool UpdateUserSecurityQuestion(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int question_number, string question, string answer_hash) {
            Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.question_number = question_number;
            inValue.question = question;
            inValue.answer_hash = answer_hash;
            Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserSecurityQuestion(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserSecurityQuestionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserSecurityQuestionAsync(Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionRequest request) {
            return base.Channel.UpdateUserSecurityQuestionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionResponse> UpdateUserSecurityQuestionAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int question_number, string question, string answer_hash) {
            Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserSecurityQuestionRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.question_number = question_number;
            inValue.question = question;
            inValue.answer_hash = answer_hash;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserSecurityQuestionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserStatusResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserStatus(Encryptics.WebPortal.PortalService.UpdateUserStatusRequest request) {
            return base.Channel.UpdateUserStatus(request);
        }
        
        public bool UpdateUserStatus(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.UserStatus new_status) {
            Encryptics.WebPortal.PortalService.UpdateUserStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.new_status = new_status;
            Encryptics.WebPortal.PortalService.UpdateUserStatusResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserStatus(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserStatusResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserStatusAsync(Encryptics.WebPortal.PortalService.UpdateUserStatusRequest request) {
            return base.Channel.UpdateUserStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserStatusResponse> UpdateUserStatusAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.UserStatus new_status) {
            Encryptics.WebPortal.PortalService.UpdateUserStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.new_status = new_status;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserUnlockResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserUnlock(Encryptics.WebPortal.PortalService.UpdateUserUnlockRequest request) {
            return base.Channel.UpdateUserUnlock(request);
        }
        
        public bool UpdateUserUnlock(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.UpdateUserUnlockRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserUnlockRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.UpdateUserUnlockResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserUnlock(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserUnlockResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserUnlockResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserUnlockAsync(Encryptics.WebPortal.PortalService.UpdateUserUnlockRequest request) {
            return base.Channel.UpdateUserUnlockAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserUnlockResponse> UpdateUserUnlockAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.UpdateUserUnlockRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserUnlockRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserUnlockAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateUserUsageRightsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserUsageRights(Encryptics.WebPortal.PortalService.UpdateUserUsageRightsRequest request) {
            return base.Channel.UpdateUserUsageRights(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateUserUsageRightsStatus UpdateUserUsageRights(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.UserUsageRights user_usage_rights) {
            Encryptics.WebPortal.PortalService.UpdateUserUsageRightsRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserUsageRightsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_usage_rights = user_usage_rights;
            Encryptics.WebPortal.PortalService.UpdateUserUsageRightsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserUsageRights(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateUserUsageRightsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserUsageRightsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateUserUsageRightsAsync(Encryptics.WebPortal.PortalService.UpdateUserUsageRightsRequest request) {
            return base.Channel.UpdateUserUsageRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateUserUsageRightsResponse> UpdateUserUsageRightsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.UserUsageRights user_usage_rights) {
            Encryptics.WebPortal.PortalService.UpdateUserUsageRightsRequest inValue = new Encryptics.WebPortal.PortalService.UpdateUserUsageRightsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_usage_rights = user_usage_rights;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateUserUsageRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UserLoginResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UserLogin(Encryptics.WebPortal.PortalService.UserLoginRequest request) {
            return base.Channel.UserLogin(request);
        }
        
        public Encryptics.WebPortal.PortalService.UserAccount UserLogin(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string account_name, string password) {
            Encryptics.WebPortal.PortalService.UserLoginRequest inValue = new Encryptics.WebPortal.PortalService.UserLoginRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.account_name = account_name;
            inValue.password = password;
            Encryptics.WebPortal.PortalService.UserLoginResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UserLogin(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UserLoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UserLoginResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UserLoginAsync(Encryptics.WebPortal.PortalService.UserLoginRequest request) {
            return base.Channel.UserLoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UserLoginResponse> UserLoginAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string account_name, string password) {
            Encryptics.WebPortal.PortalService.UserLoginRequest inValue = new Encryptics.WebPortal.PortalService.UserLoginRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.account_name = account_name;
            inValue.password = password;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UserLoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UserLogoutResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UserLogout(Encryptics.WebPortal.PortalService.UserLogoutRequest request) {
            return base.Channel.UserLogout(request);
        }
        
        public bool UserLogout(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.UserLogoutRequest inValue = new Encryptics.WebPortal.PortalService.UserLogoutRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.UserLogoutResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UserLogout(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UserLogoutResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UserLogoutResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UserLogoutAsync(Encryptics.WebPortal.PortalService.UserLogoutRequest request) {
            return base.Channel.UserLogoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UserLogoutResponse> UserLogoutAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.UserLogoutRequest inValue = new Encryptics.WebPortal.PortalService.UserLogoutRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UserLogoutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.TokenLoginResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.TokenLogin(Encryptics.WebPortal.PortalService.TokenLoginRequest request) {
            return base.Channel.TokenLogin(request);
        }
        
        public Encryptics.WebPortal.PortalService.UserAccount TokenLogin(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string token) {
            Encryptics.WebPortal.PortalService.TokenLoginRequest inValue = new Encryptics.WebPortal.PortalService.TokenLoginRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.token = token;
            Encryptics.WebPortal.PortalService.TokenLoginResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).TokenLogin(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.TokenLoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.TokenLoginResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.TokenLoginAsync(Encryptics.WebPortal.PortalService.TokenLoginRequest request) {
            return base.Channel.TokenLoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.TokenLoginResponse> TokenLoginAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string token) {
            Encryptics.WebPortal.PortalService.TokenLoginRequest inValue = new Encryptics.WebPortal.PortalService.TokenLoginRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.token = token;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).TokenLoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.ValidateTokenResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.ValidateToken(Encryptics.WebPortal.PortalService.ValidateTokenRequest request) {
            return base.Channel.ValidateToken(request);
        }
        
        public bool ValidateToken(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id) {
            Encryptics.WebPortal.PortalService.ValidateTokenRequest inValue = new Encryptics.WebPortal.PortalService.ValidateTokenRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.ValidateTokenResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).ValidateToken(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.ValidateTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ValidateTokenResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.ValidateTokenAsync(Encryptics.WebPortal.PortalService.ValidateTokenRequest request) {
            return base.Channel.ValidateTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ValidateTokenResponse> ValidateTokenAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id) {
            Encryptics.WebPortal.PortalService.ValidateTokenRequest inValue = new Encryptics.WebPortal.PortalService.ValidateTokenRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).ValidateTokenAsync(inValue);
        }
        
        public bool VerifyUserSecurityQuestion(string email, int question_number, string answer_hash) {
            return base.Channel.VerifyUserSecurityQuestion(email, question_number, answer_hash);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyUserSecurityQuestionAsync(string email, int question_number, string answer_hash) {
            return base.Channel.VerifyUserSecurityQuestionAsync(email, question_number, answer_hash);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.AccountActivationResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.AccountActivation(Encryptics.WebPortal.PortalService.AccountActivationRequest request) {
            return base.Channel.AccountActivation(request);
        }
        
        public Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivation(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code) {
            Encryptics.WebPortal.PortalService.AccountActivationRequest inValue = new Encryptics.WebPortal.PortalService.AccountActivationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            inValue.activation_code = activation_code;
            Encryptics.WebPortal.PortalService.AccountActivationResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).AccountActivation(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.AccountActivationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.AccountActivationAsync(Encryptics.WebPortal.PortalService.AccountActivationRequest request) {
            return base.Channel.AccountActivationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationResponse> AccountActivationAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code) {
            Encryptics.WebPortal.PortalService.AccountActivationRequest inValue = new Encryptics.WebPortal.PortalService.AccountActivationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            inValue.activation_code = activation_code;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).AccountActivationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.AccountActivationByIDResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.AccountActivationByID(Encryptics.WebPortal.PortalService.AccountActivationByIDRequest request) {
            return base.Channel.AccountActivationByID(request);
        }
        
        public Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivationByID(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id) {
            Encryptics.WebPortal.PortalService.AccountActivationByIDRequest inValue = new Encryptics.WebPortal.PortalService.AccountActivationByIDRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            Encryptics.WebPortal.PortalService.AccountActivationByIDResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).AccountActivationByID(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.AccountActivationByIDResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationByIDResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.AccountActivationByIDAsync(Encryptics.WebPortal.PortalService.AccountActivationByIDRequest request) {
            return base.Channel.AccountActivationByIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationByIDResponse> AccountActivationByIDAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id) {
            Encryptics.WebPortal.PortalService.AccountActivationByIDRequest inValue = new Encryptics.WebPortal.PortalService.AccountActivationByIDRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).AccountActivationByIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.AccountActivationWithPasswordResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.AccountActivationWithPassword(Encryptics.WebPortal.PortalService.AccountActivationWithPasswordRequest request) {
            return base.Channel.AccountActivationWithPassword(request);
        }
        
        public Encryptics.WebPortal.PortalService.AccountActivationStatus AccountActivationWithPassword(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code, string hash, string password) {
            Encryptics.WebPortal.PortalService.AccountActivationWithPasswordRequest inValue = new Encryptics.WebPortal.PortalService.AccountActivationWithPasswordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            inValue.activation_code = activation_code;
            inValue.hash = hash;
            inValue.password = password;
            Encryptics.WebPortal.PortalService.AccountActivationWithPasswordResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).AccountActivationWithPassword(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.AccountActivationWithPasswordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationWithPasswordResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.AccountActivationWithPasswordAsync(Encryptics.WebPortal.PortalService.AccountActivationWithPasswordRequest request) {
            return base.Channel.AccountActivationWithPasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountActivationWithPasswordResponse> AccountActivationWithPasswordAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code, string hash, string password) {
            Encryptics.WebPortal.PortalService.AccountActivationWithPasswordRequest inValue = new Encryptics.WebPortal.PortalService.AccountActivationWithPasswordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            inValue.activation_code = activation_code;
            inValue.hash = hash;
            inValue.password = password;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).AccountActivationWithPasswordAsync(inValue);
        }
        
        public Encryptics.WebPortal.PortalService.AccountRegistrationStatus AccountRegistration(string account_name, string first_name, string last_name, string password, Encryptics.WebPortal.PortalService.SecurityQuestion[] security_questions, Encryptics.WebPortal.PortalService.OriginSite registration_site) {
            return base.Channel.AccountRegistration(account_name, first_name, last_name, password, security_questions, registration_site);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.AccountRegistrationStatus> AccountRegistrationAsync(string account_name, string first_name, string last_name, string password, Encryptics.WebPortal.PortalService.SecurityQuestion[] security_questions, Encryptics.WebPortal.PortalService.OriginSite registration_site) {
            return base.Channel.AccountRegistrationAsync(account_name, first_name, last_name, password, security_questions, registration_site);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.ExpireTokenSessionResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.ExpireTokenSession(Encryptics.WebPortal.PortalService.ExpireTokenSessionRequest request) {
            return base.Channel.ExpireTokenSession(request);
        }
        
        public bool ExpireTokenSession(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long token_id) {
            Encryptics.WebPortal.PortalService.ExpireTokenSessionRequest inValue = new Encryptics.WebPortal.PortalService.ExpireTokenSessionRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.token_id = token_id;
            Encryptics.WebPortal.PortalService.ExpireTokenSessionResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).ExpireTokenSession(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.ExpireTokenSessionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ExpireTokenSessionResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.ExpireTokenSessionAsync(Encryptics.WebPortal.PortalService.ExpireTokenSessionRequest request) {
            return base.Channel.ExpireTokenSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ExpireTokenSessionResponse> ExpireTokenSessionAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long token_id) {
            Encryptics.WebPortal.PortalService.ExpireTokenSessionRequest inValue = new Encryptics.WebPortal.PortalService.ExpireTokenSessionRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.token_id = token_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).ExpireTokenSessionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccountActivationLinkStatus(Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusRequest request) {
            return base.Channel.GetAccountActivationLinkStatus(request);
        }
        
        public Encryptics.WebPortal.PortalService.AccountActivationConfig GetAccountActivationLinkStatus(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code, string hash) {
            Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusRequest inValue = new Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            inValue.activation_code = activation_code;
            inValue.hash = hash;
            Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccountActivationLinkStatus(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetAccountActivationLinkStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccountActivationLinkStatusAsync(Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusRequest request) {
            return base.Channel.GetAccountActivationLinkStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusResponse> GetAccountActivationLinkStatusAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code, string hash) {
            Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusRequest inValue = new Encryptics.WebPortal.PortalService.GetAccountActivationLinkStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            inValue.activation_code = activation_code;
            inValue.hash = hash;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccountActivationLinkStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetAccountsListResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccountsList(Encryptics.WebPortal.PortalService.GetAccountsListRequest request) {
            return base.Channel.GetAccountsList(request);
        }
        
        public Encryptics.WebPortal.PortalService.UserAccountListReport GetAccountsList(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, string term, Encryptics.WebPortal.PortalService.AccountSearchType search_type, Encryptics.WebPortal.PortalService.AccountItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page, Encryptics.WebPortal.PortalService.UserStatus user_status) {
            Encryptics.WebPortal.PortalService.GetAccountsListRequest inValue = new Encryptics.WebPortal.PortalService.GetAccountsListRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.term = term;
            inValue.search_type = search_type;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            inValue.user_status = user_status;
            Encryptics.WebPortal.PortalService.GetAccountsListResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccountsList(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetAccountsListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountsListResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccountsListAsync(Encryptics.WebPortal.PortalService.GetAccountsListRequest request) {
            return base.Channel.GetAccountsListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountsListResponse> GetAccountsListAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, string term, Encryptics.WebPortal.PortalService.AccountSearchType search_type, Encryptics.WebPortal.PortalService.AccountItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page, Encryptics.WebPortal.PortalService.UserStatus user_status) {
            Encryptics.WebPortal.PortalService.GetAccountsListRequest inValue = new Encryptics.WebPortal.PortalService.GetAccountsListRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.term = term;
            inValue.search_type = search_type;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            inValue.user_status = user_status;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccountsListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetAccessGroupDetailsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccessGroupDetails(Encryptics.WebPortal.PortalService.GetAccessGroupDetailsRequest request) {
            return base.Channel.GetAccessGroupDetails(request);
        }
        
        public Encryptics.WebPortal.PortalService.AccessGroup GetAccessGroupDetails(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetAccessGroupDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetAccessGroupDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            Encryptics.WebPortal.PortalService.GetAccessGroupDetailsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccessGroupDetails(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetAccessGroupDetailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupDetailsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccessGroupDetailsAsync(Encryptics.WebPortal.PortalService.GetAccessGroupDetailsRequest request) {
            return base.Channel.GetAccessGroupDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupDetailsResponse> GetAccessGroupDetailsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetAccessGroupDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetAccessGroupDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccessGroupDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetAccessGroupsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccessGroups(Encryptics.WebPortal.PortalService.GetAccessGroupsRequest request) {
            return base.Channel.GetAccessGroups(request);
        }
        
        public Encryptics.WebPortal.PortalService.AccessGroup[] GetAccessGroups(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<long> user_id) {
            Encryptics.WebPortal.PortalService.GetAccessGroupsRequest inValue = new Encryptics.WebPortal.PortalService.GetAccessGroupsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.GetAccessGroupsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccessGroups(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetAccessGroupsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccessGroupsAsync(Encryptics.WebPortal.PortalService.GetAccessGroupsRequest request) {
            return base.Channel.GetAccessGroupsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupsResponse> GetAccessGroupsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<long> user_id) {
            Encryptics.WebPortal.PortalService.GetAccessGroupsRequest inValue = new Encryptics.WebPortal.PortalService.GetAccessGroupsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccessGroupsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetAccessGroupUsersResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccessGroupUsers(Encryptics.WebPortal.PortalService.GetAccessGroupUsersRequest request) {
            return base.Channel.GetAccessGroupUsers(request);
        }
        
        public Encryptics.WebPortal.PortalService.AccessGroupUser[] GetAccessGroupUsers(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetAccessGroupUsersRequest inValue = new Encryptics.WebPortal.PortalService.GetAccessGroupUsersRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            Encryptics.WebPortal.PortalService.GetAccessGroupUsersResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccessGroupUsers(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetAccessGroupUsersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupUsersResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccessGroupUsersAsync(Encryptics.WebPortal.PortalService.GetAccessGroupUsersRequest request) {
            return base.Channel.GetAccessGroupUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupUsersResponse> GetAccessGroupUsersAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetAccessGroupUsersRequest inValue = new Encryptics.WebPortal.PortalService.GetAccessGroupUsersRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccessGroupUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccessGroupUsersArchived(Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedRequest request) {
            return base.Channel.GetAccessGroupUsersArchived(request);
        }
        
        public Encryptics.WebPortal.PortalService.AccessGroupUser[] GetAccessGroupUsersArchived(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedRequest inValue = new Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccessGroupUsersArchived(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetAccessGroupUsersArchivedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccessGroupUsersArchivedAsync(Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedRequest request) {
            return base.Channel.GetAccessGroupUsersArchivedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedResponse> GetAccessGroupUsersArchivedAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedRequest inValue = new Encryptics.WebPortal.PortalService.GetAccessGroupUsersArchivedRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccessGroupUsersArchivedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetCompanyDetailsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDetails(Encryptics.WebPortal.PortalService.GetCompanyDetailsRequest request) {
            return base.Channel.GetCompanyDetails(request);
        }
        
        public Encryptics.WebPortal.PortalService.Company GetCompanyDetails(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetCompanyDetailsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDetails(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetCompanyDetailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDetailsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDetailsAsync(Encryptics.WebPortal.PortalService.GetCompanyDetailsRequest request) {
            return base.Channel.GetCompanyDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDetailsResponse> GetCompanyDetailsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetCompanyDevicesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDevices(Encryptics.WebPortal.PortalService.GetCompanyDevicesRequest request) {
            return base.Channel.GetCompanyDevices(request);
        }
        
        public Encryptics.WebPortal.PortalService.DeviceListItem[] GetCompanyDevices(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DeviceItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetCompanyDevicesRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDevicesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            Encryptics.WebPortal.PortalService.GetCompanyDevicesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDevices(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetCompanyDevicesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDevicesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDevicesAsync(Encryptics.WebPortal.PortalService.GetCompanyDevicesRequest request) {
            return base.Channel.GetCompanyDevicesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDevicesResponse> GetCompanyDevicesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DeviceItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetCompanyDevicesRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDevicesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDevicesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetCompanyDLPConfigResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDLPConfig(Encryptics.WebPortal.PortalService.GetCompanyDLPConfigRequest request) {
            return base.Channel.GetCompanyDLPConfig(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyDLPConfig GetCompanyDLPConfig(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyDLPConfigRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDLPConfigRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetCompanyDLPConfigResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDLPConfig(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetCompanyDLPConfigResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDLPConfigResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDLPConfigAsync(Encryptics.WebPortal.PortalService.GetCompanyDLPConfigRequest request) {
            return base.Channel.GetCompanyDLPConfigAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDLPConfigResponse> GetCompanyDLPConfigAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyDLPConfigRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDLPConfigRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDLPConfigAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetCompanyDomainsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDomains(Encryptics.WebPortal.PortalService.GetCompanyDomainsRequest request) {
            return base.Channel.GetCompanyDomains(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyDomain[] GetCompanyDomains(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyDomainsRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDomainsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetCompanyDomainsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDomains(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetCompanyDomainsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDomainsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDomainsAsync(Encryptics.WebPortal.PortalService.GetCompanyDomainsRequest request) {
            return base.Channel.GetCompanyDomainsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDomainsResponse> GetCompanyDomainsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyDomainsRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDomainsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDomainsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyEmailTemplate(Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateRequest request) {
            return base.Channel.GetCompanyEmailTemplate(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyEmailTemplate GetCompanyEmailTemplate(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int template_type) {
            Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.template_type = template_type;
            Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyEmailTemplate(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetCompanyEmailTemplateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyEmailTemplateAsync(Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateRequest request) {
            return base.Channel.GetCompanyEmailTemplateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateResponse> GetCompanyEmailTemplateAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int template_type) {
            Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyEmailTemplateRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.template_type = template_type;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyEmailTemplateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetCompanyGeneologyResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyGeneology(Encryptics.WebPortal.PortalService.GetCompanyGeneologyRequest request) {
            return base.Channel.GetCompanyGeneology(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyGeneology[] GetCompanyGeneology(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyGeneologyRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyGeneologyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetCompanyGeneologyResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyGeneology(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetCompanyGeneologyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyGeneologyResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyGeneologyAsync(Encryptics.WebPortal.PortalService.GetCompanyGeneologyRequest request) {
            return base.Channel.GetCompanyGeneologyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyGeneologyResponse> GetCompanyGeneologyAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyGeneologyRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyGeneologyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyGeneologyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetCompanyGWConfigResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyGWConfig(Encryptics.WebPortal.PortalService.GetCompanyGWConfigRequest request) {
            return base.Channel.GetCompanyGWConfig(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyGWConfig GetCompanyGWConfig(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyGWConfigRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyGWConfigRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetCompanyGWConfigResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyGWConfig(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetCompanyGWConfigResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyGWConfigResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyGWConfigAsync(Encryptics.WebPortal.PortalService.GetCompanyGWConfigRequest request) {
            return base.Channel.GetCompanyGWConfigAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyGWConfigResponse> GetCompanyGWConfigAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetCompanyGWConfigRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyGWConfigRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyGWConfigAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDeviceDetailsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDeviceDetails(Encryptics.WebPortal.PortalService.GetDeviceDetailsRequest request) {
            return base.Channel.GetDeviceDetails(request);
        }
        
        public Encryptics.WebPortal.PortalService.Device GetDeviceDetails(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long device_id) {
            Encryptics.WebPortal.PortalService.GetDeviceDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetDeviceDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.device_id = device_id;
            Encryptics.WebPortal.PortalService.GetDeviceDetailsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDeviceDetails(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDeviceDetailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDeviceDetailsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDeviceDetailsAsync(Encryptics.WebPortal.PortalService.GetDeviceDetailsRequest request) {
            return base.Channel.GetDeviceDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDeviceDetailsResponse> GetDeviceDetailsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long device_id) {
            Encryptics.WebPortal.PortalService.GetDeviceDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetDeviceDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.device_id = device_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDeviceDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDeviceListResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDeviceList(Encryptics.WebPortal.PortalService.GetDeviceListRequest request) {
            return base.Channel.GetDeviceList(request);
        }
        
        public Encryptics.WebPortal.PortalService.Device[] GetDeviceList(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.GetDeviceListRequest inValue = new Encryptics.WebPortal.PortalService.GetDeviceListRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.GetDeviceListResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDeviceList(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDeviceListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDeviceListResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDeviceListAsync(Encryptics.WebPortal.PortalService.GetDeviceListRequest request) {
            return base.Channel.GetDeviceListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDeviceListResponse> GetDeviceListAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.GetDeviceListRequest inValue = new Encryptics.WebPortal.PortalService.GetDeviceListRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDeviceListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetEncryptionDetailsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetEncryptionDetails(Encryptics.WebPortal.PortalService.GetEncryptionDetailsRequest request) {
            return base.Channel.GetEncryptionDetails(request);
        }
        
        public Encryptics.WebPortal.PortalService.Encryption GetEncryptionDetails(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long safe_id) {
            Encryptics.WebPortal.PortalService.GetEncryptionDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetEncryptionDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.safe_id = safe_id;
            Encryptics.WebPortal.PortalService.GetEncryptionDetailsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetEncryptionDetails(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetEncryptionDetailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEncryptionDetailsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetEncryptionDetailsAsync(Encryptics.WebPortal.PortalService.GetEncryptionDetailsRequest request) {
            return base.Channel.GetEncryptionDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEncryptionDetailsResponse> GetEncryptionDetailsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long safe_id) {
            Encryptics.WebPortal.PortalService.GetEncryptionDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetEncryptionDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.safe_id = safe_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetEncryptionDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDLPSummary(Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryRequest request) {
            return base.Channel.GetCompanyDLPSummary(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyDLPSummaryReport GetCompanyDLPSummary(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDLPSummary(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetCompanyDLPSummaryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetCompanyDLPSummaryAsync(Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryRequest request) {
            return base.Channel.GetCompanyDLPSummaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryResponse> GetCompanyDLPSummaryAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryRequest inValue = new Encryptics.WebPortal.PortalService.GetCompanyDLPSummaryRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetCompanyDLPSummaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPJustificationsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPJustifications(Encryptics.WebPortal.PortalService.GetDLPJustificationsRequest request) {
            return base.Channel.GetDLPJustifications(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPViolationsReport GetDLPJustifications(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetDLPJustificationsRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPJustificationsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetDLPJustificationsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPJustifications(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPJustificationsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPJustificationsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPJustificationsAsync(Encryptics.WebPortal.PortalService.GetDLPJustificationsRequest request) {
            return base.Channel.GetDLPJustificationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPJustificationsResponse> GetDLPJustificationsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetDLPJustificationsRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPJustificationsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPJustificationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPPoliciesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPPolicies(Encryptics.WebPortal.PortalService.GetDLPPoliciesRequest request) {
            return base.Channel.GetDLPPolicies(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPPolicy[] GetDLPPolicies(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetDLPPoliciesRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPPoliciesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetDLPPoliciesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPPolicies(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPPoliciesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPPoliciesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPPoliciesAsync(Encryptics.WebPortal.PortalService.GetDLPPoliciesRequest request) {
            return base.Channel.GetDLPPoliciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPPoliciesResponse> GetDLPPoliciesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetDLPPoliciesRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPPoliciesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPPoliciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPRuleResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPRule(Encryptics.WebPortal.PortalService.GetDLPRuleRequest request) {
            return base.Channel.GetDLPRule(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPRule GetDLPRule(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long rule_id, System.Nullable<long> entity_rule_id) {
            Encryptics.WebPortal.PortalService.GetDLPRuleRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPRuleRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.rule_id = rule_id;
            inValue.entity_rule_id = entity_rule_id;
            Encryptics.WebPortal.PortalService.GetDLPRuleResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPRule(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPRuleResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRuleResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPRuleAsync(Encryptics.WebPortal.PortalService.GetDLPRuleRequest request) {
            return base.Channel.GetDLPRuleAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRuleResponse> GetDLPRuleAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long rule_id, System.Nullable<long> entity_rule_id) {
            Encryptics.WebPortal.PortalService.GetDLPRuleRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPRuleRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.rule_id = rule_id;
            inValue.entity_rule_id = entity_rule_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPRuleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPRulesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPRules(Encryptics.WebPortal.PortalService.GetDLPRulesRequest request) {
            return base.Channel.GetDLPRules(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPRule[] GetDLPRules(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_id, System.Nullable<long> rule_type_id, bool only_enabled) {
            Encryptics.WebPortal.PortalService.GetDLPRulesRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPRulesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_id = policy_id;
            inValue.rule_type_id = rule_type_id;
            inValue.only_enabled = only_enabled;
            Encryptics.WebPortal.PortalService.GetDLPRulesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPRules(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPRulesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRulesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPRulesAsync(Encryptics.WebPortal.PortalService.GetDLPRulesRequest request) {
            return base.Channel.GetDLPRulesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRulesResponse> GetDLPRulesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_id, System.Nullable<long> rule_type_id, bool only_enabled) {
            Encryptics.WebPortal.PortalService.GetDLPRulesRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPRulesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_id = policy_id;
            inValue.rule_type_id = rule_type_id;
            inValue.only_enabled = only_enabled;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPRulesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPRulesVisibility(Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityRequest request) {
            return base.Channel.GetDLPRulesVisibility(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPRulesVisibility GetDLPRulesVisibility(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPRulesVisibility(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPRulesVisibilityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPRulesVisibilityAsync(Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityRequest request) {
            return base.Channel.GetDLPRulesVisibilityAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityResponse> GetDLPRulesVisibilityAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPRulesVisibilityRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPRulesVisibilityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPRuleTypesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPRuleTypes(Encryptics.WebPortal.PortalService.GetDLPRuleTypesRequest request) {
            return base.Channel.GetDLPRuleTypes(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPRuleType[] GetDLPRuleTypes(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_id) {
            Encryptics.WebPortal.PortalService.GetDLPRuleTypesRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPRuleTypesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_id = policy_id;
            Encryptics.WebPortal.PortalService.GetDLPRuleTypesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPRuleTypes(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPRuleTypesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRuleTypesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPRuleTypesAsync(Encryptics.WebPortal.PortalService.GetDLPRuleTypesRequest request) {
            return base.Channel.GetDLPRuleTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPRuleTypesResponse> GetDLPRuleTypesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_id) {
            Encryptics.WebPortal.PortalService.GetDLPRuleTypesRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPRuleTypesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_id = policy_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPRuleTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPViolationsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPViolations(Encryptics.WebPortal.PortalService.GetDLPViolationsRequest request) {
            return base.Channel.GetDLPViolations(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPViolationsReport GetDLPViolations(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetDLPViolationsRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPViolationsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetDLPViolationsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPViolations(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPViolationsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPViolationsAsync(Encryptics.WebPortal.PortalService.GetDLPViolationsRequest request) {
            return base.Channel.GetDLPViolationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsResponse> GetDLPViolationsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetDLPViolationsRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPViolationsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPViolationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPViolationsRuleOverviewByRuleType(Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeRequest request) {
            return base.Channel.GetDLPViolationsRuleOverviewByRuleType(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPViolationsRuleOverviewByRuleTypeReport GetDLPViolationsRuleOverviewByRuleType(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, long rule_type_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.rule_type_id = rule_type_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPViolationsRuleOverviewByRuleType(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPViolationsRuleOverviewByRuleTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPViolationsRuleOverviewByRuleTypeAsync(Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeRequest request) {
            return base.Channel.GetDLPViolationsRuleOverviewByRuleTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeResponse> GetDLPViolationsRuleOverviewByRuleTypeAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, long rule_type_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPViolationsRuleOverviewByRuleTypeRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.rule_type_id = rule_type_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPViolationsRuleOverviewByRuleTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPViolationsRuleTypeOverview(Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewRequest request) {
            return base.Channel.GetDLPViolationsRuleTypeOverview(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPViolationsRuleTypeOverviewReport GetDLPViolationsRuleTypeOverview(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPViolationsRuleTypeOverview(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetDLPViolationsRuleTypeOverviewResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetDLPViolationsRuleTypeOverviewAsync(Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewRequest request) {
            return base.Channel.GetDLPViolationsRuleTypeOverviewAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewResponse> GetDLPViolationsRuleTypeOverviewAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewRequest inValue = new Encryptics.WebPortal.PortalService.GetDLPViolationsRuleTypeOverviewRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetDLPViolationsRuleTypeOverviewAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetEntityRoleUsersResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetEntityRoleUsers(Encryptics.WebPortal.PortalService.GetEntityRoleUsersRequest request) {
            return base.Channel.GetEntityRoleUsers(request);
        }
        
        public Encryptics.WebPortal.PortalService.EntityRoleUser[] GetEntityRoleUsers(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> role_id) {
            Encryptics.WebPortal.PortalService.GetEntityRoleUsersRequest inValue = new Encryptics.WebPortal.PortalService.GetEntityRoleUsersRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.role_id = role_id;
            Encryptics.WebPortal.PortalService.GetEntityRoleUsersResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetEntityRoleUsers(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetEntityRoleUsersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEntityRoleUsersResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetEntityRoleUsersAsync(Encryptics.WebPortal.PortalService.GetEntityRoleUsersRequest request) {
            return base.Channel.GetEntityRoleUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEntityRoleUsersResponse> GetEntityRoleUsersAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> role_id) {
            Encryptics.WebPortal.PortalService.GetEntityRoleUsersRequest inValue = new Encryptics.WebPortal.PortalService.GetEntityRoleUsersRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.role_id = role_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetEntityRoleUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetEntityUsageSummariesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetEntityUsageSummaries(Encryptics.WebPortal.PortalService.GetEntityUsageSummariesRequest request) {
            return base.Channel.GetEntityUsageSummaries(request);
        }
        
        public Encryptics.WebPortal.PortalService.UsageSummary[] GetEntityUsageSummaries(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.DateTime start_date, System.DateTime end_date, Encryptics.WebPortal.PortalService.SummaryType sumType) {
            Encryptics.WebPortal.PortalService.GetEntityUsageSummariesRequest inValue = new Encryptics.WebPortal.PortalService.GetEntityUsageSummariesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.start_date = start_date;
            inValue.end_date = end_date;
            inValue.sumType = sumType;
            Encryptics.WebPortal.PortalService.GetEntityUsageSummariesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetEntityUsageSummaries(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetEntityUsageSummariesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEntityUsageSummariesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetEntityUsageSummariesAsync(Encryptics.WebPortal.PortalService.GetEntityUsageSummariesRequest request) {
            return base.Channel.GetEntityUsageSummariesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetEntityUsageSummariesResponse> GetEntityUsageSummariesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.DateTime start_date, System.DateTime end_date, Encryptics.WebPortal.PortalService.SummaryType sumType) {
            Encryptics.WebPortal.PortalService.GetEntityUsageSummariesRequest inValue = new Encryptics.WebPortal.PortalService.GetEntityUsageSummariesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.start_date = start_date;
            inValue.end_date = end_date;
            inValue.sumType = sumType;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetEntityUsageSummariesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetGrantableCompaniesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetGrantableCompanies(Encryptics.WebPortal.PortalService.GetGrantableCompaniesRequest request) {
            return base.Channel.GetGrantableCompanies(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyListItem[] GetGrantableCompanies(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long admin_entity_id, long admin_id, System.Nullable<long> user_id, string company_name_filter) {
            Encryptics.WebPortal.PortalService.GetGrantableCompaniesRequest inValue = new Encryptics.WebPortal.PortalService.GetGrantableCompaniesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.admin_entity_id = admin_entity_id;
            inValue.admin_id = admin_id;
            inValue.user_id = user_id;
            inValue.company_name_filter = company_name_filter;
            Encryptics.WebPortal.PortalService.GetGrantableCompaniesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetGrantableCompanies(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetGrantableCompaniesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetGrantableCompaniesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetGrantableCompaniesAsync(Encryptics.WebPortal.PortalService.GetGrantableCompaniesRequest request) {
            return base.Channel.GetGrantableCompaniesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetGrantableCompaniesResponse> GetGrantableCompaniesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long admin_entity_id, long admin_id, System.Nullable<long> user_id, string company_name_filter) {
            Encryptics.WebPortal.PortalService.GetGrantableCompaniesRequest inValue = new Encryptics.WebPortal.PortalService.GetGrantableCompaniesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.admin_entity_id = admin_entity_id;
            inValue.admin_id = admin_id;
            inValue.user_id = user_id;
            inValue.company_name_filter = company_name_filter;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetGrantableCompaniesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetGrantableRolesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetGrantableRoles(Encryptics.WebPortal.PortalService.GetGrantableRolesRequest request) {
            return base.Channel.GetGrantableRoles(request);
        }
        
        public Encryptics.WebPortal.PortalService.PortalRoleListItem[] GetGrantableRoles(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetGrantableRolesRequest inValue = new Encryptics.WebPortal.PortalService.GetGrantableRolesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetGrantableRolesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetGrantableRoles(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetGrantableRolesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetGrantableRolesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetGrantableRolesAsync(Encryptics.WebPortal.PortalService.GetGrantableRolesRequest request) {
            return base.Channel.GetGrantableRolesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetGrantableRolesResponse> GetGrantableRolesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetGrantableRolesRequest inValue = new Encryptics.WebPortal.PortalService.GetGrantableRolesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetGrantableRolesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetImportUsersAccountsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetImportUsersAccounts(Encryptics.WebPortal.PortalService.GetImportUsersAccountsRequest request) {
            return base.Channel.GetImportUsersAccounts(request);
        }
        
        public Encryptics.WebPortal.PortalService.ImportUsersAccount[] GetImportUsersAccounts(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long import_file_id) {
            Encryptics.WebPortal.PortalService.GetImportUsersAccountsRequest inValue = new Encryptics.WebPortal.PortalService.GetImportUsersAccountsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.import_file_id = import_file_id;
            Encryptics.WebPortal.PortalService.GetImportUsersAccountsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetImportUsersAccounts(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetImportUsersAccountsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetImportUsersAccountsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetImportUsersAccountsAsync(Encryptics.WebPortal.PortalService.GetImportUsersAccountsRequest request) {
            return base.Channel.GetImportUsersAccountsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetImportUsersAccountsResponse> GetImportUsersAccountsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long import_file_id) {
            Encryptics.WebPortal.PortalService.GetImportUsersAccountsRequest inValue = new Encryptics.WebPortal.PortalService.GetImportUsersAccountsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.import_file_id = import_file_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetImportUsersAccountsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetImportUsersRequestsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetImportUsersRequests(Encryptics.WebPortal.PortalService.GetImportUsersRequestsRequest request) {
            return base.Channel.GetImportUsersRequests(request);
        }
        
        public Encryptics.WebPortal.PortalService.ImportUsersRequest[] GetImportUsersRequests(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetImportUsersRequestsRequest inValue = new Encryptics.WebPortal.PortalService.GetImportUsersRequestsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetImportUsersRequestsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetImportUsersRequests(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetImportUsersRequestsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetImportUsersRequestsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetImportUsersRequestsAsync(Encryptics.WebPortal.PortalService.GetImportUsersRequestsRequest request) {
            return base.Channel.GetImportUsersRequestsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetImportUsersRequestsResponse> GetImportUsersRequestsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetImportUsersRequestsRequest inValue = new Encryptics.WebPortal.PortalService.GetImportUsersRequestsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetImportUsersRequestsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetLexiconDLPTermsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetLexiconDLPTerms(Encryptics.WebPortal.PortalService.GetLexiconDLPTermsRequest request) {
            return base.Channel.GetLexiconDLPTerms(request);
        }
        
        public Encryptics.WebPortal.PortalService.DLPTerm[] GetLexiconDLPTerms(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long lexicon_id, System.Nullable<long> entity_id, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetLexiconDLPTermsRequest inValue = new Encryptics.WebPortal.PortalService.GetLexiconDLPTermsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.lexicon_id = lexicon_id;
            inValue.entity_id = entity_id;
            inValue.page_size = page_size;
            inValue.page = page;
            Encryptics.WebPortal.PortalService.GetLexiconDLPTermsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetLexiconDLPTerms(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetLexiconDLPTermsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetLexiconDLPTermsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetLexiconDLPTermsAsync(Encryptics.WebPortal.PortalService.GetLexiconDLPTermsRequest request) {
            return base.Channel.GetLexiconDLPTermsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetLexiconDLPTermsResponse> GetLexiconDLPTermsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long lexicon_id, System.Nullable<long> entity_id, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetLexiconDLPTermsRequest inValue = new Encryptics.WebPortal.PortalService.GetLexiconDLPTermsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.lexicon_id = lexicon_id;
            inValue.entity_id = entity_id;
            inValue.page_size = page_size;
            inValue.page = page;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetLexiconDLPTermsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetMalwareFilesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareFiles(Encryptics.WebPortal.PortalService.GetMalwareFilesRequest request) {
            return base.Channel.GetMalwareFiles(request);
        }
        
        public Encryptics.WebPortal.PortalService.MalwareFilesReport GetMalwareFiles(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetMalwareFilesRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareFilesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetMalwareFilesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareFiles(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetMalwareFilesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFilesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareFilesAsync(Encryptics.WebPortal.PortalService.GetMalwareFilesRequest request) {
            return base.Channel.GetMalwareFilesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFilesResponse> GetMalwareFilesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetMalwareFilesRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareFilesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareFilesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareFileTypeRiskProfile(Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileRequest request) {
            return base.Channel.GetMalwareFileTypeRiskProfile(request);
        }
        
        public Encryptics.WebPortal.PortalService.MalwareFileTypeRiskProfileReport GetMalwareFileTypeRiskProfile(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, string file_type, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.file_type = file_type;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareFileTypeRiskProfile(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetMalwareFileTypeRiskProfileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareFileTypeRiskProfileAsync(Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileRequest request) {
            return base.Channel.GetMalwareFileTypeRiskProfileAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileResponse> GetMalwareFileTypeRiskProfileAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, string file_type, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareFileTypeRiskProfileRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.file_type = file_type;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareFileTypeRiskProfileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetMalwareFileTypesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareFileTypes(Encryptics.WebPortal.PortalService.GetMalwareFileTypesRequest request) {
            return base.Channel.GetMalwareFileTypes(request);
        }
        
        public string[] GetMalwareFileTypes(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth) {
            Encryptics.WebPortal.PortalService.GetMalwareFileTypesRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareFileTypesRequest();
            inValue.TokenAuth = TokenAuth;
            Encryptics.WebPortal.PortalService.GetMalwareFileTypesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareFileTypes(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetMalwareFileTypesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareFileTypesAsync(Encryptics.WebPortal.PortalService.GetMalwareFileTypesRequest request) {
            return base.Channel.GetMalwareFileTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypesResponse> GetMalwareFileTypesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth) {
            Encryptics.WebPortal.PortalService.GetMalwareFileTypesRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareFileTypesRequest();
            inValue.TokenAuth = TokenAuth;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareFileTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareFileTypesOverview(Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewRequest request) {
            return base.Channel.GetMalwareFileTypesOverview(request);
        }
        
        public Encryptics.WebPortal.PortalService.MalwareFileTypesOverviewReport GetMalwareFileTypesOverview(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareFileTypesOverview(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetMalwareFileTypesOverviewResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareFileTypesOverviewAsync(Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewRequest request) {
            return base.Channel.GetMalwareFileTypesOverviewAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewResponse> GetMalwareFileTypesOverviewAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareFileTypesOverviewRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareFileTypesOverviewAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareRiskOverview(Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewRequest request) {
            return base.Channel.GetMalwareRiskOverview(request);
        }
        
        public Encryptics.WebPortal.PortalService.MalwareRiskOverviewReport GetMalwareRiskOverview(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareRiskOverview(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetMalwareRiskOverviewResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetMalwareRiskOverviewAsync(Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewRequest request) {
            return base.Channel.GetMalwareRiskOverviewAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewResponse> GetMalwareRiskOverviewAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewRequest inValue = new Encryptics.WebPortal.PortalService.GetMalwareRiskOverviewRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetMalwareRiskOverviewAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetPendingAccountsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetPendingAccounts(Encryptics.WebPortal.PortalService.GetPendingAccountsRequest request) {
            return base.Channel.GetPendingAccounts(request);
        }
        
        public Encryptics.WebPortal.PortalService.PendingUserAccountListReport GetPendingAccounts(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, string term, Encryptics.WebPortal.PortalService.PendingAccountSearchType search_type, Encryptics.WebPortal.PortalService.PendingAccountItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetPendingAccountsRequest inValue = new Encryptics.WebPortal.PortalService.GetPendingAccountsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.term = term;
            inValue.search_type = search_type;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            Encryptics.WebPortal.PortalService.GetPendingAccountsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetPendingAccounts(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetPendingAccountsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetPendingAccountsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetPendingAccountsAsync(Encryptics.WebPortal.PortalService.GetPendingAccountsRequest request) {
            return base.Channel.GetPendingAccountsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetPendingAccountsResponse> GetPendingAccountsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, string term, Encryptics.WebPortal.PortalService.PendingAccountSearchType search_type, Encryptics.WebPortal.PortalService.PendingAccountItemListSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetPendingAccountsRequest inValue = new Encryptics.WebPortal.PortalService.GetPendingAccountsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.term = term;
            inValue.search_type = search_type;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetPendingAccountsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetResetPasswordLinkStatus(Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusRequest request) {
            return base.Channel.GetResetPasswordLinkStatus(request);
        }
        
        public Encryptics.WebPortal.PortalService.ResetPasswordLinkStatus GetResetPasswordLinkStatus(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int request_id, string code, string hash) {
            Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusRequest inValue = new Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.request_id = request_id;
            inValue.code = code;
            inValue.hash = hash;
            Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetResetPasswordLinkStatus(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetResetPasswordLinkStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetResetPasswordLinkStatusAsync(Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusRequest request) {
            return base.Channel.GetResetPasswordLinkStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusResponse> GetResetPasswordLinkStatusAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int request_id, string code, string hash) {
            Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusRequest inValue = new Encryptics.WebPortal.PortalService.GetResetPasswordLinkStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.request_id = request_id;
            inValue.code = code;
            inValue.hash = hash;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetResetPasswordLinkStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetSoftwarePlatformsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetSoftwarePlatforms(Encryptics.WebPortal.PortalService.GetSoftwarePlatformsRequest request) {
            return base.Channel.GetSoftwarePlatforms(request);
        }
        
        public Encryptics.WebPortal.PortalService.SoftwarePlatform[] GetSoftwarePlatforms(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth) {
            Encryptics.WebPortal.PortalService.GetSoftwarePlatformsRequest inValue = new Encryptics.WebPortal.PortalService.GetSoftwarePlatformsRequest();
            inValue.TokenAuth = TokenAuth;
            Encryptics.WebPortal.PortalService.GetSoftwarePlatformsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetSoftwarePlatforms(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetSoftwarePlatformsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetSoftwarePlatformsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetSoftwarePlatformsAsync(Encryptics.WebPortal.PortalService.GetSoftwarePlatformsRequest request) {
            return base.Channel.GetSoftwarePlatformsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetSoftwarePlatformsResponse> GetSoftwarePlatformsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth) {
            Encryptics.WebPortal.PortalService.GetSoftwarePlatformsRequest inValue = new Encryptics.WebPortal.PortalService.GetSoftwarePlatformsRequest();
            inValue.TokenAuth = TokenAuth;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetSoftwarePlatformsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetSoftwareReleasesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetSoftwareReleases(Encryptics.WebPortal.PortalService.GetSoftwareReleasesRequest request) {
            return base.Channel.GetSoftwareReleases(request);
        }
        
        public Encryptics.WebPortal.PortalService.SoftwareRelease[] GetSoftwareReleases(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<int> platform_id, System.Nullable<bool> is_active) {
            Encryptics.WebPortal.PortalService.GetSoftwareReleasesRequest inValue = new Encryptics.WebPortal.PortalService.GetSoftwareReleasesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.platform_id = platform_id;
            inValue.is_active = is_active;
            Encryptics.WebPortal.PortalService.GetSoftwareReleasesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetSoftwareReleases(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetSoftwareReleasesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetSoftwareReleasesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetSoftwareReleasesAsync(Encryptics.WebPortal.PortalService.GetSoftwareReleasesRequest request) {
            return base.Channel.GetSoftwareReleasesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetSoftwareReleasesResponse> GetSoftwareReleasesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<int> platform_id, System.Nullable<bool> is_active) {
            Encryptics.WebPortal.PortalService.GetSoftwareReleasesRequest inValue = new Encryptics.WebPortal.PortalService.GetSoftwareReleasesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.platform_id = platform_id;
            inValue.is_active = is_active;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetSoftwareReleasesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesByDecryptions(Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsRequest request) {
            return base.Channel.GetTopCompaniesByDecryptions(request);
        }
        
        public Encryptics.WebPortal.PortalService.TopCompaniesByDecryptionsReport GetTopCompaniesByDecryptions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesByDecryptions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetTopCompaniesByDecryptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesByDecryptionsAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsRequest request) {
            return base.Channel.GetTopCompaniesByDecryptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsResponse> GetTopCompaniesByDecryptionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesByDecryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesByDecryptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesByEncryptions(Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsRequest request) {
            return base.Channel.GetTopCompaniesByEncryptions(request);
        }
        
        public Encryptics.WebPortal.PortalService.TopCompaniesByEncryptionsReport GetTopCompaniesByEncryptions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesByEncryptions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetTopCompaniesByEncryptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesByEncryptionsAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsRequest request) {
            return base.Channel.GetTopCompaniesByEncryptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsResponse> GetTopCompaniesByEncryptionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesByEncryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesByEncryptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesByExpiration(Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationRequest request) {
            return base.Channel.GetTopCompaniesByExpiration(request);
        }
        
        public Encryptics.WebPortal.PortalService.TopCompaniesByExpirationReport GetTopCompaniesByExpiration(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int top_count) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.top_count = top_count;
            Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesByExpiration(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetTopCompaniesByExpirationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesByExpirationAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationRequest request) {
            return base.Channel.GetTopCompaniesByExpirationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationResponse> GetTopCompaniesByExpirationAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int top_count) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesByExpirationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.top_count = top_count;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesByExpirationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesUsageSummariesByDecryptions(Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsRequest request) {
            return base.Channel.GetTopCompaniesUsageSummariesByDecryptions(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyUsageCount[] GetTopCompaniesUsageSummariesByDecryptions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.DateTime start_date, System.DateTime end_date, int top_count) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.start_date = start_date;
            inValue.end_date = end_date;
            inValue.top_count = top_count;
            Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesUsageSummariesByDecryptions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetTopCompaniesUsageSummariesByDecryptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesUsageSummariesByDecryptionsAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsRequest request) {
            return base.Channel.GetTopCompaniesUsageSummariesByDecryptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsResponse> GetTopCompaniesUsageSummariesByDecryptionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.DateTime start_date, System.DateTime end_date, int top_count) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByDecryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.start_date = start_date;
            inValue.end_date = end_date;
            inValue.top_count = top_count;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesUsageSummariesByDecryptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesUsageSummariesByEncryptions(Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsRequest request) {
            return base.Channel.GetTopCompaniesUsageSummariesByEncryptions(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyUsageCount[] GetTopCompaniesUsageSummariesByEncryptions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.DateTime start_date, System.DateTime end_date, int top_count) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.start_date = start_date;
            inValue.end_date = end_date;
            inValue.top_count = top_count;
            Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesUsageSummariesByEncryptions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetTopCompaniesUsageSummariesByEncryptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopCompaniesUsageSummariesByEncryptionsAsync(Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsRequest request) {
            return base.Channel.GetTopCompaniesUsageSummariesByEncryptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsResponse> GetTopCompaniesUsageSummariesByEncryptionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.DateTime start_date, System.DateTime end_date, int top_count) {
            Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopCompaniesUsageSummariesByEncryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.start_date = start_date;
            inValue.end_date = end_date;
            inValue.top_count = top_count;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopCompaniesUsageSummariesByEncryptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopUsersByEncryptions(Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsRequest request) {
            return base.Channel.GetTopUsersByEncryptions(request);
        }
        
        public Encryptics.WebPortal.PortalService.TopUsersByEncryptionsReport GetTopUsersByEncryptions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopUsersByEncryptions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetTopUsersByEncryptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopUsersByEncryptionsAsync(Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsRequest request) {
            return base.Channel.GetTopUsersByEncryptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsResponse> GetTopUsersByEncryptionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopUsersByEncryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopUsersByEncryptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetTopUsersByViolationsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopUsersByViolations(Encryptics.WebPortal.PortalService.GetTopUsersByViolationsRequest request) {
            return base.Channel.GetTopUsersByViolations(request);
        }
        
        public Encryptics.WebPortal.PortalService.TopUsersByDLPViolationsReport GetTopUsersByViolations(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopUsersByViolationsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopUsersByViolationsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetTopUsersByViolationsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopUsersByViolations(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetTopUsersByViolationsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopUsersByViolationsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopUsersByViolationsAsync(Encryptics.WebPortal.PortalService.GetTopUsersByViolationsRequest request) {
            return base.Channel.GetTopUsersByViolationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopUsersByViolationsResponse> GetTopUsersByViolationsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopUsersByViolationsRequest inValue = new Encryptics.WebPortal.PortalService.GetTopUsersByViolationsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopUsersByViolationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopViolatedDLPRules(Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesRequest request) {
            return base.Channel.GetTopViolatedDLPRules(request);
        }
        
        public Encryptics.WebPortal.PortalService.TopViolatedDLPRulesReport GetTopViolatedDLPRules(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesRequest inValue = new Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopViolatedDLPRules(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetTopViolatedDLPRulesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetTopViolatedDLPRulesAsync(Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesRequest request) {
            return base.Channel.GetTopViolatedDLPRulesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesResponse> GetTopViolatedDLPRulesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> policy_set_id, Encryptics.WebPortal.PortalService.ReportParams report_params) {
            Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesRequest inValue = new Encryptics.WebPortal.PortalService.GetTopViolatedDLPRulesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.policy_set_id = policy_set_id;
            inValue.report_params = report_params;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetTopViolatedDLPRulesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUsageRightsGroupDetails(Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsRequest request) {
            return base.Channel.GetUsageRightsGroupDetails(request);
        }
        
        public Encryptics.WebPortal.PortalService.UsageRightsGroup GetUsageRightsGroupDetails(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUsageRightsGroupDetails(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUsageRightsGroupDetailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUsageRightsGroupDetailsAsync(Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsRequest request) {
            return base.Channel.GetUsageRightsGroupDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsResponse> GetUsageRightsGroupDetailsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetUsageRightsGroupDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUsageRightsGroupDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUsageRightsGroupsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUsageRightsGroups(Encryptics.WebPortal.PortalService.GetUsageRightsGroupsRequest request) {
            return base.Channel.GetUsageRightsGroups(request);
        }
        
        public Encryptics.WebPortal.PortalService.UsageRightsGroup[] GetUsageRightsGroups(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupsRequest inValue = new Encryptics.WebPortal.PortalService.GetUsageRightsGroupsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUsageRightsGroups(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUsageRightsGroupsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUsageRightsGroupsAsync(Encryptics.WebPortal.PortalService.GetUsageRightsGroupsRequest request) {
            return base.Channel.GetUsageRightsGroupsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupsResponse> GetUsageRightsGroupsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupsRequest inValue = new Encryptics.WebPortal.PortalService.GetUsageRightsGroupsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUsageRightsGroupsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUsageRightsGroupUsers(Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersRequest request) {
            return base.Channel.GetUsageRightsGroupUsers(request);
        }
        
        public Encryptics.WebPortal.PortalService.UsageRightsGroupUser[] GetUsageRightsGroupUsers(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersRequest inValue = new Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUsageRightsGroupUsers(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUsageRightsGroupUsersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUsageRightsGroupUsersAsync(Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersRequest request) {
            return base.Channel.GetUsageRightsGroupUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersResponse> GetUsageRightsGroupUsersAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersRequest inValue = new Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUsageRightsGroupUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUsageRightsGroupUsersArchived(Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedRequest request) {
            return base.Channel.GetUsageRightsGroupUsersArchived(request);
        }
        
        public Encryptics.WebPortal.PortalService.UsageRightsGroupUser[] GetUsageRightsGroupUsersArchived(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedRequest inValue = new Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUsageRightsGroupUsersArchived(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUsageRightsGroupUsersArchivedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUsageRightsGroupUsersArchivedAsync(Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedRequest request) {
            return base.Channel.GetUsageRightsGroupUsersArchivedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedResponse> GetUsageRightsGroupUsersArchivedAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id) {
            Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedRequest inValue = new Encryptics.WebPortal.PortalService.GetUsageRightsGroupUsersArchivedRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUsageRightsGroupUsersArchivedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserAuthorizedActionResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserAuthorizedAction(Encryptics.WebPortal.PortalService.GetUserAuthorizedActionRequest request) {
            return base.Channel.GetUserAuthorizedAction(request);
        }
        
        public bool GetUserAuthorizedAction(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string action) {
            Encryptics.WebPortal.PortalService.GetUserAuthorizedActionRequest inValue = new Encryptics.WebPortal.PortalService.GetUserAuthorizedActionRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.action = action;
            Encryptics.WebPortal.PortalService.GetUserAuthorizedActionResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserAuthorizedAction(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUserAuthorizedActionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserAuthorizedActionResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserAuthorizedActionAsync(Encryptics.WebPortal.PortalService.GetUserAuthorizedActionRequest request) {
            return base.Channel.GetUserAuthorizedActionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserAuthorizedActionResponse> GetUserAuthorizedActionAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string action) {
            Encryptics.WebPortal.PortalService.GetUserAuthorizedActionRequest inValue = new Encryptics.WebPortal.PortalService.GetUserAuthorizedActionRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.action = action;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserAuthorizedActionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserAuthorizedActions(Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsRequest request) {
            return base.Channel.GetUserAuthorizedActions(request);
        }
        
        public Encryptics.WebPortal.PortalService.AuthorizedAction[] GetUserAuthorizedActions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string[] actions) {
            Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsRequest inValue = new Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.actions = actions;
            Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserAuthorizedActions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUserAuthorizedActionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserAuthorizedActionsAsync(Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsRequest request) {
            return base.Channel.GetUserAuthorizedActionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsResponse> GetUserAuthorizedActionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, string[] actions) {
            Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsRequest inValue = new Encryptics.WebPortal.PortalService.GetUserAuthorizedActionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.actions = actions;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserAuthorizedActionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserCompaniesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserCompanies(Encryptics.WebPortal.PortalService.GetUserCompaniesRequest request) {
            return base.Channel.GetUserCompanies(request);
        }
        
        public Encryptics.WebPortal.PortalService.CompanyListItem[] GetUserCompanies(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long admin_entity_id, long admin_id, long user_id, Encryptics.WebPortal.PortalService.CompanyStatus company_status) {
            Encryptics.WebPortal.PortalService.GetUserCompaniesRequest inValue = new Encryptics.WebPortal.PortalService.GetUserCompaniesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.admin_entity_id = admin_entity_id;
            inValue.admin_id = admin_id;
            inValue.user_id = user_id;
            inValue.company_status = company_status;
            Encryptics.WebPortal.PortalService.GetUserCompaniesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserCompanies(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUserCompaniesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserCompaniesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserCompaniesAsync(Encryptics.WebPortal.PortalService.GetUserCompaniesRequest request) {
            return base.Channel.GetUserCompaniesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserCompaniesResponse> GetUserCompaniesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long admin_entity_id, long admin_id, long user_id, Encryptics.WebPortal.PortalService.CompanyStatus company_status) {
            Encryptics.WebPortal.PortalService.GetUserCompaniesRequest inValue = new Encryptics.WebPortal.PortalService.GetUserCompaniesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.admin_entity_id = admin_entity_id;
            inValue.admin_id = admin_id;
            inValue.user_id = user_id;
            inValue.company_status = company_status;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserCompaniesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserDecryptionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserDecryptions(Encryptics.WebPortal.PortalService.GetUserDecryptionsRequest request) {
            return base.Channel.GetUserDecryptions(request);
        }
        
        public Encryptics.WebPortal.PortalService.Decryption[] GetUserDecryptions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.EncryptionSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetUserDecryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetUserDecryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            Encryptics.WebPortal.PortalService.GetUserDecryptionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserDecryptions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUserDecryptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserDecryptionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserDecryptionsAsync(Encryptics.WebPortal.PortalService.GetUserDecryptionsRequest request) {
            return base.Channel.GetUserDecryptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserDecryptionsResponse> GetUserDecryptionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.EncryptionSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetUserDecryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetUserDecryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserDecryptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetAccountDetailsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccountDetails(Encryptics.WebPortal.PortalService.GetAccountDetailsRequest request) {
            return base.Channel.GetAccountDetails(request);
        }
        
        public Encryptics.WebPortal.PortalService.UserAccount GetAccountDetails(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.GetAccountDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetAccountDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.GetAccountDetailsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccountDetails(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetAccountDetailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountDetailsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetAccountDetailsAsync(Encryptics.WebPortal.PortalService.GetAccountDetailsRequest request) {
            return base.Channel.GetAccountDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetAccountDetailsResponse> GetAccountDetailsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.GetAccountDetailsRequest inValue = new Encryptics.WebPortal.PortalService.GetAccountDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetAccountDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserEncryptionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserEncryptions(Encryptics.WebPortal.PortalService.GetUserEncryptionsRequest request) {
            return base.Channel.GetUserEncryptions(request);
        }
        
        public Encryptics.WebPortal.PortalService.Encryption[] GetUserEncryptions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.EncryptionSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetUserEncryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetUserEncryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            Encryptics.WebPortal.PortalService.GetUserEncryptionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserEncryptions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUserEncryptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserEncryptionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserEncryptionsAsync(Encryptics.WebPortal.PortalService.GetUserEncryptionsRequest request) {
            return base.Channel.GetUserEncryptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserEncryptionsResponse> GetUserEncryptionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, Encryptics.WebPortal.PortalService.EncryptionSort sort_field, Encryptics.WebPortal.PortalService.OrderByDirection order_dir, int page_size, int page) {
            Encryptics.WebPortal.PortalService.GetUserEncryptionsRequest inValue = new Encryptics.WebPortal.PortalService.GetUserEncryptionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.sort_field = sort_field;
            inValue.order_dir = order_dir;
            inValue.page_size = page_size;
            inValue.page = page;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserEncryptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserEntityRolesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserEntityRoles(Encryptics.WebPortal.PortalService.GetUserEntityRolesRequest request) {
            return base.Channel.GetUserEntityRoles(request);
        }
        
        public Encryptics.WebPortal.PortalService.EntityRoleUser[] GetUserEntityRoles(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id, System.Nullable<long> entity_id) {
            Encryptics.WebPortal.PortalService.GetUserEntityRolesRequest inValue = new Encryptics.WebPortal.PortalService.GetUserEntityRolesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.user_id = user_id;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.GetUserEntityRolesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserEntityRoles(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUserEntityRolesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserEntityRolesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserEntityRolesAsync(Encryptics.WebPortal.PortalService.GetUserEntityRolesRequest request) {
            return base.Channel.GetUserEntityRolesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserEntityRolesResponse> GetUserEntityRolesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long user_id, System.Nullable<long> entity_id) {
            Encryptics.WebPortal.PortalService.GetUserEntityRolesRequest inValue = new Encryptics.WebPortal.PortalService.GetUserEntityRolesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.user_id = user_id;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserEntityRolesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserSecurityQuestionResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserSecurityQuestion(Encryptics.WebPortal.PortalService.GetUserSecurityQuestionRequest request) {
            return base.Channel.GetUserSecurityQuestion(request);
        }
        
        public Encryptics.WebPortal.PortalService.SecurityQuestion GetUserSecurityQuestion(string email, System.Nullable<int> question_number) {
            Encryptics.WebPortal.PortalService.GetUserSecurityQuestionRequest inValue = new Encryptics.WebPortal.PortalService.GetUserSecurityQuestionRequest();
            inValue.email = email;
            inValue.question_number = question_number;
            Encryptics.WebPortal.PortalService.GetUserSecurityQuestionResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserSecurityQuestion(inValue);
            return retVal.GetUserSecurityQuestionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserSecurityQuestionResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserSecurityQuestionAsync(Encryptics.WebPortal.PortalService.GetUserSecurityQuestionRequest request) {
            return base.Channel.GetUserSecurityQuestionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserSecurityQuestionResponse> GetUserSecurityQuestionAsync(string email, System.Nullable<int> question_number) {
            Encryptics.WebPortal.PortalService.GetUserSecurityQuestionRequest inValue = new Encryptics.WebPortal.PortalService.GetUserSecurityQuestionRequest();
            inValue.email = email;
            inValue.question_number = question_number;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserSecurityQuestionAsync(inValue);
        }
        
        public Encryptics.WebPortal.PortalService.SecurityQuestion[] GetUserSecurityQuestions(string email) {
            return base.Channel.GetUserSecurityQuestions(email);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.SecurityQuestion[]> GetUserSecurityQuestionsAsync(string email) {
            return base.Channel.GetUserSecurityQuestionsAsync(email);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserUsageRightsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserUsageRights(Encryptics.WebPortal.PortalService.GetUserUsageRightsRequest request) {
            return base.Channel.GetUserUsageRights(request);
        }
        
        public Encryptics.WebPortal.PortalService.UserUsageRights GetUserUsageRights(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.GetUserUsageRightsRequest inValue = new Encryptics.WebPortal.PortalService.GetUserUsageRightsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.GetUserUsageRightsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserUsageRights(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUserUsageRightsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserUsageRightsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserUsageRightsAsync(Encryptics.WebPortal.PortalService.GetUserUsageRightsRequest request) {
            return base.Channel.GetUserUsageRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserUsageRightsResponse> GetUserUsageRightsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.GetUserUsageRightsRequest inValue = new Encryptics.WebPortal.PortalService.GetUserUsageRightsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserUsageRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserUsageSummaryByMonth(Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthRequest request) {
            return base.Channel.GetUserUsageSummaryByMonth(request);
        }
        
        public Encryptics.WebPortal.PortalService.UsageSummary[] GetUserUsageSummaryByMonth(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthRequest inValue = new Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserUsageSummaryByMonth(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.GetUserUsageSummaryByMonthResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.GetUserUsageSummaryByMonthAsync(Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthRequest request) {
            return base.Channel.GetUserUsageSummaryByMonthAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthResponse> GetUserUsageSummaryByMonthAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthRequest inValue = new Encryptics.WebPortal.PortalService.GetUserUsageSummaryByMonthRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).GetUserUsageSummaryByMonthAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertAccessGroupResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertAccessGroup(Encryptics.WebPortal.PortalService.InsertAccessGroupRequest request) {
            return base.Channel.InsertAccessGroup(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertAccessGroupResult InsertAccessGroup(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<long> user_id, string name, bool is_active) {
            Encryptics.WebPortal.PortalService.InsertAccessGroupRequest inValue = new Encryptics.WebPortal.PortalService.InsertAccessGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.name = name;
            inValue.is_active = is_active;
            Encryptics.WebPortal.PortalService.InsertAccessGroupResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertAccessGroup(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertAccessGroupResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertAccessGroupResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertAccessGroupAsync(Encryptics.WebPortal.PortalService.InsertAccessGroupRequest request) {
            return base.Channel.InsertAccessGroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertAccessGroupResponse> InsertAccessGroupAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, System.Nullable<long> entity_id, System.Nullable<long> user_id, string name, bool is_active) {
            Encryptics.WebPortal.PortalService.InsertAccessGroupRequest inValue = new Encryptics.WebPortal.PortalService.InsertAccessGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.name = name;
            inValue.is_active = is_active;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertAccessGroupAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertAccessGroupUserResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertAccessGroupUser(Encryptics.WebPortal.PortalService.InsertAccessGroupUserRequest request) {
            return base.Channel.InsertAccessGroupUser(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertAccessGroupUserResult InsertAccessGroupUser(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, string user_name) {
            Encryptics.WebPortal.PortalService.InsertAccessGroupUserRequest inValue = new Encryptics.WebPortal.PortalService.InsertAccessGroupUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.user_name = user_name;
            Encryptics.WebPortal.PortalService.InsertAccessGroupUserResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertAccessGroupUser(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertAccessGroupUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertAccessGroupUserResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertAccessGroupUserAsync(Encryptics.WebPortal.PortalService.InsertAccessGroupUserRequest request) {
            return base.Channel.InsertAccessGroupUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertAccessGroupUserResponse> InsertAccessGroupUserAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, string user_name) {
            Encryptics.WebPortal.PortalService.InsertAccessGroupUserRequest inValue = new Encryptics.WebPortal.PortalService.InsertAccessGroupUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.user_name = user_name;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertAccessGroupUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertCompanyResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertCompany(Encryptics.WebPortal.PortalService.InsertCompanyRequest request) {
            return base.Channel.InsertCompany(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertCompanyResult InsertCompany(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string name, Encryptics.WebPortal.PortalService.CompanyType company_type, string address1, string address2, string city, string state, string zip_code, string contact1, string contact1_phone_number, string contact2, string contact2_phone_number, bool use_global_expiration_date, System.Nullable<System.DateTime> global_expiration_date) {
            Encryptics.WebPortal.PortalService.InsertCompanyRequest inValue = new Encryptics.WebPortal.PortalService.InsertCompanyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.name = name;
            inValue.company_type = company_type;
            inValue.address1 = address1;
            inValue.address2 = address2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip_code = zip_code;
            inValue.contact1 = contact1;
            inValue.contact1_phone_number = contact1_phone_number;
            inValue.contact2 = contact2;
            inValue.contact2_phone_number = contact2_phone_number;
            inValue.use_global_expiration_date = use_global_expiration_date;
            inValue.global_expiration_date = global_expiration_date;
            Encryptics.WebPortal.PortalService.InsertCompanyResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertCompany(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertCompanyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertCompanyAsync(Encryptics.WebPortal.PortalService.InsertCompanyRequest request) {
            return base.Channel.InsertCompanyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyResponse> InsertCompanyAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string name, Encryptics.WebPortal.PortalService.CompanyType company_type, string address1, string address2, string city, string state, string zip_code, string contact1, string contact1_phone_number, string contact2, string contact2_phone_number, bool use_global_expiration_date, System.Nullable<System.DateTime> global_expiration_date) {
            Encryptics.WebPortal.PortalService.InsertCompanyRequest inValue = new Encryptics.WebPortal.PortalService.InsertCompanyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.name = name;
            inValue.company_type = company_type;
            inValue.address1 = address1;
            inValue.address2 = address2;
            inValue.city = city;
            inValue.state = state;
            inValue.zip_code = zip_code;
            inValue.contact1 = contact1;
            inValue.contact1_phone_number = contact1_phone_number;
            inValue.contact2 = contact2;
            inValue.contact2_phone_number = contact2_phone_number;
            inValue.use_global_expiration_date = use_global_expiration_date;
            inValue.global_expiration_date = global_expiration_date;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertCompanyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertCompanyDLPTerm(Encryptics.WebPortal.PortalService.InsertCompanyDLPTermRequest request) {
            return base.Channel.InsertCompanyDLPTerm(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResult InsertCompanyDLPTerm(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string term, bool is_regex) {
            Encryptics.WebPortal.PortalService.InsertCompanyDLPTermRequest inValue = new Encryptics.WebPortal.PortalService.InsertCompanyDLPTermRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.term = term;
            inValue.is_regex = is_regex;
            Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertCompanyDLPTerm(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertCompanyDLPTermResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertCompanyDLPTermAsync(Encryptics.WebPortal.PortalService.InsertCompanyDLPTermRequest request) {
            return base.Channel.InsertCompanyDLPTermAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyDLPTermResponse> InsertCompanyDLPTermAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string term, bool is_regex) {
            Encryptics.WebPortal.PortalService.InsertCompanyDLPTermRequest inValue = new Encryptics.WebPortal.PortalService.InsertCompanyDLPTermRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.term = term;
            inValue.is_regex = is_regex;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertCompanyDLPTermAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertCompanyDomainResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertCompanyDomain(Encryptics.WebPortal.PortalService.InsertCompanyDomainRequest request) {
            return base.Channel.InsertCompanyDomain(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertCompanyDomainResult InsertCompanyDomain(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string domain) {
            Encryptics.WebPortal.PortalService.InsertCompanyDomainRequest inValue = new Encryptics.WebPortal.PortalService.InsertCompanyDomainRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.domain = domain;
            Encryptics.WebPortal.PortalService.InsertCompanyDomainResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertCompanyDomain(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertCompanyDomainResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyDomainResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertCompanyDomainAsync(Encryptics.WebPortal.PortalService.InsertCompanyDomainRequest request) {
            return base.Channel.InsertCompanyDomainAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertCompanyDomainResponse> InsertCompanyDomainAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string domain) {
            Encryptics.WebPortal.PortalService.InsertCompanyDomainRequest inValue = new Encryptics.WebPortal.PortalService.InsertCompanyDomainRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.domain = domain;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertCompanyDomainAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertDLPPublicationResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertDLPPublication(Encryptics.WebPortal.PortalService.InsertDLPPublicationRequest request) {
            return base.Channel.InsertDLPPublication(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertDLPPublicationResult InsertDLPPublication(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.InsertDLPPublicationRequest inValue = new Encryptics.WebPortal.PortalService.InsertDLPPublicationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.InsertDLPPublicationResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertDLPPublication(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertDLPPublicationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertDLPPublicationResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertDLPPublicationAsync(Encryptics.WebPortal.PortalService.InsertDLPPublicationRequest request) {
            return base.Channel.InsertDLPPublicationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertDLPPublicationResponse> InsertDLPPublicationAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.InsertDLPPublicationRequest inValue = new Encryptics.WebPortal.PortalService.InsertDLPPublicationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertDLPPublicationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertDLPRuleResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertDLPRule(Encryptics.WebPortal.PortalService.InsertDLPRuleRequest request) {
            return base.Channel.InsertDLPRule(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertDLPRuleResult InsertDLPRule(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DLPRule new_rule) {
            Encryptics.WebPortal.PortalService.InsertDLPRuleRequest inValue = new Encryptics.WebPortal.PortalService.InsertDLPRuleRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.new_rule = new_rule;
            Encryptics.WebPortal.PortalService.InsertDLPRuleResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertDLPRule(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertDLPRuleResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertDLPRuleResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertDLPRuleAsync(Encryptics.WebPortal.PortalService.InsertDLPRuleRequest request) {
            return base.Channel.InsertDLPRuleAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertDLPRuleResponse> InsertDLPRuleAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DLPRule new_rule) {
            Encryptics.WebPortal.PortalService.InsertDLPRuleRequest inValue = new Encryptics.WebPortal.PortalService.InsertDLPRuleRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.new_rule = new_rule;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertDLPRuleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertEntityRoleUserResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertEntityRoleUser(Encryptics.WebPortal.PortalService.InsertEntityRoleUserRequest request) {
            return base.Channel.InsertEntityRoleUser(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertEntityRoleUserResult InsertEntityRoleUser(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> role_id, long user_id) {
            Encryptics.WebPortal.PortalService.InsertEntityRoleUserRequest inValue = new Encryptics.WebPortal.PortalService.InsertEntityRoleUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.role_id = role_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.InsertEntityRoleUserResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertEntityRoleUser(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertEntityRoleUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertEntityRoleUserResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertEntityRoleUserAsync(Encryptics.WebPortal.PortalService.InsertEntityRoleUserRequest request) {
            return base.Channel.InsertEntityRoleUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertEntityRoleUserResponse> InsertEntityRoleUserAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, System.Nullable<long> role_id, long user_id) {
            Encryptics.WebPortal.PortalService.InsertEntityRoleUserRequest inValue = new Encryptics.WebPortal.PortalService.InsertEntityRoleUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.role_id = role_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertEntityRoleUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertEntityRoleUsers(Encryptics.WebPortal.PortalService.InsertEntityRoleUsersRequest request) {
            return base.Channel.InsertEntityRoleUsers(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResult InsertEntityRoleUsers(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.EntityRoleUser[] role_users) {
            Encryptics.WebPortal.PortalService.InsertEntityRoleUsersRequest inValue = new Encryptics.WebPortal.PortalService.InsertEntityRoleUsersRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.role_users = role_users;
            Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertEntityRoleUsers(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertEntityRoleUsersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertEntityRoleUsersAsync(Encryptics.WebPortal.PortalService.InsertEntityRoleUsersRequest request) {
            return base.Channel.InsertEntityRoleUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertEntityRoleUsersResponse> InsertEntityRoleUsersAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.EntityRoleUser[] role_users) {
            Encryptics.WebPortal.PortalService.InsertEntityRoleUsersRequest inValue = new Encryptics.WebPortal.PortalService.InsertEntityRoleUsersRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.role_users = role_users;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertEntityRoleUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertGWPublicationResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertGWPublication(Encryptics.WebPortal.PortalService.InsertGWPublicationRequest request) {
            return base.Channel.InsertGWPublication(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertGWPublicationResult InsertGWPublication(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.InsertGWPublicationRequest inValue = new Encryptics.WebPortal.PortalService.InsertGWPublicationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            Encryptics.WebPortal.PortalService.InsertGWPublicationResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertGWPublication(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertGWPublicationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertGWPublicationResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertGWPublicationAsync(Encryptics.WebPortal.PortalService.InsertGWPublicationRequest request) {
            return base.Channel.InsertGWPublicationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertGWPublicationResponse> InsertGWPublicationAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id) {
            Encryptics.WebPortal.PortalService.InsertGWPublicationRequest inValue = new Encryptics.WebPortal.PortalService.InsertGWPublicationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertGWPublicationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertImportUsersRequestResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertImportUsersRequest(Encryptics.WebPortal.PortalService.InsertImportUsersRequestRequest request) {
            return base.Channel.InsertImportUsersRequest(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertImportUsersRequestResult InsertImportUsersRequest(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ImportUsersRequest import_request) {
            Encryptics.WebPortal.PortalService.InsertImportUsersRequestRequest inValue = new Encryptics.WebPortal.PortalService.InsertImportUsersRequestRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.import_request = import_request;
            Encryptics.WebPortal.PortalService.InsertImportUsersRequestResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertImportUsersRequest(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertImportUsersRequestResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertImportUsersRequestResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertImportUsersRequestAsync(Encryptics.WebPortal.PortalService.InsertImportUsersRequestRequest request) {
            return base.Channel.InsertImportUsersRequestAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertImportUsersRequestResponse> InsertImportUsersRequestAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.ImportUsersRequest import_request) {
            Encryptics.WebPortal.PortalService.InsertImportUsersRequestRequest inValue = new Encryptics.WebPortal.PortalService.InsertImportUsersRequestRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.import_request = import_request;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertImportUsersRequestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertLicenseTransferResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertLicenseTransfer(Encryptics.WebPortal.PortalService.InsertLicenseTransferRequest request) {
            return base.Channel.InsertLicenseTransfer(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertLicenseTransferResult InsertLicenseTransfer(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long from_entity_id, Encryptics.WebPortal.PortalService.LicensePoolType from_pool, long to_entity_id, Encryptics.WebPortal.PortalService.LicensePoolType to_pool, int amount, System.Nullable<System.DateTime> use_by_date) {
            Encryptics.WebPortal.PortalService.InsertLicenseTransferRequest inValue = new Encryptics.WebPortal.PortalService.InsertLicenseTransferRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.from_entity_id = from_entity_id;
            inValue.from_pool = from_pool;
            inValue.to_entity_id = to_entity_id;
            inValue.to_pool = to_pool;
            inValue.amount = amount;
            inValue.use_by_date = use_by_date;
            Encryptics.WebPortal.PortalService.InsertLicenseTransferResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertLicenseTransfer(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertLicenseTransferResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertLicenseTransferResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertLicenseTransferAsync(Encryptics.WebPortal.PortalService.InsertLicenseTransferRequest request) {
            return base.Channel.InsertLicenseTransferAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertLicenseTransferResponse> InsertLicenseTransferAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long from_entity_id, Encryptics.WebPortal.PortalService.LicensePoolType from_pool, long to_entity_id, Encryptics.WebPortal.PortalService.LicensePoolType to_pool, int amount, System.Nullable<System.DateTime> use_by_date) {
            Encryptics.WebPortal.PortalService.InsertLicenseTransferRequest inValue = new Encryptics.WebPortal.PortalService.InsertLicenseTransferRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.from_entity_id = from_entity_id;
            inValue.from_pool = from_pool;
            inValue.to_entity_id = to_entity_id;
            inValue.to_pool = to_pool;
            inValue.amount = amount;
            inValue.use_by_date = use_by_date;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertLicenseTransferAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertRequestUserTransferResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertRequestUserTransfer(Encryptics.WebPortal.PortalService.InsertRequestUserTransferRequest request) {
            return base.Channel.InsertRequestUserTransfer(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertRequestUserTransferResult InsertRequestUserTransfer(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long to_entity_id, string account_name) {
            Encryptics.WebPortal.PortalService.InsertRequestUserTransferRequest inValue = new Encryptics.WebPortal.PortalService.InsertRequestUserTransferRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.to_entity_id = to_entity_id;
            inValue.account_name = account_name;
            Encryptics.WebPortal.PortalService.InsertRequestUserTransferResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertRequestUserTransfer(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertRequestUserTransferResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertRequestUserTransferResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertRequestUserTransferAsync(Encryptics.WebPortal.PortalService.InsertRequestUserTransferRequest request) {
            return base.Channel.InsertRequestUserTransferAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertRequestUserTransferResponse> InsertRequestUserTransferAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long to_entity_id, string account_name) {
            Encryptics.WebPortal.PortalService.InsertRequestUserTransferRequest inValue = new Encryptics.WebPortal.PortalService.InsertRequestUserTransferRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.to_entity_id = to_entity_id;
            inValue.account_name = account_name;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertRequestUserTransferAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertResetPasswordRequestResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertResetPasswordRequest(Encryptics.WebPortal.PortalService.InsertResetPasswordRequestRequest request) {
            return base.Channel.InsertResetPasswordRequest(request);
        }
        
        public bool InsertResetPasswordRequest(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string email_address, Encryptics.WebPortal.PortalService.OriginSite origin_site) {
            Encryptics.WebPortal.PortalService.InsertResetPasswordRequestRequest inValue = new Encryptics.WebPortal.PortalService.InsertResetPasswordRequestRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.email_address = email_address;
            inValue.origin_site = origin_site;
            Encryptics.WebPortal.PortalService.InsertResetPasswordRequestResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertResetPasswordRequest(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertResetPasswordRequestResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertResetPasswordRequestResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertResetPasswordRequestAsync(Encryptics.WebPortal.PortalService.InsertResetPasswordRequestRequest request) {
            return base.Channel.InsertResetPasswordRequestAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertResetPasswordRequestResponse> InsertResetPasswordRequestAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string email_address, Encryptics.WebPortal.PortalService.OriginSite origin_site) {
            Encryptics.WebPortal.PortalService.InsertResetPasswordRequestRequest inValue = new Encryptics.WebPortal.PortalService.InsertResetPasswordRequestRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.email_address = email_address;
            inValue.origin_site = origin_site;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertResetPasswordRequestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertServerKeyResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertServerKey(Encryptics.WebPortal.PortalService.InsertServerKeyRequest request) {
            return base.Channel.InsertServerKey(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertServerKeysResult InsertServerKey(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RollKeyType roll_key_type) {
            Encryptics.WebPortal.PortalService.InsertServerKeyRequest inValue = new Encryptics.WebPortal.PortalService.InsertServerKeyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.roll_key_type = roll_key_type;
            Encryptics.WebPortal.PortalService.InsertServerKeyResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertServerKey(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertServerKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertServerKeyResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertServerKeyAsync(Encryptics.WebPortal.PortalService.InsertServerKeyRequest request) {
            return base.Channel.InsertServerKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertServerKeyResponse> InsertServerKeyAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.RollKeyType roll_key_type) {
            Encryptics.WebPortal.PortalService.InsertServerKeyRequest inValue = new Encryptics.WebPortal.PortalService.InsertServerKeyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.roll_key_type = roll_key_type;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertServerKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertSoftwareRelease(Encryptics.WebPortal.PortalService.InsertSoftwareReleaseRequest request) {
            return base.Channel.InsertSoftwareRelease(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResult InsertSoftwareRelease(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.SoftwareRelease software_release) {
            Encryptics.WebPortal.PortalService.InsertSoftwareReleaseRequest inValue = new Encryptics.WebPortal.PortalService.InsertSoftwareReleaseRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.software_release = software_release;
            Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertSoftwareRelease(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertSoftwareReleaseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertSoftwareReleaseAsync(Encryptics.WebPortal.PortalService.InsertSoftwareReleaseRequest request) {
            return base.Channel.InsertSoftwareReleaseAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertSoftwareReleaseResponse> InsertSoftwareReleaseAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.SoftwareRelease software_release) {
            Encryptics.WebPortal.PortalService.InsertSoftwareReleaseRequest inValue = new Encryptics.WebPortal.PortalService.InsertSoftwareReleaseRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.software_release = software_release;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertSoftwareReleaseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUsageRightsGroup(Encryptics.WebPortal.PortalService.InsertUsageRightsGroupRequest request) {
            return base.Channel.InsertUsageRightsGroup(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResult InsertUsageRightsGroup(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.UsageRightsGroup usage_rights_group) {
            Encryptics.WebPortal.PortalService.InsertUsageRightsGroupRequest inValue = new Encryptics.WebPortal.PortalService.InsertUsageRightsGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.usage_rights_group = usage_rights_group;
            Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUsageRightsGroup(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertUsageRightsGroupResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.InsertUsageRightsGroupRequest request) {
            return base.Channel.InsertUsageRightsGroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsageRightsGroupResponse> InsertUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.UsageRightsGroup usage_rights_group) {
            Encryptics.WebPortal.PortalService.InsertUsageRightsGroupRequest inValue = new Encryptics.WebPortal.PortalService.InsertUsageRightsGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.usage_rights_group = usage_rights_group;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUsageRightsGroupAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUsageRightsGroupUser(Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserRequest request) {
            return base.Channel.InsertUsageRightsGroupUser(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResult InsertUsageRightsGroupUser(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, long user_id) {
            Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserRequest inValue = new Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUsageRightsGroupUser(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertUsageRightsGroupUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUsageRightsGroupUserAsync(Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserRequest request) {
            return base.Channel.InsertUsageRightsGroupUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserResponse> InsertUsageRightsGroupUserAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, long user_id) {
            Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserRequest inValue = new Encryptics.WebPortal.PortalService.InsertUsageRightsGroupUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUsageRightsGroupUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertUserResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUser(Encryptics.WebPortal.PortalService.InsertUserRequest request) {
            return base.Channel.InsertUser(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertUserResult InsertUser(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string email_address, string password, string first_name, string last_name, string company, string country, string type, string phone_number, bool software_installed_by_admin, bool assign_license) {
            Encryptics.WebPortal.PortalService.InsertUserRequest inValue = new Encryptics.WebPortal.PortalService.InsertUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.email_address = email_address;
            inValue.password = password;
            inValue.first_name = first_name;
            inValue.last_name = last_name;
            inValue.company = company;
            inValue.country = country;
            inValue.type = type;
            inValue.phone_number = phone_number;
            inValue.software_installed_by_admin = software_installed_by_admin;
            inValue.assign_license = assign_license;
            Encryptics.WebPortal.PortalService.InsertUserResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUser(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUserAsync(Encryptics.WebPortal.PortalService.InsertUserRequest request) {
            return base.Channel.InsertUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserResponse> InsertUserAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string email_address, string password, string first_name, string last_name, string company, string country, string type, string phone_number, bool software_installed_by_admin, bool assign_license) {
            Encryptics.WebPortal.PortalService.InsertUserRequest inValue = new Encryptics.WebPortal.PortalService.InsertUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.email_address = email_address;
            inValue.password = password;
            inValue.first_name = first_name;
            inValue.last_name = last_name;
            inValue.company = company;
            inValue.country = country;
            inValue.type = type;
            inValue.phone_number = phone_number;
            inValue.software_installed_by_admin = software_installed_by_admin;
            inValue.assign_license = assign_license;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUserAdminCompanies(Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesRequest request) {
            return base.Channel.InsertUserAdminCompanies(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesStatus InsertUserAdminCompanies(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long[] companies) {
            Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesRequest inValue = new Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.companies = companies;
            Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUserAdminCompanies(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertUserAdminCompaniesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUserAdminCompaniesAsync(Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesRequest request) {
            return base.Channel.InsertUserAdminCompaniesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesResponse> InsertUserAdminCompaniesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long[] companies) {
            Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesRequest inValue = new Encryptics.WebPortal.PortalService.InsertUserAdminCompaniesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.companies = companies;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUserAdminCompaniesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertUsersByBulkResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUsersByBulk(Encryptics.WebPortal.PortalService.InsertUsersByBulkRequest request) {
            return base.Channel.InsertUsersByBulk(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertUsersByBulkResult InsertUsersByBulk(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string user_list, bool software_installed_by_admin) {
            Encryptics.WebPortal.PortalService.InsertUsersByBulkRequest inValue = new Encryptics.WebPortal.PortalService.InsertUsersByBulkRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_list = user_list;
            inValue.software_installed_by_admin = software_installed_by_admin;
            Encryptics.WebPortal.PortalService.InsertUsersByBulkResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUsersByBulk(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertUsersByBulkResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsersByBulkResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUsersByBulkAsync(Encryptics.WebPortal.PortalService.InsertUsersByBulkRequest request) {
            return base.Channel.InsertUsersByBulkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUsersByBulkResponse> InsertUsersByBulkAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string user_list, bool software_installed_by_admin) {
            Encryptics.WebPortal.PortalService.InsertUsersByBulkRequest inValue = new Encryptics.WebPortal.PortalService.InsertUsersByBulkRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_list = user_list;
            inValue.software_installed_by_admin = software_installed_by_admin;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUsersByBulkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertUserLicenseResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUserLicense(Encryptics.WebPortal.PortalService.InsertUserLicenseRequest request) {
            return base.Channel.InsertUserLicense(request);
        }
        
        public Encryptics.WebPortal.PortalService.InsertUserLicenseResult InsertUserLicense(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.InsertUserLicenseRequest inValue = new Encryptics.WebPortal.PortalService.InsertUserLicenseRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.InsertUserLicenseResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUserLicense(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertUserLicenseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserLicenseResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUserLicenseAsync(Encryptics.WebPortal.PortalService.InsertUserLicenseRequest request) {
            return base.Channel.InsertUserLicenseAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserLicenseResponse> InsertUserLicenseAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.InsertUserLicenseRequest inValue = new Encryptics.WebPortal.PortalService.InsertUserLicenseRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUserLicenseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUserSecurityQuestions(Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsRequest request) {
            return base.Channel.InsertUserSecurityQuestions(request);
        }
        
        public bool InsertUserSecurityQuestions(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string email, Encryptics.WebPortal.PortalService.SecurityQuestion[] questions) {
            Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsRequest inValue = new Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.email = email;
            inValue.questions = questions;
            Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUserSecurityQuestions(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.InsertUserSecurityQuestionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.InsertUserSecurityQuestionsAsync(Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsRequest request) {
            return base.Channel.InsertUserSecurityQuestionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsResponse> InsertUserSecurityQuestionsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string email, Encryptics.WebPortal.PortalService.SecurityQuestion[] questions) {
            Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsRequest inValue = new Encryptics.WebPortal.PortalService.InsertUserSecurityQuestionsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.email = email;
            inValue.questions = questions;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).InsertUserSecurityQuestionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.LogDebugRecordResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.LogDebugRecord(Encryptics.WebPortal.PortalService.LogDebugRecordRequest request) {
            return base.Channel.LogDebugRecord(request);
        }
        
        public bool LogDebugRecord(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string class_info, string method_info, string log_info) {
            Encryptics.WebPortal.PortalService.LogDebugRecordRequest inValue = new Encryptics.WebPortal.PortalService.LogDebugRecordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.class_info = class_info;
            inValue.method_info = method_info;
            inValue.log_info = log_info;
            Encryptics.WebPortal.PortalService.LogDebugRecordResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).LogDebugRecord(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.LogDebugRecordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.LogDebugRecordResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.LogDebugRecordAsync(Encryptics.WebPortal.PortalService.LogDebugRecordRequest request) {
            return base.Channel.LogDebugRecordAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.LogDebugRecordResponse> LogDebugRecordAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, string class_info, string method_info, string log_info) {
            Encryptics.WebPortal.PortalService.LogDebugRecordRequest inValue = new Encryptics.WebPortal.PortalService.LogDebugRecordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.class_info = class_info;
            inValue.method_info = method_info;
            inValue.log_info = log_info;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).LogDebugRecordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveAccessGroupUser(Encryptics.WebPortal.PortalService.RemoveAccessGroupUserRequest request) {
            return base.Channel.RemoveAccessGroupUser(request);
        }
        
        public Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResult RemoveAccessGroupUser(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_user_id) {
            Encryptics.WebPortal.PortalService.RemoveAccessGroupUserRequest inValue = new Encryptics.WebPortal.PortalService.RemoveAccessGroupUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_user_id = group_user_id;
            Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveAccessGroupUser(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveAccessGroupUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveAccessGroupUserAsync(Encryptics.WebPortal.PortalService.RemoveAccessGroupUserRequest request) {
            return base.Channel.RemoveAccessGroupUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveAccessGroupUserResponse> RemoveAccessGroupUserAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_user_id) {
            Encryptics.WebPortal.PortalService.RemoveAccessGroupUserRequest inValue = new Encryptics.WebPortal.PortalService.RemoveAccessGroupUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_user_id = group_user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveAccessGroupUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveCompanyResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveCompany(Encryptics.WebPortal.PortalService.RemoveCompanyRequest request) {
            return base.Channel.RemoveCompany(request);
        }
        
        public Encryptics.WebPortal.PortalService.RemoveCompanyResult RemoveCompany(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string company_name) {
            Encryptics.WebPortal.PortalService.RemoveCompanyRequest inValue = new Encryptics.WebPortal.PortalService.RemoveCompanyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.company_name = company_name;
            Encryptics.WebPortal.PortalService.RemoveCompanyResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveCompany(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveCompanyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveCompanyAsync(Encryptics.WebPortal.PortalService.RemoveCompanyRequest request) {
            return base.Channel.RemoveCompanyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyResponse> RemoveCompanyAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string company_name) {
            Encryptics.WebPortal.PortalService.RemoveCompanyRequest inValue = new Encryptics.WebPortal.PortalService.RemoveCompanyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.company_name = company_name;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveCompanyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveCompanyDLPTerm(Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermRequest request) {
            return base.Channel.RemoveCompanyDLPTerm(request);
        }
        
        public Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResult RemoveCompanyDLPTerm(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long term_id) {
            Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermRequest inValue = new Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.term_id = term_id;
            Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveCompanyDLPTerm(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveCompanyDLPTermResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveCompanyDLPTermAsync(Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermRequest request) {
            return base.Channel.RemoveCompanyDLPTermAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermResponse> RemoveCompanyDLPTermAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long term_id) {
            Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermRequest inValue = new Encryptics.WebPortal.PortalService.RemoveCompanyDLPTermRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.term_id = term_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveCompanyDLPTermAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveCompanyDomainResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveCompanyDomain(Encryptics.WebPortal.PortalService.RemoveCompanyDomainRequest request) {
            return base.Channel.RemoveCompanyDomain(request);
        }
        
        public Encryptics.WebPortal.PortalService.RemoveCompanyDomainResult RemoveCompanyDomain(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long domain_id) {
            Encryptics.WebPortal.PortalService.RemoveCompanyDomainRequest inValue = new Encryptics.WebPortal.PortalService.RemoveCompanyDomainRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.domain_id = domain_id;
            Encryptics.WebPortal.PortalService.RemoveCompanyDomainResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveCompanyDomain(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveCompanyDomainResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyDomainResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveCompanyDomainAsync(Encryptics.WebPortal.PortalService.RemoveCompanyDomainRequest request) {
            return base.Channel.RemoveCompanyDomainAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveCompanyDomainResponse> RemoveCompanyDomainAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long domain_id) {
            Encryptics.WebPortal.PortalService.RemoveCompanyDomainRequest inValue = new Encryptics.WebPortal.PortalService.RemoveCompanyDomainRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.domain_id = domain_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveCompanyDomainAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveDLPRuleResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveDLPRule(Encryptics.WebPortal.PortalService.RemoveDLPRuleRequest request) {
            return base.Channel.RemoveDLPRule(request);
        }
        
        public Encryptics.WebPortal.PortalService.RemoveDLPRuleResult RemoveDLPRule(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long entity_rule_id) {
            Encryptics.WebPortal.PortalService.RemoveDLPRuleRequest inValue = new Encryptics.WebPortal.PortalService.RemoveDLPRuleRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.entity_rule_id = entity_rule_id;
            Encryptics.WebPortal.PortalService.RemoveDLPRuleResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveDLPRule(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveDLPRuleResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveDLPRuleResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveDLPRuleAsync(Encryptics.WebPortal.PortalService.RemoveDLPRuleRequest request) {
            return base.Channel.RemoveDLPRuleAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveDLPRuleResponse> RemoveDLPRuleAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long entity_rule_id) {
            Encryptics.WebPortal.PortalService.RemoveDLPRuleRequest inValue = new Encryptics.WebPortal.PortalService.RemoveDLPRuleRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.entity_rule_id = entity_rule_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveDLPRuleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemovePendingAccountResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemovePendingAccount(Encryptics.WebPortal.PortalService.RemovePendingAccountRequest request) {
            return base.Channel.RemovePendingAccount(request);
        }
        
        public bool RemovePendingAccount(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long pending_id) {
            Encryptics.WebPortal.PortalService.RemovePendingAccountRequest inValue = new Encryptics.WebPortal.PortalService.RemovePendingAccountRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.pending_id = pending_id;
            Encryptics.WebPortal.PortalService.RemovePendingAccountResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemovePendingAccount(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemovePendingAccountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemovePendingAccountResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemovePendingAccountAsync(Encryptics.WebPortal.PortalService.RemovePendingAccountRequest request) {
            return base.Channel.RemovePendingAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemovePendingAccountResponse> RemovePendingAccountAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long pending_id) {
            Encryptics.WebPortal.PortalService.RemovePendingAccountRequest inValue = new Encryptics.WebPortal.PortalService.RemovePendingAccountRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.pending_id = pending_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemovePendingAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUsageRightsGroup(Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupRequest request) {
            return base.Channel.RemoveUsageRightsGroup(request);
        }
        
        public Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResult RemoveUsageRightsGroup(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long usage_rights_group_id) {
            Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.usage_rights_group_id = usage_rights_group_id;
            Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUsageRightsGroup(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveUsageRightsGroupResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupRequest request) {
            return base.Channel.RemoveUsageRightsGroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupResponse> RemoveUsageRightsGroupAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long usage_rights_group_id) {
            Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.usage_rights_group_id = usage_rights_group_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUsageRightsGroupAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUsageRightsGroupUser(Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserRequest request) {
            return base.Channel.RemoveUsageRightsGroupUser(request);
        }
        
        public Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResult RemoveUsageRightsGroupUser(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long usage_rights_group_user_id) {
            Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.usage_rights_group_user_id = usage_rights_group_user_id;
            Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUsageRightsGroupUser(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveUsageRightsGroupUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUsageRightsGroupUserAsync(Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserRequest request) {
            return base.Channel.RemoveUsageRightsGroupUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserResponse> RemoveUsageRightsGroupUserAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long usage_rights_group_user_id) {
            Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUsageRightsGroupUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.usage_rights_group_user_id = usage_rights_group_user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUsageRightsGroupUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveUserResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUser(Encryptics.WebPortal.PortalService.RemoveUserRequest request) {
            return base.Channel.RemoveUser(request);
        }
        
        public bool RemoveUser(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.RemoveUserRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.RemoveUserResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUser(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUserAsync(Encryptics.WebPortal.PortalService.RemoveUserRequest request) {
            return base.Channel.RemoveUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserResponse> RemoveUserAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.RemoveUserRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUserRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUserAdminCompanies(Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesRequest request) {
            return base.Channel.RemoveUserAdminCompanies(request);
        }
        
        public Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesStatus RemoveUserAdminCompanies(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long[] companies) {
            Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.companies = companies;
            Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUserAdminCompanies(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveUserAdminCompaniesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUserAdminCompaniesAsync(Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesRequest request) {
            return base.Channel.RemoveUserAdminCompaniesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesResponse> RemoveUserAdminCompaniesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long[] companies) {
            Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUserAdminCompaniesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.companies = companies;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUserAdminCompaniesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveUserDeviceResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUserDevice(Encryptics.WebPortal.PortalService.RemoveUserDeviceRequest request) {
            return base.Channel.RemoveUserDevice(request);
        }
        
        public bool RemoveUserDevice(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long device_id) {
            Encryptics.WebPortal.PortalService.RemoveUserDeviceRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUserDeviceRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.device_id = device_id;
            Encryptics.WebPortal.PortalService.RemoveUserDeviceResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUserDevice(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveUserDeviceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserDeviceResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUserDeviceAsync(Encryptics.WebPortal.PortalService.RemoveUserDeviceRequest request) {
            return base.Channel.RemoveUserDeviceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserDeviceResponse> RemoveUserDeviceAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id, long device_id) {
            Encryptics.WebPortal.PortalService.RemoveUserDeviceRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUserDeviceRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            inValue.device_id = device_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUserDeviceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.RemoveUserLicensesResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUserLicenses(Encryptics.WebPortal.PortalService.RemoveUserLicensesRequest request) {
            return base.Channel.RemoveUserLicenses(request);
        }
        
        public bool RemoveUserLicenses(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.RemoveUserLicensesRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUserLicensesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            Encryptics.WebPortal.PortalService.RemoveUserLicensesResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUserLicenses(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.RemoveUserLicensesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserLicensesResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.RemoveUserLicensesAsync(Encryptics.WebPortal.PortalService.RemoveUserLicensesRequest request) {
            return base.Channel.RemoveUserLicensesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.RemoveUserLicensesResponse> RemoveUserLicensesAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long user_id) {
            Encryptics.WebPortal.PortalService.RemoveUserLicensesRequest inValue = new Encryptics.WebPortal.PortalService.RemoveUserLicensesRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.user_id = user_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).RemoveUserLicensesAsync(inValue);
        }
        
        public bool ResendActivation(string account_name) {
            return base.Channel.ResendActivation(account_name);
        }
        
        public System.Threading.Tasks.Task<bool> ResendActivationAsync(string account_name) {
            return base.Channel.ResendActivationAsync(account_name);
        }
        
        public bool ResendDeviceActivation(string account_name, string hwid) {
            return base.Channel.ResendDeviceActivation(account_name, hwid);
        }
        
        public System.Threading.Tasks.Task<bool> ResendDeviceActivationAsync(string account_name, string hwid) {
            return base.Channel.ResendDeviceActivationAsync(account_name, hwid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.ResendRequestUserTransferResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.ResendRequestUserTransfer(Encryptics.WebPortal.PortalService.ResendRequestUserTransferRequest request) {
            return base.Channel.ResendRequestUserTransfer(request);
        }
        
        public bool ResendRequestUserTransfer(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long request_id) {
            Encryptics.WebPortal.PortalService.ResendRequestUserTransferRequest inValue = new Encryptics.WebPortal.PortalService.ResendRequestUserTransferRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.request_id = request_id;
            Encryptics.WebPortal.PortalService.ResendRequestUserTransferResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).ResendRequestUserTransfer(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.ResendRequestUserTransferResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ResendRequestUserTransferResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.ResendRequestUserTransferAsync(Encryptics.WebPortal.PortalService.ResendRequestUserTransferRequest request) {
            return base.Channel.ResendRequestUserTransferAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.ResendRequestUserTransferResponse> ResendRequestUserTransferAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long request_id) {
            Encryptics.WebPortal.PortalService.ResendRequestUserTransferRequest inValue = new Encryptics.WebPortal.PortalService.ResendRequestUserTransferRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.request_id = request_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).ResendRequestUserTransferAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateAccessGroupResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateAccessGroup(Encryptics.WebPortal.PortalService.UpdateAccessGroupRequest request) {
            return base.Channel.UpdateAccessGroup(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateAccessGroupResult UpdateAccessGroup(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, string name, System.Nullable<bool> is_active) {
            Encryptics.WebPortal.PortalService.UpdateAccessGroupRequest inValue = new Encryptics.WebPortal.PortalService.UpdateAccessGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.name = name;
            inValue.is_active = is_active;
            Encryptics.WebPortal.PortalService.UpdateAccessGroupResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateAccessGroup(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateAccessGroupResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateAccessGroupResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateAccessGroupAsync(Encryptics.WebPortal.PortalService.UpdateAccessGroupRequest request) {
            return base.Channel.UpdateAccessGroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateAccessGroupResponse> UpdateAccessGroupAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long group_id, string name, System.Nullable<bool> is_active) {
            Encryptics.WebPortal.PortalService.UpdateAccessGroupRequest inValue = new Encryptics.WebPortal.PortalService.UpdateAccessGroupRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.group_id = group_id;
            inValue.name = name;
            inValue.is_active = is_active;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateAccessGroupAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateCompanyResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompany(Encryptics.WebPortal.PortalService.UpdateCompanyRequest request) {
            return base.Channel.UpdateCompany(request);
        }
        
        public bool UpdateCompany(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Company updated_company) {
            Encryptics.WebPortal.PortalService.UpdateCompanyRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.updated_company = updated_company;
            Encryptics.WebPortal.PortalService.UpdateCompanyResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompany(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateCompanyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyAsync(Encryptics.WebPortal.PortalService.UpdateCompanyRequest request) {
            return base.Channel.UpdateCompanyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyResponse> UpdateCompanyAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.Company updated_company) {
            Encryptics.WebPortal.PortalService.UpdateCompanyRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.updated_company = updated_company;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyLexicons(Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsRequest request) {
            return base.Channel.UpdateCompanyLexicons(request);
        }
        
        public bool UpdateCompanyLexicons(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long[] lexicons) {
            Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.lexicons = lexicons;
            Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyLexicons(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateCompanyLexiconsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyLexiconsAsync(Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsRequest request) {
            return base.Channel.UpdateCompanyLexiconsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsResponse> UpdateCompanyLexiconsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long[] lexicons) {
            Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyLexiconsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.lexicons = lexicons;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyLexiconsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyDLPConfig(Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigRequest request) {
            return base.Channel.UpdateCompanyDLPConfig(request);
        }
        
        public bool UpdateCompanyDLPConfig(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyDLPConfig new_settings) {
            Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.new_settings = new_settings;
            Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyDLPConfig(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateCompanyDLPConfigResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyDLPConfigAsync(Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigRequest request) {
            return base.Channel.UpdateCompanyDLPConfigAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigResponse> UpdateCompanyDLPConfigAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyDLPConfig new_settings) {
            Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyDLPConfigRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.new_settings = new_settings;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyDLPConfigAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyDLPSettings(Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsRequest request) {
            return base.Channel.UpdateCompanyDLPSettings(request);
        }
        
        public bool UpdateCompanyDLPSettings(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyDLPSettings new_settings) {
            Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.new_settings = new_settings;
            Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyDLPSettings(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateCompanyDLPSettingsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyDLPSettingsAsync(Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsRequest request) {
            return base.Channel.UpdateCompanyDLPSettingsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsResponse> UpdateCompanyDLPSettingsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyDLPSettings new_settings) {
            Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyDLPSettingsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.new_settings = new_settings;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyDLPSettingsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyEmailTemplate(Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateRequest request) {
            return base.Channel.UpdateCompanyEmailTemplate(request);
        }
        
        public bool UpdateCompanyEmailTemplate(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyEmailTemplate template) {
            Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.template = template;
            Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyEmailTemplate(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateCompanyEmailTemplateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyEmailTemplateAsync(Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateRequest request) {
            return base.Channel.UpdateCompanyEmailTemplateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateResponse> UpdateCompanyEmailTemplateAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.CompanyEmailTemplate template) {
            Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyEmailTemplateRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.template = template;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyEmailTemplateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyGWConfig(Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigRequest request) {
            return base.Channel.UpdateCompanyGWConfig(request);
        }
        
        public bool UpdateCompanyGWConfig(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, bool is_enabled) {
            Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.is_enabled = is_enabled;
            Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyGWConfig(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateCompanyGWConfigResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateCompanyGWConfigAsync(Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigRequest request) {
            return base.Channel.UpdateCompanyGWConfigAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigResponse> UpdateCompanyGWConfigAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, bool is_enabled) {
            Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigRequest inValue = new Encryptics.WebPortal.PortalService.UpdateCompanyGWConfigRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.is_enabled = is_enabled;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateCompanyGWConfigAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateDeviceActivationResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDeviceActivation(Encryptics.WebPortal.PortalService.UpdateDeviceActivationRequest request) {
            return base.Channel.UpdateDeviceActivation(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateDeviceActivationStatus UpdateDeviceActivation(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code) {
            Encryptics.WebPortal.PortalService.UpdateDeviceActivationRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDeviceActivationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            inValue.activation_code = activation_code;
            Encryptics.WebPortal.PortalService.UpdateDeviceActivationResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDeviceActivation(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateDeviceActivationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDeviceActivationResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDeviceActivationAsync(Encryptics.WebPortal.PortalService.UpdateDeviceActivationRequest request) {
            return base.Channel.UpdateDeviceActivationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDeviceActivationResponse> UpdateDeviceActivationAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int activation_id, string activation_code) {
            Encryptics.WebPortal.PortalService.UpdateDeviceActivationRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDeviceActivationRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.activation_id = activation_id;
            inValue.activation_code = activation_code;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDeviceActivationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateDeviceStatusResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDeviceStatus(Encryptics.WebPortal.PortalService.UpdateDeviceStatusRequest request) {
            return base.Channel.UpdateDeviceStatus(request);
        }
        
        public bool UpdateDeviceStatus(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long device_id, Encryptics.WebPortal.PortalService.DeviceStatus new_status) {
            Encryptics.WebPortal.PortalService.UpdateDeviceStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDeviceStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.device_id = device_id;
            inValue.new_status = new_status;
            Encryptics.WebPortal.PortalService.UpdateDeviceStatusResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDeviceStatus(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateDeviceStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDeviceStatusResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDeviceStatusAsync(Encryptics.WebPortal.PortalService.UpdateDeviceStatusRequest request) {
            return base.Channel.UpdateDeviceStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDeviceStatusResponse> UpdateDeviceStatusAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long device_id, Encryptics.WebPortal.PortalService.DeviceStatus new_status) {
            Encryptics.WebPortal.PortalService.UpdateDeviceStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDeviceStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.device_id = device_id;
            inValue.new_status = new_status;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDeviceStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDLPRuleDetails(Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsRequest request) {
            return base.Channel.UpdateDLPRuleDetails(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsStatus UpdateDLPRuleDetails(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DLPRule rule) {
            Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.rule = rule;
            Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDLPRuleDetails(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateDLPRuleDetailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDLPRuleDetailsAsync(Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsRequest request) {
            return base.Channel.UpdateDLPRuleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsResponse> UpdateDLPRuleDetailsAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, Encryptics.WebPortal.PortalService.DLPRule rule) {
            Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDLPRuleDetailsRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.rule = rule;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDLPRuleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDLPRuleStatus(Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusRequest request) {
            return base.Channel.UpdateDLPRuleStatus(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusStatus UpdateDLPRuleStatus(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long rule_id, System.Nullable<long> entity_rule_id, bool is_enabled) {
            Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.rule_id = rule_id;
            inValue.entity_rule_id = entity_rule_id;
            inValue.is_enabled = is_enabled;
            Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDLPRuleStatus(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateDLPRuleStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDLPRuleStatusAsync(Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusRequest request) {
            return base.Channel.UpdateDLPRuleStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusResponse> UpdateDLPRuleStatusAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, long rule_id, System.Nullable<long> entity_rule_id, bool is_enabled) {
            Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDLPRuleStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.rule_id = rule_id;
            inValue.entity_rule_id = entity_rule_id;
            inValue.is_enabled = is_enabled;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDLPRuleStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDLPRulesVisibility(Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityRequest request) {
            return base.Channel.UpdateDLPRulesVisibility(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityStatus UpdateDLPRulesVisibility(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string rule_list) {
            Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.rule_list = rule_list;
            Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDLPRulesVisibility(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateDLPRulesVisibilityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateDLPRulesVisibilityAsync(Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityRequest request) {
            return base.Channel.UpdateDLPRulesVisibilityAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityResponse> UpdateDLPRulesVisibilityAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, string rule_list) {
            Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityRequest inValue = new Encryptics.WebPortal.PortalService.UpdateDLPRulesVisibilityRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.rule_list = rule_list;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateDLPRulesVisibilityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateEntitySoftwareRelease(Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseRequest request) {
            return base.Channel.UpdateEntitySoftwareRelease(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseStatus UpdateEntitySoftwareRelease(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int software_release_id) {
            Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseRequest inValue = new Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.software_release_id = software_release_id;
            Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateEntitySoftwareRelease(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateEntitySoftwareReleaseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateEntitySoftwareReleaseAsync(Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseRequest request) {
            return base.Channel.UpdateEntitySoftwareReleaseAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseResponse> UpdateEntitySoftwareReleaseAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int software_release_id) {
            Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseRequest inValue = new Encryptics.WebPortal.PortalService.UpdateEntitySoftwareReleaseRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.software_release_id = software_release_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateEntitySoftwareReleaseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateGWSettingResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateGWSetting(Encryptics.WebPortal.PortalService.UpdateGWSettingRequest request) {
            return base.Channel.UpdateGWSetting(request);
        }
        
        public bool UpdateGWSetting(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int ftc_id, string setting) {
            Encryptics.WebPortal.PortalService.UpdateGWSettingRequest inValue = new Encryptics.WebPortal.PortalService.UpdateGWSettingRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.ftc_id = ftc_id;
            inValue.setting = setting;
            Encryptics.WebPortal.PortalService.UpdateGWSettingResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateGWSetting(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateGWSettingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateGWSettingResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateGWSettingAsync(Encryptics.WebPortal.PortalService.UpdateGWSettingRequest request) {
            return base.Channel.UpdateGWSettingAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateGWSettingResponse> UpdateGWSettingAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long entity_id, int ftc_id, string setting) {
            Encryptics.WebPortal.PortalService.UpdateGWSettingRequest inValue = new Encryptics.WebPortal.PortalService.UpdateGWSettingRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.entity_id = entity_id;
            inValue.ftc_id = ftc_id;
            inValue.setting = setting;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateGWSettingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdatePasswordResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdatePassword(Encryptics.WebPortal.PortalService.UpdatePasswordRequest request) {
            return base.Channel.UpdatePassword(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdatePasswordStatus UpdatePassword(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int request_id, string code, string hash, string password) {
            Encryptics.WebPortal.PortalService.UpdatePasswordRequest inValue = new Encryptics.WebPortal.PortalService.UpdatePasswordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.request_id = request_id;
            inValue.code = code;
            inValue.hash = hash;
            inValue.password = password;
            Encryptics.WebPortal.PortalService.UpdatePasswordResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdatePassword(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdatePasswordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdatePasswordResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdatePasswordAsync(Encryptics.WebPortal.PortalService.UpdatePasswordRequest request) {
            return base.Channel.UpdatePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdatePasswordResponse> UpdatePasswordAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int request_id, string code, string hash, string password) {
            Encryptics.WebPortal.PortalService.UpdatePasswordRequest inValue = new Encryptics.WebPortal.PortalService.UpdatePasswordRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.request_id = request_id;
            inValue.code = code;
            inValue.hash = hash;
            inValue.password = password;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdatePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateRequestUserTransferResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateRequestUserTransfer(Encryptics.WebPortal.PortalService.UpdateRequestUserTransferRequest request) {
            return base.Channel.UpdateRequestUserTransfer(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateRequestUserTransferStatus UpdateRequestUserTransfer(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long request_id, string code, string signed_hash, bool is_accepted) {
            Encryptics.WebPortal.PortalService.UpdateRequestUserTransferRequest inValue = new Encryptics.WebPortal.PortalService.UpdateRequestUserTransferRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.request_id = request_id;
            inValue.code = code;
            inValue.signed_hash = signed_hash;
            inValue.is_accepted = is_accepted;
            Encryptics.WebPortal.PortalService.UpdateRequestUserTransferResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateRequestUserTransfer(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateRequestUserTransferResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateRequestUserTransferResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateRequestUserTransferAsync(Encryptics.WebPortal.PortalService.UpdateRequestUserTransferRequest request) {
            return base.Channel.UpdateRequestUserTransferAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateRequestUserTransferResponse> UpdateRequestUserTransferAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, long request_id, string code, string signed_hash, bool is_accepted) {
            Encryptics.WebPortal.PortalService.UpdateRequestUserTransferRequest inValue = new Encryptics.WebPortal.PortalService.UpdateRequestUserTransferRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.request_id = request_id;
            inValue.code = code;
            inValue.signed_hash = signed_hash;
            inValue.is_accepted = is_accepted;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateRequestUserTransferAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateSoftwareRelease(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseRequest request) {
            return base.Channel.UpdateSoftwareRelease(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResult UpdateSoftwareRelease(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.SoftwareRelease software_release) {
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseRequest inValue = new Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.software_release = software_release;
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateSoftwareRelease(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateSoftwareReleaseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateSoftwareReleaseAsync(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseRequest request) {
            return base.Channel.UpdateSoftwareReleaseAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseResponse> UpdateSoftwareReleaseAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, Encryptics.WebPortal.PortalService.SoftwareRelease software_release) {
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseRequest inValue = new Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.software_release = software_release;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateSoftwareReleaseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateSoftwareReleaseGlobalMinimum(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumRequest request) {
            return base.Channel.UpdateSoftwareReleaseGlobalMinimum(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumStatus UpdateSoftwareReleaseGlobalMinimum(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int software_release_id) {
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumRequest inValue = new Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.software_release_id = software_release_id;
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateSoftwareReleaseGlobalMinimum(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateSoftwareReleaseGlobalMinimumResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateSoftwareReleaseGlobalMinimumAsync(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumRequest request) {
            return base.Channel.UpdateSoftwareReleaseGlobalMinimumAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumResponse> UpdateSoftwareReleaseGlobalMinimumAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int software_release_id) {
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumRequest inValue = new Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseGlobalMinimumRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.software_release_id = software_release_id;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateSoftwareReleaseGlobalMinimumAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusResponse Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateSoftwareReleaseActiveStatus(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusRequest request) {
            return base.Channel.UpdateSoftwareReleaseActiveStatus(request);
        }
        
        public Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusStatus UpdateSoftwareReleaseActiveStatus(ref Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int software_release_id, bool is_active) {
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.software_release_id = software_release_id;
            inValue.is_active = is_active;
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusResponse retVal = ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateSoftwareReleaseActiveStatus(inValue);
            TokenAuth = retVal.TokenAuth;
            return retVal.UpdateSoftwareReleaseActiveStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusResponse> Encryptics.WebPortal.PortalService.PortalServiceSoap.UpdateSoftwareReleaseActiveStatusAsync(Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusRequest request) {
            return base.Channel.UpdateSoftwareReleaseActiveStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusResponse> UpdateSoftwareReleaseActiveStatusAsync(Encryptics.WebPortal.PortalService.TokenAuth TokenAuth, int software_release_id, bool is_active) {
            Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusRequest inValue = new Encryptics.WebPortal.PortalService.UpdateSoftwareReleaseActiveStatusRequest();
            inValue.TokenAuth = TokenAuth;
            inValue.software_release_id = software_release_id;
            inValue.is_active = is_active;
            return ((Encryptics.WebPortal.PortalService.PortalServiceSoap)(this)).UpdateSoftwareReleaseActiveStatusAsync(inValue);
        }
    }
}
