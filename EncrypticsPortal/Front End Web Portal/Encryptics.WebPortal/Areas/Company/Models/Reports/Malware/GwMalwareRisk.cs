using AutoMapper;
using Encryptics.WebPortal.Helpers;
using Encryptics.WebPortal.PortalService;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;

namespace Encryptics.WebPortal.Areas.Company.Models.Reports.Malware
{
    public class GwMalwareRisk
    {
        [Display(Name = "Risk Name")]
        public string RiskName { get; set; }

        [Display(Name = "Total Violations")]
        public long TotalViolations { get; set; }

        //[Display(Name = "Violation Percentage")]
        //public double ViolationPercentage { get; set; }
    }

    public sealed class GWMalwareRiskReportDefinition : GWReportDefinition
    {
        public GWMalwareRiskReportDefinition()
        {
            Id = GetHashCode();
            Name = "Malware Risk Overview";
            HasTopCountParameter = false;
            DefaultSortColumn = "RiskName";
            ReportType = "MalwareRiskOverview";
            ShowGraphOnly = true;
        }

        public override void FillData(TokenAuth token, ReportParametersModel reportParameters, PortalServiceSoap portalService, ReportParams requestParameters, bool generateChartData)
        {
            var reportRequest = new GetMalwareRiskOverviewRequest(token, reportParameters.EntityId, null, requestParameters);
            var overviewReport = portalService.GetMalwareRiskOverview(reportRequest);
            var risks =
                Mapper.Map<MalwareRiskOverviewItem[], IEnumerable<GwMalwareRisk>>(
                    overviewReport.GetMalwareRiskOverviewResult.Risks).ToArray();
            reportParameters.ReportData = risks.ToDataTable(reportParameters.DefaultSortColumn);
            reportParameters.TotalRecords = overviewReport.GetMalwareRiskOverviewResult.TotalViolations;

            if (!generateChartData) return;

            requestParameters.Page = 1;
            requestParameters.RecordsPerPage = int.MaxValue;

            overviewReport = portalService.GetMalwareRiskOverview(reportRequest);
            var chartDataTable = Mapper.Map<MalwareRiskOverviewItem[], IEnumerable<GwMalwareRisk>>(
                    overviewReport.GetMalwareRiskOverviewResult.Risks).ToArray().ToDataTable(reportParameters.DefaultSortColumn);

            GenerateJsonChartData(chartDataTable, reportParameters);
        }
    }
}