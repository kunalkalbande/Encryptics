@using Encryptics.WebPortal.IdentityModel
@model Encryptics.WebPortal.Areas.UserAdmin.Models.ActiveAccountsSearchModel

@{
    var encrypticsUser = ViewHelper.GetEncrypticsUser();
    ViewData.TemplateInfo.HtmlFieldPrefix = "SuspendedAccountSearchParameters";
}

@*<div style="position: relative">
    <div class="waitingOverlay hidden"></div>*@
@using (Html.BeginForm("AjaxSearchSuspendedAccounts", "UserAdminHome", new { entityId = ViewBag.EntityId, area = "UserAdmin" }, FormMethod.Post, new { id = "SuspendedUsersSearchForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.SearchType)
    @Html.HiddenFor(m => m.SortField)
    @Html.HiddenFor(m => m.SortOrder)
    @Html.HiddenFor(m => m.ItemCount)
    @Html.Hidden("SavedSearchTerm", Model.SearchTerm)
    <div class="dataTableToolbar">
        <div class="pagingBar">Show @Html.DropDownListFor(m => m.PageSize, Model.PageSizes, new { @id = "suspendedAccountsPageSizeDropDown" })</div>
        <div class="filterResults">
            @Html.TextBoxFor(m => m.SearchTerm, new { @class = "smallerSearchField", placeholder = "Filter by name..." })
            <input type="submit" name="SearchSuspendedAccountsButton" id="searchSuspendedAccountsButton" value="Apply" class="filterButton">
            <input type="button" class="clearButton" id="clearSuspendedAccountsFilter" value="x" @if (string.IsNullOrEmpty(Model.SearchTerm))
                                                                                                 {<text>disabled="disabled"</text>}>
        </div>
        <ul class="tableActions">
        @if (EncrypticsPrincipal.CurrentEncrypticsUser.HasPermission("UserAdmin/UserAdminHome/AjaxReinstateUsers"))
        {
            <li>
                <input type="checkbox" value="all" id="selectAllSuspendedAccounts" />
            </li>
            <li>
                <input type="button" value="reactivate users" id="reinstateUsers" disabled="disabled">
            </li>
        }
        </ul>
    </div>

    <table class="newDataTable" style="width: 100% !important">
        <tbody>
            @Html.DisplayFor(m => m.ActiveAccounts, "SuspendedAccountsList", new { Model.PageCount, Model.CurrentPage, })
            <tr class="tableFooter">
                <td colspan="5">
                    <span>@if (Model.CurrentPage > 1)
                          {
                        <a href="#" id="prevSuspendedAccountPage">&laquo; prev</a>
                          }
                          else
                          {
                        <text>&laquo; prev</text>
                          }</span>
                    <span class="pagingBar">Page
                    @Html.DropDownListFor(m => m.CurrentPage, Model.PageList, new { @id = "suspendedAccountsPageDropDown" })
                        of @Model.PageCount
                    </span>
                    <span>@if (Model.PageCount > Model.CurrentPage)
                          {
                        <a href="#" id="nextSuspendedAccountPage">next &raquo;</a>
                          }
                          else
                          {
                        <text>next &raquo;</text>
                          }</span>
                </td>
            </tr>
        </tbody>
    </table>
}
@*</div>*@
