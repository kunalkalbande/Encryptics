@using System.Web.Configuration
@using Encryptics.WebPortal.Properties
@model Encryptics.WebPortal.Models.LocalPasswordModel

<style>
    .leftSide {
        width: 40%;
        float: left;
        padding-left: 15px;
    }

        .leftSide h3 {
            margin-bottom: 20px;
        }

    .rightSide {
        width: 40%;
        float: right;
    }

    #changePasswordButton {
        position: relative;
        bottom: 0;
        right: 0;
        float: right;
    }

    #statusMessage {
        position: relative;
        top: -10px;
        min-height: 15px;
    }

    #errorMessages, #statusMessage {
        font-family: ProximaNova-Regular;
        font-size: small;
        font-weight: bold;
    }

    #errorMessages {
        color: darkred;
        min-height: 30px;
    }
</style>

<div class="leftSide">
    <h3 style="text-align: left !important">@Resources.ManagePasswordPartialTitle</h3>
    <div id="statusMessage">@ViewBag.StatusMessage</div>
    @using (Html.BeginForm("JsonChangePassword", "UserHome", new { area = "UserAccount" }, FormMethod.Post, new { AutoComplete = "off", id = "changePasswordForm" }))
    {
        @Html.AntiForgeryToken()
        <fieldset>
            <legend>@*Change Password Form*@</legend>
            <ol>
                <li id="errorMessages"></li>
                <li>
                    @Html.LabelFor(m => m.OldPassword)
                    @Html.PasswordFor(m => m.OldPassword, new { autocomplete = "off" })
                    @Html.ValidationMessageFor(m => m.OldPassword)
                </li>
                <li>
                    @Html.LabelFor(m => m.NewPassword)
                    @Html.PasswordFor(m => m.NewPassword)
                    @Html.ValidationMessageFor(m => m.NewPassword)
                </li>
                <li>
                    @Html.LabelFor(m => m.ConfirmPassword)
                    @Html.PasswordFor(m => m.ConfirmPassword)
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </li>
                <li>@{
        bool displayCaptcha;
        bool.TryParse(WebConfigurationManager.AppSettings["CaptchaEnabled"], out displayCaptcha);
        if (displayCaptcha)
        {
    <script src='https://www.google.com/recaptcha/api.js'></script>
                    <div class="g-recaptcha float-left" data-sitekey="@WebConfigurationManager.AppSettings["CaptchaSiteKey"]" style="margin-bottom:10px;"></div>
        }
                }
                </li>
            </ol>
            <a href="#" id="changePasswordButton" class="button ">@Resources.SubmitDisplay <span>></span></a>
        </fieldset>
    }
</div>
@{
    var imageLocation = Url.Content(string.Format("~/Images/{0}.png", ViewBag.Image));
}
<div class="rightSide">
    <div style="float: left">
        <img src="@Html.Raw(imageLocation)" alt=""/>
    </div>
</div>
