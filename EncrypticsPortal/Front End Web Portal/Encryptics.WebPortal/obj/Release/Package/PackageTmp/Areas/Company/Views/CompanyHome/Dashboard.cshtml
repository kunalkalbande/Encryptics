@using System.Web.Configuration
@using Encryptics.WebPortal.Helpers
@using Google.DataTable.Net.Wrapper
@model Encryptics.WebPortal.Areas.Company.Models.CompanySummaryModel

@{
    var encrypticsUser = ViewHelper.GetEncrypticsUser();
    ViewBag.Title = "Manage Company";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool showZDPSection;
    bool.TryParse(WebConfigurationManager.AppSettings["enableZDPVisibility"], out showZDPSection);
    bool showReleasesSection;
    bool.TryParse(WebConfigurationManager.AppSettings["enableReleasesVisibility"], out showReleasesSection);
}

<div class="pageHeader">
    <h1>@Html.DisplayFor(m => m.Name)</h1>
    @*@if (encrypticsUser.CompanyCount > 1)
    {
        *@<h4 class="breadcrumbs">
            <a href="@Url.Action("Index", "Home", new { area = string.Empty })">
                <img src="~/Images/icons/house.png" alt="" /></a>
            &gt; 
            <span>@ViewBag.Title</span>
        </h4>
    @*}
    else
    {
        <br />
    }*@
</div>

@Html.Partial("_Announcements")

@Html.Partial("_ErrorMessages")

@Html.Partial("_SuccessMessage")

<ul class="toolbar" id="actionToolbar">
    @if (encrypticsUser.HasPermission("Company/CompanyHome/EditCompanyDetails") || encrypticsUser.HasPermission("Company/CompanyHome/AddLicenses") || encrypticsUser.HasPermission("Company/CompanyDomain/Index"))
    {
        <li>
            <a href="#">
                <div>Company</div>
            </a>
            <ul id="companyMenu">
                @if (encrypticsUser.HasPermission("Company/CompanyHome/EditCompanyDetails"))
                {
                    <li><a href="@Url.Action("EditCompanyDetails", new { entityId = Model.Id })">
                        <div>Edit Company Details</div>
                    </a></li>
                }
                @if (encrypticsUser.HasPermission("Company/CompanyHome/AddLicenses"))
                {
                    <li><a href="#" id="showAddLicenseDialogButton">
                        <div>Add Licenses</div>
                    </a></li>
                }
                @if (encrypticsUser.HasPermission("Company/CompanyDomain/Index"))
                {
                    <li><a href="@Url.Action("Index", "CompanyDomain", new { entityId = Model.Id }, null)">
                        <div>Manage Domains</div>
                    </a></li>
                }
            </ul>
        </li>
    }
    @if (encrypticsUser.HasPermission("UserAdmin/UserAdminHome/ManageAccounts") || encrypticsUser.HasPermission("UserAdmin/UserAdminHome/AddNewUser") || encrypticsUser.HasPermission("UserAdmin/UploadAccounts/Index"))
    {
        <li>
            <a href="#">
                <div>Users</div>
            </a>
            <ul style="left: -1px;">
                @if (encrypticsUser.HasPermission("UserAdmin/UserAdminHome/ManageAccounts"))
                {
                    <li><a href="@Url.Action("ManageAccounts", "UserAdminHome", new { area = "UserAdmin", entityId = Model.Id })">
                        <div>Manage Users</div>
                    </a></li>  
                }
                @if (encrypticsUser.HasPermission("UserAdmin/UserAdminHome/AddNewUser"))
                {
                    <li><a href="@Url.Action("AddNewUser", "UserAdminHome", new { area = "UserAdmin", entityId = Model.Id })">
                        <div>Add a User</div>
                    </a></li>
                }
                @if (encrypticsUser.HasPermission("UserAdmin/UploadAccounts/Index"))
                {
                    <li><a href="@Url.Action("Index", "UploadAccounts", new { area = "UserAdmin", entityId = Model.Id })">
                        <div>Upload a List of Users</div>
                    </a></li>
                }
                @*@if (encrypticsUser.HasPermission("Company/DistributionGroup/Index"))
                {
                    <li><a href="@Url.Action("Index", "DistributionGroup", new { area = "Company", entityId = Model.Id })">
                        <div>Distribution Groups</div>
                    </a></li>
                }
                @if (encrypticsUser.HasPermission("Company/UsageRightsGroup/Index"))
                {
                    <li><a href="@Url.Action("Index", "UsageRightsGroup", new { area = "Company", entityId = Model.Id })">
                        <div>Usage Rights Groups</div>
                    </a></li>
                }*@
            </ul>
        </li>
    }
    @if (encrypticsUser.HasPermission("Company/Reports/RetrieveReportResults"))
    {
        <li>
            <a href="@Url.Action("RetrieveReportResults", "Reports", new { entityId = Model.Id })">
                <div>Reports</div>
            </a>
            @*<ul>
            <li><a href="@Url.Action("RetrieveReportResults", "Reports", new { entityId = Model.Id })">
                <div>General Usage</div>
            </a></li>
        @if (Model.PBPEnabled)
                {
            <li><a href="@Url.Action("RetrieveReportResults", "Reports", new { entityId = Model.Id })">
                <div>Policy Based Protection</div>
            </a></li>}
        @if (Model.ZDPEnabled)
                {
            <li><a href="@Url.Action("RetrieveReportResults", "Reports", new { entityId = Model.Id })">
                <div>Zero Day Protection</div>
            </a></li>}
        </ul>*@
        </li>
    }
    @if (/*encrypticsUser.HasPermission("Company/CompanyProductVersionModel/Index") || */ (Model.ZDPEnabled && (encrypticsUser.HasPermission("Company/PolicyBasedProtection/ConfigurePolicies") || encrypticsUser.HasPermission("Company/PolicyBasedProtection/AssignRules"))) ||
        (Model.PBPEnabled || encrypticsUser.HasPermission("Company/ZeroDayProtection/ConfigureSettings")))
    {
        <li id="configurationMenu">
            <a href="#">
                <div>Configuration</div>
            </a>
            <ul id="configuratinMenu">
                @if (encrypticsUser.HasPermission("Company/CompanyHome/EditCompanySettings"))
                {
                    <li><a href="@Url.Action("EditCompanySettings", "CompanyHome", new { entityId = Model.Id })">
                        <div>Edit Company Settings</div>
                    </a></li>
                }
                @if (showReleasesSection && encrypticsUser.HasPermission("Company/CompanyProductVersion/Index"))
                {
                    <li><a href="@Url.Action("Index", "CompanyProductVersion", new { entityId = Model.Id })">
                        <div>Product Versions</div>
                    </a></li>
                }
                @if (Model.PBPEnabled && (encrypticsUser.HasPermission("Company/PolicyBasedProtection/ConfigurePolicies") || encrypticsUser.HasPermission("Company/PolicyBasedProtection/AssignRules")))
                {
                    if (encrypticsUser.HasPermission("Company/PolicyBasedProtection/ConfigurePolicies"))
                    {
                    <li><a href="@Url.Action("ConfigurePolicies", "PolicyBasedProtection", new { entityId = Model.Id })">
                        <div>Manage PBP Policies</div>
                    </a></li>
                    }
                    if (encrypticsUser.HasPermission("Company/PolicyBasedProtection/AssignRules"))
                    {
                    <li><a href="@Url.Action("AssignRules", "PolicyBasedProtection", new { entityId = Model.Id })">
                        <div>Administer PBP Policy Set</div>
                    </a></li>
                    }
                }
                @if (showZDPSection && Model.ZDPEnabled && encrypticsUser.HasPermission("Company/ZeroDayProtection/ConfigureSettings"))
                {
                    <li><a href="@Url.Action("ConfigureSettings", "ZeroDayProtection", new { entityId = Model.Id })">
                        <div>Configure Zero Day Settings</div>
                    </a></li>
                }
            </ul>
        </li>
    }
</ul>

<div class="featured dark">
    <div class="featuredArea floatright">
        @Html.DisplayFor(m => m.Domains, "CompanyDomainList")
    </div>
    <div class="featuredArea floatleft">
        <div class="summarySection">
            <span class="summaryLabel">@Html.DisplayNameFor(m => m.EntityType)</span><br />
            @Model.EntityType.GetDisplay()
        </div>
        <div class="summarySection">
            <span class="summaryLabel">@Html.DisplayNameFor(m => m.CreatedDate)</span><br />
            @Html.DisplayFor(m => m.CreatedDate)
        </div>
        <div class="summarySection">
            <span class="summaryLabel">@Html.DisplayNameFor(m => m.GlobalExpirationDate)</span><br />
            @Html.DisplayFor(m => m.GlobalExpirationDate) @if (Model.GlobalExpirationDate != null && DateTime.Today >= Model.GlobalExpirationDate && Model.UseGlobalExpirationDate)
                                                          { <span class="orangeText summaryInfo">Expired</span>}&nbsp;
        </div>
        <div class="summarySection" id="licensingSection">
            <span class="summaryLabel">@Html.DisplayNameFor(m => m.LicenseSummary)</span>
            @Html.DisplayFor(m => m.LicenseSummary)
        </div>
    </div>
    <div style="clear: both"></div>
</div>

<section id="graphSection">
    <div id="usageGraph">&nbsp;</div>

    <div id="dailyOverlay" class="@if (ViewBag.UsageSummary == "Monthly")
                                  {@Html.Raw("hidden")}">
        <input type="button" value="back to monthly" id="backToMonthly" />
    </div>
</section>

<div id="summaryArea">
    <div id="reportsArea" class="area">
        <div id="reportsSummary" class="areaSection">
            <h3>Five Most Active Users</h3>
            <div id="reportsSummaryChart"></div>
        </div>
    </div>

    <div id="pbpArea" class="area">
        <div id="pbpSummary" class="areaSection">
            <h3>Policy Based Protection</h3>
            @if (Model.PBPEnabled)
            {
                <div class="simpleNumericReport">@*<a href="#">*@<span class="reportNumber">@Html.DisplayFor(m => m.PBPViolations)</span><span class="reportLabel">@Html.DisplayNameFor(m => m.PBPViolations)</span>@*</a>*@</div>
                <div class="simpleNumericReport">@*<a href="#">*@<span class="reportNumber">@Html.DisplayFor(m => m.PBPExceptions)</span><span class="reportLabel">@Html.DisplayNameFor(m => m.PBPExceptions)</span>@*</a>*@</div>
            }
            else
            {
                <div id="pbpDisabled" class="disabledFeature">
                    <p>Automatically encrypt messages with @WebConfigurationManager.AppSettings["CompanyName"] Policy Based Protection (PBP). Set policies to catch and secure common PII patterns, or create your own.</p>
                    <p>Contact your @WebConfigurationManager.AppSettings["CompanyName"] Account Manager to learn more.</p>
                </div>
            }
        </div>
    </div>

    @if (showZDPSection)
    {
        <div id="zdpArea" class="area">
            <div id="zdpSummary" class="areaSection">
                <h3>Zero Day Protection</h3>
                @if (Model.ZDPEnabled)
                {
                    <div class="simpleNumericReport">@*<a href="#">*@<span class="reportNumber">@Html.DisplayFor(m => m.ZDPViolations)</span><span class="reportLabel">@Html.DisplayNameFor(m => m.ZDPViolations)</span>@*</a>*@</div>
                    <div class="simpleNumericReport">@*<a href="#">*@<span class="reportNumber">@Html.DisplayFor(m => m.ZDPViolatingUsers)</span><span class="reportLabel">@Html.DisplayNameFor(m => m.ZDPViolatingUsers)</span>@*</a>*@</div>
                }
                else
                {
                    <div id="zdpDisabled" class="disabledFeature">
                        <p>Reduce risks associated with malware and viruses by proactively scanning attachments. ZDP runs integrity checks before recipients send or receive files.</p>
                        <p>Contact your @WebConfigurationManager.AppSettings["CompanyName"] Account Manager to learn more.</p>
                    </div>
                }
            </div>
        </div>
    }
</div>

<div id="addLicensesDialog" class="dialog">
    @using (Html.BeginForm("AddLicenses", "CompanyHome", new { entityId = Model.Id, month = ViewBag.Month, year = ViewBag.Year }, FormMethod.Post, new { @id = "addLicenseForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.Label("", "Amount to Transfer")
        @Html.TextBox("transferAmount", 1, new { @id = "licenseTransferAmount" })
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="https://www.google.com/jsapi"> </script>
    <script type="text/javascript">
        var usageSummaryChartData;
        var usageSummaryChart;

        google.load("visualization", "1", { packages: ["corechart", "table"], 'language': '@Html.Raw(UICulture)' });
        google.setOnLoadCallback(initializeSummaryChart);

        function initializeSummaryChart() {
            usageSummaryChartData = new google.visualization.DataTable('@Html.Raw(SystemDataTableConverter.Convert(Model.EncrypticsUsage).GetJson())');
            usageSummaryChart = new google.visualization.AreaChart($('#usageGraph').get(0));

            drawMonthlyUsageSummaryChart();
        }

        function drawUsageSummaryChart(title) {
            usageSummaryChart.draw(usageSummaryChartData, { colors: ['#6690CB', '#F28B20'], title: title + " Encryptics Usage Summary", legend: { position: 'top', maxLines: 1 }, hAxis: { title: 'Time' }, vAxis: { title: 'Usage' } });
        }

        function drawMonthlyUsageSummaryChart() {
            google.visualization.events.addOneTimeListener(usageSummaryChart, 'select', retrieveDailyChart);
            drawUsageSummaryChart('Monthly');
            $('#dailyOverlay').addClass('hidden');
        }

        function drawDailyUsageSummaryChart() {
            drawUsageSummaryChart('Daily');
            $('#dailyOverlay').removeClass('hidden');
        }

        function retrieveDailyChart() {
            var selectedItem = usageSummaryChart.getSelection()[0];

            if (selectedItem) {
                var value = usageSummaryChartData.getValue(selectedItem.row, 0);

                ajaxGet('@Url.Action("AjaxGetDailyUsageSummary", new { entityId = Model.Id })?month=' + value.getMonth() + '&year=' + value.getFullYear(), function (response) {
                    ajaxResponseReturned(response, function (data) {
                        // Create our data table out of JSON data loaded from server.
                        usageSummaryChartData = new google.visualization.DataTable(data);

                        drawDailyUsageSummaryChart();
                    });
                }, function (error) {
                    console.log(error);
                });
            }
        }

        function retrieveMonthlyChart() {
            ajaxGet('@Url.Action("AjaxGetMonthlyUsageSummary", new { entityId = Model.Id })', function (response) {
                ajaxResponseReturned(response, function (data) {
                    // Create our data table out of JSON data loaded from server.
                    usageSummaryChartData = new google.visualization.DataTable(data);

                    drawMonthlyUsageSummaryChart();
                });
            });
        }

        function drawTop5Chart() {
            var data = new google.visualization.DataTable('@Html.Raw(SystemDataTableConverter.Convert(Model.TopFiveUsers).GetJson())');
            var numberOfRows = data.getNumberOfRows();

            if (numberOfRows > 0) {
                var chart = new google.visualization.PieChart($('#reportsSummaryChart').get(0));
                var colors = ['#349AE9', '#CCCCCC', '#F28B20', '#5E894A', '#76373C'];

                google.visualization.events.addListener(chart, 'select', function () {
                    var selectedItem = chart.getSelection()[0];
                    if (selectedItem) {
                        var value = data.getValue(selectedItem.row, 0);
                        window.location = '@Url.Action("LocateActiveAccountByEmail", "Admin", new { area = "UserAccount", entityId = Model.Id })?email=' + value;
                    }
                });

                var chartWidth = 600;
                var chartHeight = 320;

                if (isTablet) {
                    chartWidth = 400;
                }

                if (isPhone) {
                    chartWidth = 320;
                    chartHeight = 180;
                }

                chart.draw(data, {
                    colors: colors,
                    legend: { position: 'right' },
                    width: chartWidth,
                    height: chartHeight,
                    chartArea: { width: chartWidth, height: 310 }
                });
            } else {
                $('#reportsSummaryChart').html('<p>{No Usage to Report}</p>');
            }
        }

        function getChartColors(numberOfItems, color1, color2, color3, color4) {
            var rainbow = new Rainbow();
            var colorArray = new Array();

            rainbow.setNumberRange(1, numberOfItems);
            rainbow.setSpectrum(color1, color2, color3, color4);

            for (var i = 0; i < numberOfItems; i++) {
                var hexColour = rainbow.colourAt(i + 1);
                colorArray[i] = '#' + hexColour;
            }

            return colorArray;
        }

        /* Other stuff */
        $(document).ready(function () {

            $('#backToMonthly').click(function () {
                retrieveMonthlyChart();
            });

            var value;
            var $container = $("#licenseTransferAmount");

            $container.spinner({
                min: 1,
            }).focus(function () {
                value = $container.val();
            }).blur(function () {
                var value1 = $container.val();
                if (value1 < 0) {
                    $container.val(value);
                }
                if (isNaN(value1)) {
                    $container.val(value);
                }
            });

            google.setOnLoadCallback(drawTop5Chart);

            $('#showAddLicenseDialogButton').click(function (e) {
                e.preventDefault();
                $('#addLicensesDialog').dialog({
                    title: "Add New Liceneses",
                    width: "345",
                    resizable: false,
                    modal: true,
                    buttons: {
                        "Add Licenses": function () {
                            $('#addLicenseForm').submit();
                        },
                        "Cancel": function () { $(this).dialog("close"); }
                    }
                }).dialog("open");
            });
        });
    </script>
}

@section styles{
    <style>
        #companyMenu {
            width: 239px;
        }

        #configuratinMenu {
            left: -1px;
            width: 241px;
        }

        @@media only screen and (device-width: 768px) {
            /* For general iPad layouts */
            #companyMenu {
                width: 150px;
            }

            #configuratinMenu {
                width: 150px;
            }
        }

        @@media only screen and (max-device-width:736px), only screen and (width:375px) {
            #domainCreatedDateHeader {
                display: none;
            }

            .domainCreatedDateColumn {
                display: none;
            }
        }

        #reportsSummary {
            position: relative;
        }

        #reportsSummaryChart p {
            padding: 1.9em;
            font-size: 1.75em;
            text-align: center;
        }

        .disabledFeature p {
            padding: 10px;
            font-size: 0.75em;
            text-align: justify;
        }

        #zdpDisabled p {
            color: white;
        }

        #clearActiveAccountsFilter, #clearPendingAccountsFilter {
            background: #f28b20;
        }

        #searchActiveAccountsButton, #searchPendingAccountsButton {
            margin-top: 4px !important;
        }

        #activeAccounts input, #pendingAccounts input {
            font-size: 13px;
        }

        #graphSection {
            margin: 0;
            padding: 0;
            position: relative;
        }

        #dailyOverlay {
            position: absolute;
            right: 50%;
            top: 4px;
        }

        #backToMonthly {
            font-size: smaller;
        }

        #usageGraph {
            background-color: white;
            border: 1px solid #ccc;
            display: block;
            height: 200px;
            margin-top: 0;
            min-height: 200px;
            min-width: 958px;
            padding: 0;
            width: 958px;
        }

        @@media only screen and (device-width: 768px) {
            /* For general iPad layouts */
            #usageGraph {
                min-width: 746px;
                width: 746px;
            }
        }

        .featured h3, .areaSection h3 {
            border-bottom: solid 1px #ddd;
            color: #eee;
            font-size: 1em;
            margin-bottom: 15px;
        }

        .featuredArea {
            max-width: 50%;
            min-width: 30%;
        }

        .floatleft {
            float: left;
        }

        .floatright {
            float: right;
        }

        .area {
            float: left;
            margin-right: 20px;
            margin-top: 20px;
            max-width: 308px;
            min-height: 400px;
            min-width: 308px;
        }

        .areaSection {
            min-height: 377px;
        }

        @@media only screen and (max-device-width:736px), only screen and (width:375px) {
            .area {
                min-height: 265px;
            }

            .areaSection {
                min-height: 265px;
            }
        }

        .dark .summaryLabel {
            color: #999;
            font-size: 0.5em;
            text-transform: uppercase;
        }

        .dark .summaryInfo {
            font-size: 1.0em;
            text-transform: uppercase;
        }

        .dark .summarySection {
            color: #fff;
            font-size: 1.5em;
            margin: 0;
            padding: 0;
        }

        .dark .summaryUnit {
            color: #999;
            font-size: 0.7em;
        }

        .dark .summarySeparator {
            color: #999;
            font-size: 1.2em;
        }

        #entityArea .summaryLabel {
            background-color: #ccc;
            font-weight: bold;
            padding: 2px 5px;
        }

            #entityArea .summaryLabel:after {
                content: ":";
            }

        #entityArea .summarySection {
            margin-bottom: 15px;
        }

        #entityArea h3 {
            margin-bottom: 20px;
        }

        #reportsArea {
            border: 1px solid #76373C;
            color: #fff;
            height: 398px;
            margin-left: 0;
            max-width: 618px;
            min-width: 618px;
        }

        @@media only screen and (device-width: 768px) {
            /* For general iPad layouts */
            #reportsArea {
                height: 200px;
                max-width: 400px;
                min-width: 400px;
            }
        }

        #reportsSummaryChart {
            float: left;
        }

        @@media only screen and (max-device-width:736px), only screen and (width:375px) {
            /* For general iPhone 6 layouts */
            #reportsArea {
                height: 100px;
            }
        }

        #reportsArea h3 {
            background-color: #76373C;
            padding: 15px 10px;
        }

        #pbpArea {
            background-color: #F28B20;
            border: 1px solid #F28B20;
            height: 188px;
            margin-right: 0;
            max-height: 188px;
            max-width: 318px;
            min-height: 188px;
            min-width: 318px;
            height: 185px;
            min-height: 185px;
        }

            #pbpArea h3 {
                background: #fff;
                border-bottom: none;
                color: #6c4128;
                padding: 15px 10px;
            }

            #pbpArea .simpleNumericReport {
                border-right: solid 2px #6c4128;
                color: #6c4128;
            }

                #pbpArea .simpleNumericReport span {
                    color: #6c4128;
                }

                #pbpArea .simpleNumericReport:last-child {
                    border: none;
                }

        #pbpSummary {
            height: 162px;
            min-height: 162px;
            position: relative;
        }

        #zdpArea {
            background-color: #666;
            border: 1px solid #666;
            height: 188px;
            margin-right: 0;
            max-height: 188px;
            max-width: 318px;
            min-height: 188px;
            min-width: 318px;
            height: 183px;
            margin-top: 30px;
            min-height: 183px;
        }

        @@media only screen and (max-device-width:736px), only screen and (width:375px) {
            #pbpArea, #zdpArea, #usageGraph, .area, #reportsArea {
                max-width: 99.5%;
                min-width: 99.5%;
            }
        }

        #zdpArea h3 {
            background: #fff;
            border-bottom: none;
            color: #999;
            padding: 15px 10px;
        }

        #zdpSummary {
            height: 160px;
            min-height: 160px;
            position: relative;
        }

        .simpleNumericReport {
            float: left;
            padding: 0 4%;
            width: 41%;
        }

            .simpleNumericReport .reportNumber {
                display: block;
                font-size: 4em;
                text-align: center;
            }

            .simpleNumericReport .reportLabel {
                display: block;
                font-size: .8em;
                text-align: center;
                text-transform: uppercase;
            }

            .simpleNumericReport a {
                padding: 0;
                text-decoration: none;
            }

                .simpleNumericReport a:hover {
                    text-decoration: underline;
                }

        #zdpArea .simpleNumericReport {
            border-right: solid 2px #bbb;
            color: #bbb;
        }

            #zdpArea .simpleNumericReport span {
                color: #bbb;
            }

            #zdpArea .simpleNumericReport:last-child {
                border: none;
            }

        #accounts {
            display: block;
            float: left;
            margin-top: 20px;
            width: 100%;
        }

        .accountSection {
            background-color: white;
            border: 1px solid #ccc;
            padding: 15px;
        }

        #accountActions {
            height: 32px;
        }

        ul#accountActions li {
            display: inline;
            line-height: 33px;
            list-style: none outside none;
            padding: 15px 15px 8px 15px;
        }

            ul#accountActions li a {
                font-family: SohoStd-ExtraLight;
                font-size: 24px;
                line-height: 25px;
                text-decoration: none;
            }

            ul#accountActions li.active {
                background-color: white;
                border-left: 1px solid #ccc;
                border-right: 1px solid #ccc;
                border-top: 1px solid #ccc;
            }

        #licenseTransferAmount {
            width: 95%;
        }

        #actionToolbar li:last-child a div {
            border-right: none;
        }

        @@media only screen and (max-device-width:736px), only screen and (width:375px) {
            #configurationMenu {
                width: 29% !Important;
            }

            #licensingSection {
                width: 200%;
            }
        }
    </style>
}